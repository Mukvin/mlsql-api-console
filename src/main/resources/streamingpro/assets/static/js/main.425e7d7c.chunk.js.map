{"version":3,"sources":["v1/analysis/common/actions/SetStateAction.js","serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","v1/service/CodeIntellegence.js","service/HTTPMethod.js","service/BackendConfig.js","user/MLSQLAuth.js","service/MLSQLAPI.js","components/et/ButtonToCommand.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/async_execute/ResourceProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","common/tool.js","components/MLSQLQueryDisplay.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/async_execute/QueryHistory.js","components/query/MLSQLDash.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/workshop_tables/actions/LoadAction.js","v1/analysis/workshop_tables/actions/OpenAction.js","v1/analysis/workshop_tables/actions/DeleteAction.js","v1/analysis/workshop_tables/actions/ExportToAction.js","v1/analysis/workshop_tables/actions/WorkshopTablesReducer.js","v1/analysis/workshop_tables/WorkshopTables.js","v1/analysis/hive/actions/LoadAction.js","v1/analysis/hive/actions/OpenAction.js","v1/analysis/hive/actions/SearchAction.js","v1/analysis/hive/actions/HiveTablesReducer.js","v1/analysis/hive/HiveTables.js","v1/analysis/hive/pages/usePartitionSelect.js","v1/analysis/datasource/actions/OpenMySQLTableAction.js","v1/analysis/datasource/actions/MysqlTreeReducer.js","v1/analysis/common/pages/useIntegerStep.js","v1/analysis/datasource/pages/MysqlTree.js","v1/analysis/datasource/pages/useMySQLPartition.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/agg/AggStationOp.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/common/actions/RemoveFieldAction.js","v1/analysis/common/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/project/CastFields.js","v1/analysis/common/CommonActionNames.js","v1/analysis/project/AddJsonField.js","v1/analysis/project/actions/AddFieldAction.js","v1/analysis/project/actions/RemoveFieldAction.js","v1/analysis/project/actions/JsonFieldsApplyAction.js","v1/analysis/project/actions/JsonFieldsReducer.js","v1/analysis/project/JsonFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/filter/FilterCondition.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/OperateStation.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/RealTimeViewTable.js","v1/analysis/OperateStationWrapper.js","v1/analysis/RealTimeTableWrapper.js","v1/analysis/workshop.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/SetStateAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/pages/ChangePassword.js","v1/app_console/admin/AdminSetting.js","v1/analysis/common/pages/useUserConfig.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/ApplyTimeout.js","v1/app_console/admin/pages/Teams.js","v1/analysis/datasource/pages/MySQL.js","v1/analysis/datasource/pages/ListMySQL.js","v1/app_console/admin/pages/Settings.js","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","locale/zh_CN.js","locale/en_US.js","App.js","index.js","v1/ActionMaker.js","backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","backend_service/RemoteAction.js","backend_service/backend/RestConst.js"],"names":["ActionMaker","buildHandler","action","a","data","SetStateActionHandler","handler","SetStateAction","Boolean","window","location","hostname","match","currentPage","client","ActionProxy","post","RemoteAction","LOGOUT","sessionStorage","removeItem","AccessToken","name","logined","SwitchActionHandler","SwitchAction","UIMaker","res","user","userName","content","role","extraOption","backendTags","token","resp","headers","get","setItem","JSON","stringify","Cookies","set","path","userStr","getItem","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","__state","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","setState","AppConsoleReducer","state","type","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","appInfo","dispacher","useContext","AppConsoleContext","useState","current","setCurrent","setLogined","isAdmin","setIsAdmin","undefined","leave","setLeave","tempCurrent","useRef","useEffect","Provider","title","visible","onCancel","onOk","buildEvent","cancelText","okText","description","onClick","key","domEvent","preventDefault","stopPropagation","selectedKeys","mode","Item","style","fontSize","icon","LoginOutlined","id","SelectOutlined","enableConsole","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","password","password2","error","REGISTER","status","msg","setupLogin","RegisterActionHandler","RegisterAction","LOGIN","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","LoginRegisterReducer","AlertBoxW","styled","div","AlertBox","closable","message","RegisterContext","initState","Register","appConsoleDispacher","formLayout1","useReducerAsync","value","className","onFinish","values","label","rules","required","Password","htmlType","LoginContext","Login","require","default","CodeIntellegence","sql","lineNum","columnNum","restClient","RUN","executeMode","isDebug","queryType","wordList","Method","Status","RUN_SCRIPT","MLSQLAuth","isLogin","HTTP","callback","MLSQLAPI","request","apiResponse","then","s","catch","m","console","log","request2","json","str","login","_sCallBack","_errorCallBack","this","registerOrLogin","logout","register","url","body","accessToken","serverError","uuidv4","ServerError","constructor","APIResponse","process","jsonErr","jsonObj","params","successCallback","serverErrorCallback","ok","wow","fail","toString","runScript","auth","Auth","jobName","self","jsonRes","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","Object","assign","background","async","method","toUpperCase","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","fetch","timeout","text","newRunScript","okFun","failFun","new_request","resStatus","extractMsg","err","ButtonToCommand","makeSQL","EditorOp","consoleComp","inner","session","editor","setText","setValue","append","insert","row","getLength","column","insertAfterCursor","p","getCursorPosition","focus","comp","super","getText","getValue","getSelection","selectionRange","getSelectionRange","getTextRange","EngineService","JOB_KILL","block","ANALYSIS_TABLES","tableName","ANALYSIS_TABLE_INFO","empty_res","currentJobIndex","totalJobs","progress","totalJob","res2","completedJobsNum","activeJobsNum","totalCores","activeTasks","AsyncExecuter","queryPanel","enterLoading","commandGroupRef","loading","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","commandGroup","jobProgressRef","taskProgressRef","displayRef","queryApp","display","dashRef","dash","logInfo","closed","prepare","update","measureTime","startTime","Date","getTime","saveFile","scriptId","SAVE_SCRIPT_FILE","run","engineName","intervalTimer","setInterval","monitorJob","monitorLog","queryHistory","reload","enter","cancelMonitor","clearInterval","exit","JOB_DETAIL","jobInfo","reason","response","setData","length","map","item","split","killJob","JobProgress","executor","jobProgress","finalTime","timer","toFixed","parent","render","marginRight","ref","et","Minutes","formatValue","Seconds","percent","margin","ResourceProgress","componentDidMount","resourceInfo","jobs","jobNum","filter","maxWidth","EngineSelectComp","setLoading","engine","setEngine","proxy","ENGINE_LIST","backend","useEngine","onChange","width","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","getAllText","getAceEditor","appendToEditor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","resourceProgressRef","etOver","evt","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","completers","newValue","onDragOver","onDrop","defaultSize","height","onResize","resize","theme","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","CommandGroup","TaskProgress","mark","setTimeout","taskCompute","api","BackendConfig","condition","Error","assert","hasOwnProperty","jsonArray","_jsonObj","numTasks","numActiveTasks","numCompletedTasks","forEach","successPercent","resourceCompute","ReactMarkdown","MLSQLQueryDisplay","setRender","keyColumn","config","isPrototypeOf","substring","keys","basket","rows","dataIndex","index","new_item","columns","rowDoubleClick","event","view","enabled","disablePreview","tableStyle","onRow","onDoubleClick","dataSource","OkText","source","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","fileListStyle","UploadDropzone","Component","files","req","file","attach","end","f","size","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","styles","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","dataTypeToItems","reduce","x","y","z","dataType","prev","Map","_config","scatters","dataTypeConfig","fill","shape","xConfig","dataKey","yConfig","zConfig","top","right","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","titleMap","isStream","renderRawData","MLSQLHTML","MLSQLHTMLPanel","refresh","sandbox","srcDoc","frameBorder","scrolling","ifr","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","cleanSQL","line","includes","executeAgainStatus","defaultRender","record","currentTH","target","parentNode","num","cellIndex","field","whiteSpace","wordWrap","renderConfig","t","cssStyle","runJob","JOB_LIST","processData","detailConsoleMessage","respDisplay","overflow","_display","marginBottom","Panel","Collapse","TabPane","Tabs","MLSQLDash","PureComponent","isNormalXY","xYRender","renderDash","queryResData","header","defaultActiveKey","onTabClick","tab","CodeBlock","originalEditor","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","spin","Engine","show_result","fail_result","code","DataTable","parseData","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","ExecuteUnit","codeBlock","displayGroup","notebook","nextExecuteUnit","codeBlockIsEmpty","getCodeStr","CODE_SPLITTER","NodeBook","createNewExecuteUnit","addRef","instance","executeUnitRefs","slice","isLastEmpty","executeUnits","saveNoteBook","LogMonitor","cancelQueryLog","queryLog","PythonACE","logMonitor","select","finalSQL","runMode","ex","PythonEditor","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabName","newTabIndex","add","getPaneIndexByActiveKey","lastIndex","pane","i","remove","editorRefList","closeEditor","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","func","keyQuote","k","keyPath","getTempTableName","replace","getJobName","escapeQuote","quote","unQuote","startsWith","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","robotFetchParamWithCollect","getField","v","distinct","arrays","Set","tempF","fastCompareObject","deepCompareObject","arg1","arg2","compare2Objects","isNaN","RegExp","String","Number","prototype","leftChain","indexOf","rightChain","pop","ETPopLoad","datasourcesRender","getAttribute","sourceType","sourceTypeV","param","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","rv","whereStr","etpop","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","ignorePath","ignoreTableName","TextArea","ETPopAlgorithm","renderParam","temp","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETBaseTool","outputTableName","outputTableNameV","showTableName","showOutputTableName","pathNameForRender","showPathName","_makeMLSQL","asStr","_render","ETPopTool","ETPopDownload","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","showCode","ETExample","etName","ETRegister","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETDownloadFile","link","document","createElement","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","MLSQLETQuick","itemData","onDragStart","renderPop","etDoubleClick","padding","gutter","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","show","entries","TableOutlined","isLeaf","tip","spinning","FileSystemTree","getFileList","ls","_corrupt_record","root","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","loadData","CommonHandlers","CommonActions","node","consoleApp","SCRIPT_FILE_GET","scriptFile","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","scriptContent","getFieldValue","fileName","createFileError","saveParams","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","element","isExpanded","ExpandActionHandler","ExpandAction","SCRIPT_FILE_REMOVE","DeleteFileActionHandler","DeleteFileAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","expand","ScriptTreeHandlers","ScriptTreeActions","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","list","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","tmpStyle","zIndex","position","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","Form","useForm","SCRIPT_FILE_LIST","builder","treeRes","sort","b","treeData","getList","FolderAddOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","onExpand","autoExpandParent","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","fileSystemTreeRef","MLSQLQueryApp","script","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","sqlContent","createRef","paddingRight","borderRight","leftTreePaneRef","MixinBuilder","superclass","with","mixins","c","mixin","mix","NewSessionOp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","ADeltaLakeTree","tableClick","tablesInWorkshop","sessionId","LoadActionHandler","LoadAction","openTable","OpenActionHandler","OpenAction","ANALYSIS_TABLE_DELETE","DeleteActionHandler","DeleteAction","targetPath","exportTable","buildLoadSQL","runSql","ExportToActionHandler","ExportToAction","WorkshopTablesActionNames","LOAD","OPEN","DELETE","EXPORT_TO","WorkshopTablesHandlers","WorkshopTablesActions","WorkshopTablesReducer","confirm","exportTo","WorkshopTablesContext","WorkshopTables","externalReload","exportForm","FolderOpenOutlined","ContainerOutlined","CloudUploadOutlined","getFieldsValue","resetFields","flatMap","dbName","databaseName","namespace","tables","newdbs","partitionValues","partitionColumn","tableRandom","tableStart","tableEnd","partitionColumnName","inStr","__where__","con","loop","searchValue","beforeStr","substr","afterStr","search_dbs","showKeys","sub","SearchActionHandler","SearchAction","HiveTablesActionNames","SEARCH","HiveTablesHandlers","HiveTablesActions","HiveTablesReducer","HiveTablesContext","HiveTables","AnalysisWorkshop","setOpenTable","setError","setPartitionColumn","noPartition","setNoPartition","partition","reverse","usePartitionSelect","PartitionSelect","partitionForm","setOpenTableForPartition","setPartitionError","partitionNumValue","lowerBound","upperBound","DS_MYSQL_CONNECT","connectRes","tempTable","whereBlock","connect","__sql__","__tableName__","OpenMySQLTableActionHandler","OpenMySQLTableAction","MysqlTreeActionNames","MysqlTreeHandlers","MysqlTreeActions","MysqlTreeReducer","useIntegerStep","initialValue","min","max","MysqlTreeContext","MysqlTree","setColumn","partitionNumUI","__connect__","DS_MYSQL_COLUMN_INFO","columnName","setFieldsValue","data_type","col_name","useMySQLPartition","PartitionUI","DS_MYSQL_DBS","LeftView","reloaWorkshop","WorkshopOp","tableInfo","_whereBlock","tempTableName","sqls","loadingTable","toggleMessage","schema","setCurrentTable","updateDisplay","WorkshopAutoSql","getLastApplyTable","rollback","APPLY_GET","apply","_data","_schema","runSQLAtCurrentTable","analysis_workshop_table_name","analysis_workshop_sql","save","persist","finalSql","persistJobName","extraParams","persistSQL","ANALYSIS_SAVE","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","onApply","disabled","onRollback","StationCommonOp","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","SelectJoinField","currentTableSchema","joinStation","joinInfo","joinTable","currentTableFields","fields","joinTableFields","tableSchema","next","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","componentDidUpdate","prevProps","listStyle","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","danger","SelectJoinTable","Step","Steps","StepContent","JoinStation","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","currentStep","preview","steps","ColumnOperate","pagination","pageSize","AggStationOp","enableGroupByField","fieldName","groupByFields","generateProjectField","newName","aggFields","newFields","concat","FuncDesc","funcValue","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","agg","Math","random","funcPopUp","collect","d","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","defaultChecked","_groupBy","dataref","_agg","columnsRef","handleFunc","applyFuncToFieldRef","RenameFields","formRef","FunctionField","ProjectStationSQLOp","onSelectApply","selectFieldsRef","showInfo","onFuncApply","functionFieldRef","isAggExists","onRenameApply","renameFieldsRef","currentFields","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsActions","CastFieldsReducer","RollbackActionHandler","RollbackAction","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","CastFieldsContext","CastFields","submit","marginTop","onDeselect","CommonActionNames","APPLY","AddJsonField","keyPaths","forms","layout","MinusOutlined","subFields","JsonFieldsContext","targetIndex","splice","formValues","operateFiled","jsonStr","JsonFieldsApplyActionHandler","JsonFieldsApplyAction","JsonFieldsHandlers","JsonFieldsActions","JsonFieldsReducer","JsonFields","tempObjs","obj","PlusOutlined","ProjectStation","ExpressionConst","EQUAL","NON_EQUAL","IN","CONTAINS","STARTS_WITH","ENDS_WITH","LIKE","IS_NULL","IS_NOT_NULL","IS_EMPTY","IS_NOT_EMPTY","FilterCondition","compare","setCompare","inCandidate","setInCandidate","inCandidateLoading","setInCandidateLoading","outputSize","Compare","command","buildSelectedRows","fieldToDataType","selectedRowKeys","addGroup","groupName","groupType","selectedRows","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","hideOnSinglePage","GroupGroup","ApplyGroup","FilterStation","filterStr","buildCondition","onFilterApply","buildFilter","group","currentConditions","items","conTemp","cond","IS_NOT_EMPT","buildExpression","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","OrderStationActions","OrderStationReducer","OrderStationContext","OrderStation","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationActions","WindowStationReducer","useSelectFields","enableApply","fieldWrapper","selectFields","selectFieldsLabel","selectFieldsMode","operateFields","setOperateFields","commands","onClose","BuildGroup","WindowStationContext","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","funcs","setFuncs","setCurrentFunc","fetchFuncs","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","renderItem","Text","WindowStation","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","PLUGIN_LIST","dashPlugins","fetchPlugin","PLUGIN_GET","pluginName","analyzedScriptContent","image","dataValues","dashValues","xColumn","yColumn","OperateStation","borderBottom","tabPosition","WorkshopMessageOp","showMessage","consoleMessage","showInfoMessage","infoMessage","WorkshopUIOp","stationRef","SearchOp","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","searchInput","onPressEnter","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","DropdownMenuUI","dropdownStat","dropdown","menu","BarChartOutlined","overlay","RealTimeViewTable","getDefaultRender","getDefaultSearch","getDefaultTitleRender","isDash","newColumns","OperateStationWrapper","handle","useFullScreenHandle","FullscreenOutlined","RealTimeTableWrapper","operateStationView","subTitle","enableRegister","enableLogin","APP_SAVE","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","APP_INFO","getAppInfo","showIcon","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","externalRemove","setSchema","setResult","editorMode","setEditorMode","useDynamicList","getKey","move","resetList","sortForm","submitNow","REG","fieldValue","matchFF","exec","onDragEnd","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","ENGINE_ADD","ChangePassword","setApplySuccess","newPassword","_newPassword","USER_CHANGE_PASSWORD","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","MailOutlined","useUserConfig","success","setSuccess","formItems","getParams","DefaultBackend","USER_EXTRA","updateUser","ApplyTimeout","timeoutUi","timoutValue","apply_timeout","Teams","TEMA_LIST","MySQL","host","port","DS_ADD","jType","ListMySQL","DS_REMOVE","DS_LIST","Settings","setCurrentPage","AppConsole","textAlign","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","AppSetupHeader","AppSetupBody","AppSetup","zh_CN","analysis_workshop","settings","admin","more","set_default_backend","set_default_backend_error","set_engine","curent_value","choose","done","congratulation","set_timeout","set_apply_timeout","table_workshop","delta_lake","file_system","project","limit","order","select_columns","rename_columns","transform_columns","cast_columns_type","hive","operate_panel","data_panel","user_settings","change_password","team","team_manager","datasource","analysis_range","table_start","table_end","table_random","or","no_partition_msg","ds_mysql","alias","connect_mysql","list_mysql","mysql","numPartitions","mysql_parallel","no_mysql_parallel","as","choose_json_field","json_fields","en_US","App","configured","locale","messages","AntZhCN","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","eventCallBack","dispatch","getState","signal","GlobalParamNames","USER_NAME","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","Backend","fetch_config","BACKEND_URL","basic_config","final_config","GET","POST","PUT"],"mappings":"0RAEqEA,EAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EACnF,CACHC,KAAK,eACEF,EAAOE,QAHwE,2CAAzB,uDAA/CC,E,EAARC,QAAqCC,E,EAAPL,Q,+LCUxBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2FCb2DZ,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,yDACvD,WAA5BD,EAAOE,KAAKS,YADuE,uBAE5EC,EAAS,IAAIC,cAF+D,SAG5ED,EAAOE,KAAKC,UAAaC,OAAQ,IAH2C,cAIlFC,eAAeC,WAAWC,IAAYC,MACtCH,eAAeC,WAAW,QALwD,kBAM3E,CACHhB,KAAM,CACFS,YAAa,QACbU,SAAS,KATiE,gCAa/E,CACHnB,KAAM,CACFS,YAAaX,EAAOE,KAAKS,eAfqD,2CAAzB,uDAA3CW,E,EAARlB,QAAmCmB,E,EAAPvB,O,oBC+F3BwB,MAjGf,MAEI,kBAAkBC,GACd,MAAMC,EAAO,CAACC,SAASF,EAAIG,QAAQR,KAAMS,KAAKJ,EAAIG,QAAQC,KAAKC,YAAYL,EAAIG,QAAQG,aACjFC,EAAQP,EAAIQ,KAAKC,QAAQC,IAAIhB,IAAYC,MAC/CH,eAAemB,QAAQjB,IAAYC,KAAMY,GACzCf,eAAemB,QAAQ,OAAOC,KAAKC,UAAUZ,KAC7B,IAAIa,KACZC,IAAIrB,IAAYC,KAAMY,EAAO,CAAES,KAAM,MAGjD,kBAAkBhB,GACd,MAAMC,EAAO,CAACC,SAASF,EAAIG,QAAQR,KAAMS,KAAKJ,EAAIG,QAAQC,KAAKC,YAAYL,EAAIG,QAAQG,aACvFd,eAAemB,QAAQ,OAAOC,KAAKC,UAAUZ,IAGjD,qBACI,MAAMgB,EAAUzB,eAAe0B,QAAQ,QACvC,IAAID,EAAS,MAAO,GACpB,IACI,OAAOL,KAAKO,MAAMP,KAAKO,MAAMF,GAASZ,aACzC,MAAMe,GACH,MAAO,IAKf,iBACI,MAAMH,EAAUzB,eAAe0B,QAAQ,QACvC,IAAID,EAAS,OAAO,EAEpB,MAAe,UADFL,KAAKO,MAAMF,GAChBb,KAIZ,iBACI,QAAGZ,eAAe0B,QAAQxB,IAAYC,MAK1C,qBAyBI,MAAO,CAAE0B,eAxBc,CACnBC,SAAU,CACNC,GAAI,CACAC,KAAM,GAEVC,GAAI,CACAD,KAAM,IAGdE,WAAY,CACRH,GAAI,CACAC,KAAM,GAEVC,GAAI,CACAD,KAAM,KAUOG,WANN,CACfD,WAAY,CACRE,OAAQ,EACRJ,KAAM,MAKlB,qBAyBI,MAAO,CAAEH,eAxBc,CACnBC,SAAU,CACNC,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,IAGdE,WAAY,CACRH,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,MAUOG,WANN,CACfD,WAAY,CACRE,OAAQ,EACRJ,KAAM,Q,QC1FuDnD,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DAC9FU,EAAc,WACc,aAA7BX,EAAOsD,QAAQ3C,aAA6Ba,EAAQH,YACnDV,EAAc,YAHgF,kBAK3F,CACHT,KAAK,2BACEF,EAAOE,MADV,IAEAmB,QAASG,EAAQH,UACjBV,kBAT0F,2CAAzB,uDAAvD4C,E,EAARnD,QAAyCoD,E,EAAPxD,O,aCAhD,MAAMyD,KACKC,OAAS,SADdD,EAEKE,cAAgB,eAE3B,MAAMC,EAAqB,CACvB,CAACH,EAAsBC,QAASpC,EAChC,CAACmC,EAAsBE,eAAgBJ,EACvCM,SAAU1D,yBAGd,SAAS2D,EAAkBC,EAAO/D,GAC9B,OAAQA,EAAOgE,MACX,KAAKP,EAAsBC,OACvB,OAAOnC,EAAawC,EAAO/D,EAAOE,MACtC,KAAKuD,EAAsBE,cACvB,OAAOH,EAAmBO,EAAO/D,EAAOE,MAC5C,IAAK,WACD,OAAOG,yBAAe0D,EAAO/D,EAAOE,MACxC,QACI,OAAO6D,G,wICZXE,EAAYC,IAAZD,QAEFE,EAAuBC,IAAMC,gBAEnC,SAASC,EAAcC,GAAQ,MACnB5D,EAAkD4D,EAAlD5D,YAAa6D,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,YAAYC,EAAYH,EAAZG,QACtCC,EAAcC,qBAAWC,IAAzBF,UAFkB,EAGIG,mBAASnE,GAHb,mBAGnBoE,EAHmB,KAGVC,EAHU,OAIIF,mBAASN,GAJb,mBAInBnD,EAJmB,KAIV4D,EAJU,OAKIH,mBAASL,GALb,mBAKnBS,EALmB,KAKVC,EALU,OAMAL,wBAASM,GANT,mBAMnBC,EANmB,KAMZC,EANY,OAQeR,oBAAS,GARxB,mBASpBS,GAToB,UASNC,oBASpB,OAPAC,oBAAU,KAAO,MACL9E,EAA0C4D,EAA1C5D,YAAa6D,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,YAClCO,EAAWrE,GACXsE,EAAWT,GACXW,EAAWV,IACZ,CAACF,IAGA,kBAACJ,EAAqBuB,SAAtB,KACI,kBAAC,IAAD,CACIC,MAAO,UACPC,QAASP,IAAS,EAClBQ,SAAU,KAAQP,OAASF,IAC3BU,KAAM,KACFR,OAASF,GACTJ,EAAWO,EAAYR,SACvBJ,EAAU7E,IAAYiG,WAClBtC,EAAsBC,OAAQ,CAAE/C,YAAa4E,EAAYR,YAGjEiB,WAAW,SACXC,OAAO,SAEP,kBAAC,IAAD,CACIC,YAAab,EACbrB,KAAK,UAGb,kBAAC,IAAD,CAAMmC,QAAUtD,IACZ,GAAa,SAAVA,EAAEuD,IAGD,OAFAvD,EAAEwD,SAASC,sBACXzD,EAAEwD,SAASE,kBAGXlF,GAAuB,aAAZ0D,GAAoC,aAAVlC,EAAEuD,KACvCb,EAAYR,QAAUlC,EAAEuD,IACxBd,EAAS,8FAETN,EAAWnC,EAAEuD,KACbzB,EAAU7E,IAAYiG,WAClBtC,EAAsBC,OAAQ,CAAE/C,YAAakC,EAAEuD,SAIxDI,aAAc,CAACzB,GAAU0B,KAAK,cAC7B,kBAAC,IAAKC,KAAN,CAAYN,IAAI,QACZ,0BAAMO,MAAO,CAAEC,SAAU,KAAzB,qBACA,0BAAMD,MAAO,CAAEC,SAAU,KAAzB,4BAEJ,kBAAC,IAAD,CAAS5C,KAAK,cAEZ3C,GAAW,kBAAC,IAAKqF,KAAN,CAAWN,IAAI,QAAQS,KAAM,kBAACC,EAAA,EAAD,OACtC,kBAAC,IAAD,CAAkBC,GAAG,YAEvB1F,GAAW,kBAAC,IAAKqF,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACG,EAAA,EAAD,OACxC,kBAAC,IAAD,CAAkBD,GAAG,cAGzB1F,GAAWqD,EAAQuC,eAAiB,kBAAC,IAAKP,KAAN,CAAWN,IAAI,UAAUS,KAAM,kBAACK,EAAA,EAAD,OAChE,kBAAC,IAAD,CAAkBH,GAAG,aAExB1F,GAAW,kBAAC,IAAKqF,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACM,EAAA,EAAD,OACzC,kBAAC,IAAD,CAAkBJ,GAAG,uBAGpB1F,GAAW,kBAAC,IAAKqF,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACO,EAAA,EAAD,OACvC,kBAAC,IAAD,CAAkBL,GAAG,cAIzB1F,GAAW6D,GAAW,kBAAC,IAAKwB,KAAN,CAAWN,IAAI,QAAQS,KAAM,kBAACO,EAAA,EAAD,OAC/C,kBAAC,IAAD,CAAkBL,GAAG,WAIzB1F,GAAW,kBAAC4C,EAAD,CAAS4C,KAAM,kBAACQ,EAAA,EAAD,MAAkB1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,UACpE,kBAAC,IAAKL,KAAN,CAAWN,IAAI,OAAf,4BACA,kBAAC,IAAKM,KAAN,CAAWN,IAAI,SAASS,KAAM,kBAACS,EAAA,EAAD,OAA9B,a,wDCjG6CxH,IAAYC,aAAZ,uCAAyB,WAAMC,GAAN,2BAAAC,EAAA,2DAC5CD,EAAOE,KAAzCyB,EAD8E,EAC9EA,SAAU4F,EADoE,EACpEA,SAAUC,EAD0D,EAC1DA,UACxBD,IAAaC,EAFqE,yCAG3E,CACHtH,KAAM,CACFuH,MAAO,+BALmE,cAUhF7G,EAAS,IAAIC,cAVmE,SAWpED,EAAOE,KAAKC,UAAa2G,SAAU,CACjD/F,WAAU4F,aAZwE,cAWhF9F,EAXgF,OAelFvB,EAAO,GACQ,MAAfuB,EAAIkG,OACJzH,EAAO,CACHuH,MAAOpF,KAAKO,MAAMnB,EAAIG,SAASgG,MAInCpG,EAAQqG,WAAWpG,GACnBvB,EAAO,CACHuH,WAAOrC,EACP/D,SAAS,EACT0D,QAAS/E,EAAOsD,QAAQyB,QAAU,IA1B4C,kBA6B/E,CAAC7E,SA7B8E,4CAAzB,uDAA/C4H,E,EAAR1H,QAAqC2H,E,EAAP/H,O,ECAmBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,iBAAAC,EAAA,6DAC9EW,EAAS,IAAIC,cADiE,SAElED,EAAOE,KAAKC,UAAaiH,MAAOhI,EAAOE,MAF2B,UAGjE,OADbuB,EAF8E,QAG5EkG,OAH4E,yCAIzE,CACHzH,KAAK,CAACmB,SAAQ,EAAMoG,MAAOpF,KAAKO,MAAMnB,EAAIG,SAASgG,OALyB,cASpFpG,EAAQqG,WAAWpG,GATiE,kBAU7E,CACHvB,KAAK,CAACmB,SAAQ,KAXkE,2CAAzB,uDAAzC4G,E,EAAR7H,QAAkC8H,G,EAAPlI,OCFzC,MAAMmI,OACKT,SAAW,WADhBS,GAEKH,MAAQ,QAEnB,MAAMI,GAAwB,CAC1B,CAACD,GAAyBT,UAAWI,EACrC,CAACK,GAAyBH,OAAQC,GAGtC,SAASI,GAAqBtE,EAAO/D,GACjC,OAAQA,EAAOgE,MACX,KAAKmE,GAAyBT,SAC1B,OAAOK,EAAehE,EAAO/D,EAAOE,MACxC,KAAKiI,GAAyBH,MAC1B,OAAOE,GAAYnE,EAAO/D,EAAOE,MACrC,QACI,OAAO6D,G,oJCdnB,MAAMuE,GAAYC,KAAOC,IAAV,MAUAC,OANf,SAAkBlE,GACd,OAAO,kBAAC+D,GAAD,KACH,kBAAC,IAAD,iBAAW/D,EAAX,CAAkBmE,UAAQ,EAAC1E,KAAMO,EAAMP,MAAM,QAAS2E,QAASpE,EAAMoB,OAAS,UAAWO,YAAa3B,EAAMoE,aCApH,MAAMC,GAAkBxE,IAAMC,gBACxBwE,GAAY,CACdxH,SAAS,EACToG,WAAOrC,GAEX,SAAS0D,KAAY,MACEC,EAAwBnE,qBAAWC,IAA9CF,UADQ,EAEuBnD,EAAQwH,cAAvClG,EAFQ,EAERA,eAAgBM,EAFR,EAEQA,WAFR,EAGW6F,0BAAgBZ,GAAsBQ,GAAWT,IAH5D,mBAGTrE,EAHS,KAGFY,EAHE,KAKRtD,EAAmB0C,EAAnB1C,QAASoG,EAAU1D,EAAV0D,MASjB,OAPAhC,oBAAU,KACNsD,EAAoB,CAChB/E,KAAMP,EAAsBE,cAC5BzD,KAAM,MAEX,CAACmB,IAGA,kBAACuH,GAAgBlD,SAAjB,CAA0BwD,MAAO,IAC7B,yBAAKC,UAAU,6BACX,kBAAC,IAAD,CAAMxD,MAAM,YAEJ8B,GAAS,kBAAC,GAAD,CAAUzD,KAAK,QAAQ2E,QAASlB,IAE7C,kBAAC,IAAD,iBAAU3E,EAAV,CAA0BqG,UAAU,aAAaC,SAAWC,IACxD1E,EAAU,CACNX,KAAMmE,GAAyBT,SAC/BxH,KAAMmJ,OAGV,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKjC,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAN,CACI4C,MAAM,oBACNlI,KAAK,YACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAU0F,SAAS,UAAhC,WCrE5B,MAAMb,GAAY,CACdxH,SAAS,EACToG,WAAOrC,GAGLuE,GAAevF,IAAMC,gBAE3B,SAASuF,KAAS,MAAD,EAC0BpI,EAAQwH,cAAvClG,EADK,EACLA,eAAgBM,EADX,EACWA,WACL2F,EAAwBnE,qBAAWC,IAA9CF,UAFK,EAIcsE,0BAAgBZ,GAAsBQ,GAAWT,IAJ/D,mBAINrE,EAJM,KAICY,EAJD,KAKLtD,EAAkB0C,EAAlB1C,QAASoG,EAAS1D,EAAT0D,MAWjB,OATAhC,oBAAU,KACNsD,EAAoB,CAChB/E,KAAMP,EAAsBE,cAC5BzD,KAAM,CACFmB,cAGT,CAACA,IAGA,kBAACsI,GAAajE,SAAd,KACI,yBAAKyD,UAAU,6BACX,kBAAC,IAAD,CAAMxD,MAAM,SAEJ8B,GAAS,kBAAC,GAAD,CAAUzD,KAAK,QAAQ2E,QAASlB,IAE7C,kBAAC,IAAD,iBAAU3E,EAAV,CAA0BqG,UAAU,aAAaC,SAAWC,IACxD1E,EAAU7E,IAAYiG,WAAWoC,GAAyBH,MAAOqB,OAEjE,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKjC,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAU0F,SAAS,UAAhC,W,iECvEpB7I,GAAgBgJ,EAAQ,IAAxBhJ,YACSE,GAAiB8I,EAAQ,IAAlCC,QAEO,MAAMC,GAChB,sBAA4BC,EAAIC,EAAQC,GAAW,OAAD,qHAE7CC,EAAa,IAAItJ,GAF4B,SAIjCsJ,EAAWrJ,KAAKC,GAAaqJ,IAAI,CAC/CC,YAAa,cACbL,IAAKA,EACLC,QAASA,EAAS,EAClBC,UAAWA,EACXI,SAAS,EACTC,UAAW,UAVoC,YAI7C9I,EAJ6C,SAa1B,MAAfA,EAAIkG,OAbqC,uBAczC6C,EAAW/I,EAAIG,QAd0B,kBAexC4I,GAfwC,gCAiBxC,IAjBwC,+C,sBCJhD,MAAMC,GACJ,MADIA,GAEH,OAIGC,GAGK,IAKLvJ,GACH,eCNGwJ,GAA8B,qBCFpC,MAAMC,GAETC,UACI,OAAyD,OAAlD5J,eAAe0B,QAAQmI,IAOlCnJ,SAASoJ,GAEO,IAAIC,GDjBqB,yBCqCjCC,QAAQH,GAAiB,GAfVI,IAKXA,EAAYvD,SAAWmD,GACvB7J,eAAeC,WAAW4J,IAE1BI,EAAYtJ,QAAQuJ,KAAMC,IACtBL,EAAS1I,KAAKO,MAAMwI,GAAX,YACTC,MAAO5D,QAK0B6D,IACzCC,QAAQC,IAAIF,KAIpB5J,KAAKqJ,GAEW,IAAIC,GD5CqB,yBC6CjCS,SAAS,GAAKC,IACdX,EAASW,IACTC,OASRC,MAAMjK,EAAU4F,EAAUsE,EAAYC,GAClCC,KAAKC,gBDtD6B,qBCsDYrK,EAAU4F,EAAUsE,EAAYC,GAGlFG,SACIhL,eAAeC,WAAW4J,IAO9BoB,SAASvK,EAAU4F,EAAUsE,EAAYC,GACrCC,KAAKC,gBDtEgC,wBCsEYrK,EAAU4F,EAAUsE,EAAYC,GAGrFE,gBAAgBG,EAAKxK,EAAU4F,EAAUsE,EAAYC,GACjD,MAEMM,EAAO,CACTzK,SAAUA,EACV4F,SAAUA,GAJF,IAAIyD,GAASmB,GAyBrBlB,QAAQH,GAAkBsB,EAfXlB,IACf,GAAIA,EAAYmB,YAAa,CACzBpL,eAAemB,QAAQ0I,GAAuBI,EAAYmB,cAC1C,IAAI9J,KACZC,IAAIsI,GAAuBI,EAAYmB,YAAa,CAAE5J,KAAM,MAExEoJ,EAAWX,IAMQoB,IACnBR,EAAeQ,MC/F3B,MAAMC,GAAS1C,EAAQ,KAEhB,MAAM2C,GACTC,YAAY7K,GACRmK,KAAK7C,MAAQtH,GAId,MAAM8K,GAMTD,YAAY9E,EAAQ/F,EAASyK,GAAc,KAM3CX,KAAO,CAACiB,EAASC,KAEbb,KAAKnK,QAAQuJ,KAAMC,IACf,IACI,MAAMyB,EAAUxK,KAAKO,MAAMwI,GAC3BuB,EAAQE,GACV,MAAOhK,GACL0I,QAAQC,IAAI3I,GACZ+J,EAAQxB,OAbhBW,KAAKpE,OAASA,EACdoE,KAAKnK,QAAUA,EACfmK,KAAKM,YAAcA,GAmBpB,MAAMrB,GAETyB,YAAYN,GACRJ,KAAKI,IAAMA,EAIfV,SAASqB,EAAQC,EAAiBC,GACjBjB,KACRd,QAAQH,GAAkBgC,EAASG,IACpCA,EAAGvB,KAAMwB,IACLH,EAAgBG,IAChBN,IACAI,EAAoBJ,MAExBO,IACA,IACIA,EAAKjE,QAAQtH,QAAS+J,IAClB,IAAIlK,EAAMkK,EACV,IACIlK,EAAMY,KAAKO,MAAM+I,GAAX,IACR,MAAO9I,IAGTmK,EAAoBvL,KAE1B,MAAOoB,GACLmK,EAAoBG,EAAOA,EAAKC,WAAa,qBAMzDC,UAAUP,EAAQ9C,EAAK+C,EAAiBC,GACpC,MAAMM,EAAO,IAAIC,GACXC,EAAUjB,KACVkB,EAAO1B,KACbuB,EAAK5L,KAAMgM,IAAa,MACb/L,EAAyB+L,EAAzB/L,SAAUI,EAAe2L,EAAf3L,YACX4L,EAAc,CAChB3D,IAAKA,EACL4D,MAAOjM,EACP6L,QAASA,EACTK,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMjM,GAAe,IAEzBkM,OAAOC,OAAOP,EAAab,IACRA,EAAOqB,aAAc,IAEpCF,OAAOC,OAAOP,EAAa,CAACS,OAAO,EAAMrD,SAAU,KAGvD0C,EAAKxC,QAAQH,GAAkB6C,EAAcV,IACzC,GAAkB,MAAdA,EAAGtF,OACHsF,EAAGvB,KAAMwB,IACLH,EAAgBG,IAChBN,IACAI,EAAoBJ,UAGxB,IACIK,EAAGrL,QAAQuJ,KAAMQ,IACb,IAAIlK,EAAMkK,EACV,IACIlK,EAAMY,KAAKO,MAAM+I,GAAX,IACR,MAAO9I,IAGTmK,EAAoB,kBAAoBC,EAAGtF,OAAS,KAAOlG,KAEjE,MAAOoB,GACLmK,EAAoB,kBAAoBC,EAAGtF,UAInDwF,IACA,IACIA,EAAKjE,QAAQtH,QAAS+J,IAClB,IAAIlK,EAAMkK,EACV,IACIlK,EAAMY,KAAKO,MAAM+I,GAAX,IACR,MAAO9I,IAGTmK,EAAoBvL,KAE1B,MAAOoB,GACLmK,EAAoBG,EAAOA,EAAKC,WAAa,uBAO7DnC,QAAQoD,EAAQjC,EAAMW,EAAiBC,GACnCqB,EAASA,EAAOC,cAEhB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAYpC,EAAM,CACvB,IAAIqC,EAAaC,mBAAmBF,GAChCG,EAAeD,mBAAmBtC,EAAKoC,IAC3CD,EAASK,KAAKH,EAAa,IAAME,GAGrC,IAAIE,EAAS9C,KAAKI,IAQlB,MANe,QAAXkC,GACAQ,EAASA,EAAS,IAAMN,EACxBA,OAAWnJ,GAEXmJ,EAAWA,EAASO,KAAK,KAEtBC,MAAMF,EAAQ,CACjBR,OAAQA,EACRW,QAAS,MACT9M,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBjB,eAAe0B,QAAQmI,KAA0B,IAErEsB,KAAMmC,IACPpD,KAAM1J,IACLsL,EAAgB,IAAIL,GAAYjL,EAAIkG,OAAQlG,EAAIwN,OAAQxN,EAAIS,QAAQC,IAAI2I,QAEvEO,MAAO5J,IACJuL,EAAoB,IAAIR,GAAY/K,MAIhDyN,aAAapC,EAAQ9C,EAAKmF,EAAOC,GAC7B,MAAM9B,EAAO,IAAIC,GACXC,EAAUjB,KACVkB,EAAO1B,KACbuB,EAAK5L,KAAMgM,IAAa,MACb/L,EAAyB+L,EAAzB/L,SAAUI,EAAe2L,EAAf3L,YAEjB,IAAKA,EAUD,YATAqN,EAAQ,mTAYZ,MAAMzB,EAAc,CAChB3D,IAAKA,EACL4D,MAAOjM,EACP6L,QAASA,EACTK,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMjM,GAAe,IAEzBkM,OAAOC,OAAOP,EAAab,IACRA,EAAOqB,aAAc,IAEpCF,OAAOC,OAAOP,EAAa,CAACS,OAAO,EAAMrD,SAAU,KAGvD0C,EAAK4B,YAAYvE,GAAkB6C,EAAawB,EAAOC,KAI/DC,YAAYhB,EAAQjC,EAAM+C,EAAOC,GAC7Bf,EAASA,EAAOC,cAEhB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAYpC,EAAM,CACvB,IAAIqC,EAAaC,mBAAmBF,GAChCG,EAAeD,mBAAmBtC,EAAKoC,IAC3CD,EAASK,KAAKH,EAAa,IAAME,GAGrC,IAAIE,EAAS9C,KAAKI,IAEH,QAAXkC,GACAQ,EAASA,EAAS,IAAMN,EACxBA,OAAWnJ,GAEXmJ,EAAWA,EAASO,KAAK,KAE7B,IAAIQ,EAAY,EAEhB,OAAOP,MAAMF,EAAQ,CACjBR,OAAQA,EACRW,QAAS,MACT9M,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBjB,eAAe0B,QAAQmI,KAA0B,IAErEsB,KAAMmC,IACPpD,KAAM1J,IACL6N,EAAY7N,EAAIkG,OACE,MAAd2H,GACA7N,EAAIiK,OAAOP,KAAMjC,IACbiG,EAAMjG,KAGPzH,IACR0J,KAAK1J,IACJ,MAAM8N,EAAa,KACf9N,EAAIwN,OAAO9D,KAAKjC,IACR,IACIkG,EAAQ/M,KAAKO,MAAMsG,GAAX,KACV,MAAOrG,GACLuM,EAAQlG,OAMxB,OAAQoG,GACJ,KAAK,IACD,MACJ,KAAK,IAGL,KAAK,IACDC,IACA,MACJ,QACIhE,QAAQC,IAAI,gBAInBH,MAAOmE,IACJJ,EAAQI,EAAI7G,YCjRrB,MAAM8G,GAAiB,cAAD,KACzBC,QAAWtO,GACM,YAATA,EACM,iCAEG,iBAATA,EACM,2NAQG,iBAATA,EACM,qCAEH,I,uBCfA,MAAMuO,WCFN,MACblD,YAAYmD,GACT7D,KAAK8D,MAAQD,EACb7D,KAAK+D,QAAU/D,KAAK8D,MAAME,OAAOD,QACjC/D,KAAKgE,OAAShE,KAAK8D,MAAME,OAG5BC,QAAQpI,GAEJ,OADAmE,KAAKgE,OAAOE,SAASrI,GACdmE,KAGXmE,OAAOtI,GAKL,OAJAmE,KAAK+D,QAAQK,OAAO,CAChBC,IAAKrE,KAAK+D,QAAQO,YAClBC,OAAQ,GACT,KAAO1I,GACHmE,KAGTwE,kBAAkB3I,GAChB,MAAM4I,EAAIzE,KAAKgE,OAAOU,oBAGtB,OAFA1E,KAAK+D,QAAQK,OAAOK,EAAG5I,GACvBmE,KAAKgE,OAAOW,QACL3E,ODrBPU,YAAYkE,GACVC,MAAMD,GAERE,UACI,OAAO9E,KAAKgE,OAAOe,WAGvBC,eACI,IAAIC,EAAiBjF,KAAKgE,OAAOkB,oBAEjC,OADclF,KAAK+D,QAAQoB,aAAaF,IEThD,MAAMzE,GAAS1C,EAAQ,KACjBjJ,GAAS,IAAIC,cACJ,MAAMsQ,GAEjB,UAAgB1O,GAAM,OAAD,mHACX7B,EAAS,IAAIC,cADF,SAECD,EAAOyM,UAAP,uBAAiC5K,EAAjC,KAA0C8J,KAAU,CAAC,UAAY,UAFlE,cAEX9K,EAFW,yBAGVA,GAHU,6CAMrB,eAAqB+L,GAAS,OAAD,0HACP5M,GAAOyM,UAAU,SAAWG,EAAQ,IAAKjB,KAAU,CAAC,UAAY,UADzD,cACnB9K,EADmB,gBAGnBb,GAAOuB,IAAIpB,UAAaqQ,SAAU,CAAC5D,QAAQA,IAHxB,gCAIlB/L,GAJkB,6CAO7B,cAAoBuI,EAAIqH,GAAM,GAAO,OAAD,0HACdzQ,GAAOyM,UAAUrD,EAAKuC,KAAS,CAAE,MAAS8E,IAD5B,cAC1B5P,EAD0B,yBAEzBA,GAFyB,6CAKpC,uBAA6B,OAAD,0HACNb,GAAOyM,UAAU,GAAGd,KAAS,CAAClC,YAAY,iBADpC,cAClB5I,EADkB,yBAEjBA,GAFiB,6CAK5B,cAAoB,OAAD,mHACT+L,EAAUjB,KADD,SAEG3L,GAAOyM,UAAP,8BAAiDG,EAAS,CAAC,UAAY,UAF1E,cAET/L,EAFS,yBAGR,CAAC+L,UAAQ/L,QAHD,6CAMnB,2BAAiC,OAAD,mHACtB+L,EAAUjB,KADY,SAEV3L,GAAOyM,UAAP,sBAAuCG,EAAS,CAAC,UAAY,UAFnD,cAEtB/L,EAFsB,yBAGrBA,GAHqB,6CAMhC,0BAAgC,OAAD,0HACTb,GAAOuB,IAAIpB,UAAauQ,gBAAiB,IADhC,cACrB7P,EADqB,yBAEpBA,GAFoB,6CAK/B,iBAAuB8P,GAAW,OAAD,0HACX3Q,GAAOuB,IAAIpB,UAAayQ,oBAAqB,CAACD,cADnC,cACvB9P,EADuB,yBAEtBA,GAFsB,6CAKjC,mBAAyB+L,GAAS,OAAD,oIACX5M,GAAOyM,UAAP,iCAA4CG,EAA5C,aAAgEjB,KAAS,CAAC,UAAY,UAD3E,UACvB9K,EADuB,OAEvBgQ,EAAa,CAACC,gBAAgB,EAAEC,UAAU,GAChC,MAAblQ,EAAIkG,OAHsB,oBAInBkF,EAAUpL,EAAIG,QAAQ,GAJH,yCAMd6P,GANc,UAQrBC,EAAkB7E,EAAQ+E,SAASF,gBAExB,KADXC,EAAY9E,EAAQ+E,SAASC,UATR,kCAWFjR,GAAOyM,UAAP,6BAAwCG,EAAxC,aAA4DjB,KAAS,CAAC,UAAY,UAXhF,QAWfuF,EAXe,OAYrBJ,EAAkBI,EAAKlQ,QAAQ,GAAGmQ,iBAClCJ,EAAYG,EAAKlQ,QAAQ,GAAGoQ,cAAgBN,EAbvB,iCAelB,CAACA,kBAAgBC,cAfC,iCAiBtBF,GAjBsB,8CAoBjC,sBAA4B,OAAD,8HACL7Q,GAAOyM,UAAP,qCAAwDd,KAAS,CAAC,UAAY,UADzE,cACjB9K,EADiB,OAEjBwQ,EAAaxQ,EAAIG,QAAQ,GAAGqQ,WAC5BC,EAAczQ,EAAIG,QAAQ,GAAGsQ,YAHZ,kBAIhB,CAACA,cAAYD,eAJG,8CCrE/B,MAAM1F,GAAS1C,EAAQ,KAER,MAAMsI,GACjB1F,YAAY2F,GAAY,KAgCxBC,aAAe,KACXtG,KAAKuG,gBAAgBzO,SAAS,CAAC0O,SAAS,KAjCrB,KAsCvBC,YAAc,KACVzG,KAAKuG,gBAAgBzO,SAAS,CAAC0O,SAAS,KAtC1CxG,KAAKqG,WAAaA,EAClBrG,KAAKnL,OAAS,IAAIC,cAClBkL,KAAKyB,QAAUjB,KACfR,KAAK0G,SAAW1G,KAAKqG,WAAWM,cAChC3G,KAAK4G,UAAY5G,KAAKqG,WAAWQ,eACjC,MAAMC,EAAY9G,KAAK0G,SAAS1B,eAChChF,KAAK/B,IAAM6I,GAAa9G,KAAK0G,SAAS5B,UAEtC9E,KAAKuG,gBAAkBvG,KAAKqG,WAAWU,aAAa/N,QAEpDgH,KAAKgH,eAAiBhH,KAAKqG,WAAWW,eACtChH,KAAKiH,gBAAkBjH,KAAKqG,WAAWY,gBAAgBjO,QAEvDgH,KAAKkH,WAAalH,KAAKqG,WAAWc,SAASC,QAAQpO,QACnDgH,KAAKqH,QAAUrH,KAAKqG,WAAWc,SAASG,KAAKtO,QAG7CgH,KAAKiD,QAAUjD,KAAKuG,gBAAgBvO,MAAMiL,QAC1CjD,KAAKuH,QAAU,GAEfvH,KAAKwH,QAAS,EAMhB/H,IAAI5D,GAEA,OADAmE,KAAK4G,UAAUzC,OAAOtI,GACfmE,KAgBXyH,UACIzH,KAAKsG,eACLtG,KAAK4G,UAAU3C,QAAQ,IACvBjE,KAAKkH,WAAWQ,OAAOpR,KAAKO,MAAM,OAEtC8Q,YAAYC,GACR5H,KAAKyG,cAEL,OADgB,IAAIoB,MAAOC,UACVF,EAKfG,SAAShH,GAAQ,IAAD,6HACdiH,EAAW,EAAK3B,WAAWrO,MAAMgQ,SADnB,uBAGjB,EAAKvI,IAAI,kDAHQ,0CAMF,EAAK5K,OAAOE,KAAKC,UAAaiT,iBAAiB,CAC/DjN,GAAIgN,EACJnS,QAAS,EAAK6Q,SAAS5B,YARL,cAUF,OAJZpP,EANc,QAUbkG,QACH,EAAK6D,IAAI/J,EAAIG,SAEC,MAAfH,EAAIkG,QACH,EAAK6D,IAAL,eAAiBuI,EAAjB,uBAdgB,kBAgBbtS,GAhBa,8CAoBhBwS,IAAInH,GAAS,IAAD,iIACd,EAAK0G,UACCG,GAAY,IAAIC,MAAOC,UAFf,SAGI,EAAKjT,OAAOyM,UAAU,EAAKrD,IAAK,EAAKwD,QAASS,OAAOC,OAAOpB,EAAO,CACjFU,QAAS,EAAKA,QACdY,OAAO,EACPY,QAAS,EAAKA,QACdkF,WAAW,EAAK9B,WAAW8B,cAPjB,UAUI,OAPZzS,EAHQ,QAUPkG,OAVO,uBAWV,EAAK6D,IAAI,iCAAwC,EAAKkI,YAAYC,GAAa,MAXrE,kBAYH,IAZG,cAed,EAAKQ,cAAgBC,YAAW,sBAAC,sBAAAnU,EAAA,sEACvB,EAAKoU,aADkB,uBAEvB,EAAKC,aAFkB,2CAG9B,KAGA,EAAKlB,QAAQmB,cACZ,EAAKnB,QAAQmB,aAAaC,SAE9B,EAAKzB,eAAe0B,QAxBN,kBAyBPhT,GAzBO,8CA2BZiT,gBAAiB,IAAD,kHACd,EAAKP,gBACLQ,cAAc,EAAKR,eACnB,EAAKA,cAAgB,MAEzB,EAAKpB,eAAe6B,OALF,6CAQhBP,aAAa,IAAD,4IACI,EAAKzT,OAAOuB,IAAIpB,UAAa8T,WAC3C,CACIrH,QAAQ,EAAKA,UAHP,OACR/L,EADQ,OAOQ,KAFhBqT,EAAUrT,EAAIG,SAET+F,SACR,EAAK4L,QAAS,EACd,EAAKmB,gBACL,EAAKlC,cACL,EAAKO,eAAe6B,OACpB,EAAKpJ,IAAIsJ,EAAQC,SAGE,IAAnBD,EAAQnN,SACP,EAAK4L,QAAS,EACd,EAAKmB,gBACL,EAAKlC,cACL,EAAKO,eAAe6B,OACd1U,EAAOmC,KAAKO,MAAMkS,EAAQE,UAChC,EAAK/B,WAAWQ,OAAOvT,GACvB,EAAKkS,WAAWc,SAAS+B,QAAQ/U,IAtBvB,6CA0BZoU,aAAa,IAAD,mIACR9G,EAAUjB,KADF,SAEI,EAAK3L,OAAOyM,UAAZ,4BAA4C,EAAKiG,QAAL,SAA2B,EAAvE,4CAAqH9F,EAAS,CAAC,UAAY,UAF/I,UAGI,OADZ/L,EAFQ,QAGPkG,OAHO,kDAIRkF,EAAUpL,EAAIG,QAAQ,IACjB,OAAaiL,EAAO,MAAUqI,OAAS,GAC9C,EAAK1J,IAAIqB,EAAO,MAAUsI,IAAIC,GACnBA,EAAKC,MAAM,cAAc,IACjCvG,KAAK,OAEZ,EAAKwE,QAAL,OAAyBzG,EAAO,OAVlB,6CAeZyI,UAAU,IAAD,2HACN,EAAK9H,QADC,iEAEO2D,GAAcmE,QAAQ,EAAK9H,SAFlC,OAEL/L,EAFK,OAGX,IACI,EAAK+J,IAAI/J,EAAIG,QAAQ,GAAZ,aACZ,MAAMiB,GACH,EAAK2I,IAAI/J,EAAIG,SAEjB,EAAK2R,QAAS,EACd,EAAK/F,QAAU,KACf,EAAKkH,gBACL,EAAKlC,cAXM,+C,yBC3JJ,MAAM+C,WAAoBnR,YACrCqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAMnBkQ,MAAS3H,IACLf,KAAKlI,SAAS,CAAC0O,SAAQ,IACvBxG,KAAKoI,cAAgBC,YAAW,sBAAC,kCAAAnU,EAAA,6DACvBuN,EAAU,EAAK4E,WAAWoD,SAAShI,QADZ,SAEc2D,GAAcsE,YAAYjI,GAFxC,gBAEtBkE,EAFsB,EAEtBA,gBAAgBC,EAFM,EAENA,UACvB,EAAK9N,SAAS,CAAC+N,SAAUF,EAAgBC,EAAW,MAHvB,2CAI/B,MAZa,KAenBiD,KAAO,KACA7I,KAAKoI,gBACJQ,cAAc5I,KAAKoI,eACnBpI,KAAKoI,cAAgB,KACrBpI,KAAK2J,WAAa3J,KAAK4J,MAAM9B,UAAY,KAAM+B,QAAQ,GAAK,IAC5D7J,KAAKlI,SAAS,CAAC0O,SAAQ,MAlB3BxG,KAAKqG,WAAa7N,EAAMsR,OACxB9J,KAAKhI,MAAO,CAACwO,SAAQ,EAAMX,SAAS,GAqBxCkE,SACI,OAAI/J,KAAKhI,MAAMwO,QASR,2BACH,gBAAC,IAAD,CAAQvO,KAAK,UAAU2C,MAAO,CAACoP,YAAY,SAA3C,aACU,gBAAC,KAAD,CAAOC,IAAMC,GAAMlK,KAAK4J,MAAOM,GACrC,gBAAC,KAAMC,QAAP,CAAeC,YAAajN,GAAK,UAAOA,EAAP,UACjC,gBAAC,KAAMkN,QAAP,CAAeD,YAAajN,GAAK,UAAOA,EAAP,YAErC,gBAAC,KAAD,CAAUlF,KAAK,SAASqS,QAAStK,KAAKhI,MAAM6N,YAdzC7F,KAAK2J,UACG,gBAAC,IAAD,CAAQ1R,KAAK,UAAU2C,MAAO,CAAC2P,OAAO,qBAAtC,cACQvK,KAAK2J,WAGb,6B,OCjCR,MAAMa,WAAyBnS,YAC1CqI,YAAYlI,GACRqM,MAAMrM,GADS,KAoBnBkQ,MAAS3H,MApBU,KAwBnB8H,KAAO,OAtBH7I,KAAKqG,WAAa7N,EAAMsR,OACxB9J,KAAKhI,MAAO,CAACsS,QAAQ,GAGnBG,oBAAoB,IAAD,kIACjB,EAAKhC,SADY,6CAInBA,SAAS,IAAD,oJAC4BrD,GAAcsF,eAD1C,uBACJvE,EADI,EACJA,YAAYD,EADR,EACQA,WADR,SAEkBd,GAAcuF,OAFhC,gBAEJlJ,EAFI,EAEJA,QAAQ/L,EAFJ,EAEIA,IACTkV,EAASlV,EAAIG,QAAQgV,OAAQxB,GACxBA,EAAK5H,UAAYA,GACzB0H,OACH,EAAKrR,SAAS,CAACwS,QAAQnE,EAAYD,EAAW,IAC7CA,aAAWC,cAAYyE,WAPb,8CAkBdb,SACI,OAAO,uBAAK3M,UAAU,WAElB,uBAAKA,UAAU,YACf,uBAAKA,UAAU,WAAf,yBAAiD4C,KAAKhI,MAAMkO,WAA5D,OACC,gBAAC,KAAD,CAAUoE,QAAStK,KAAKhI,MAAMsS,QAAW1P,MAAO,CAACkQ,SAAS,YAG3D,uBAAK1N,UAAU,YACf,uBAAKA,UAAU,WAAf,iBAAuC,4BAAO4C,KAAKhI,MAAM4S,YClCrE,SAASG,GAAiBvS,GAAQ,MAAD,EACHO,wBAASM,GADN,gCAELN,mBAAS,KAFJ,mBAEtB5E,EAFsB,KAEhB+U,EAFgB,OAGCnQ,oBAAS,GAHV,mBAGbiS,GAHa,aAIDjS,wBAASM,GAJR,mBAItB4R,EAJsB,KAIdC,EAJc,KAK7BxR,oBAAU,MACK,uCAAG,gCAAAxF,EAAA,6DACV8W,GAAW,GACLG,EAAQ,IAAIrW,cAFR,SAGQqW,EAAM/U,IAAIpB,UAAaoW,YAAa,IAH5C,OAGJ1V,EAHI,OAIVwT,EAAQxT,EAAIG,QAAQ1B,MACdkX,EAAU5V,EAAQM,cAAR,QACbL,EAAIG,QAAQ1B,KAAKgV,OAAQ,IAAMkC,GAC9BH,EAAUxV,EAAIG,QAAQ1B,KAAK,GAAGkB,MAElC2V,GAAW,GATD,2CAAH,qDAWXhI,IACD,IAEHtJ,oBAAU,KAMRlB,EAAM8S,UAAUL,IAChB,CAACA,IAKH,OACI,kBAAC,KAAD,CAAQM,SAJUpO,IAClB+N,EAAU/N,IAGsBvC,MAAO,CAAC4Q,MAAO,UAC1CrX,EAAKiV,IAAIC,GACC,kBAAC,KAAOoC,OAAR,CAAetO,MAAOkM,EAAKhU,MAAOgU,EAAKhU,Q,MCpBvDoW,GAAUC,KAAVD,OAEQ3N,EAAQ,KAGvB,MAAM6N,WAAuBtT,YAEzBqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAenB0K,KAAO,CAAC/F,EAAO6K,KACXhI,KAAKlI,SAAS,CAACqF,MAAOA,EAAO6K,SAAUA,GAAW,KAC9ChI,KAAK4L,aAAa5S,QAAQgL,OAAOE,SAAS/G,EAAO,MAjBtC,KAmDlB0O,YAnDkB,sBAmDJ,8BAAA3X,EAAA,6DACLuV,EAAW,IAAIrD,GAAc,GADxB,SAEOqD,EAAS1B,SAAS,IAFzB,cAELrS,EAFK,yBAGJA,GAHI,2CAnDI,KA6EnBoW,WAAa,IACF9L,KAAK+L,eAAehH,WA9EZ,KAiFnBC,aAAe,IACJhF,KAAK2G,cAAc3B,eAlFX,KAqFnBgH,eAAkBpM,GACPI,KAAK2G,cAAcnC,kBAAkB5E,GAtF7B,KAyFnB+G,YAAY,IACD,IAAI/C,GAAS5D,KAAK4L,aAAa5S,SA1FvB,KA6FnB6N,aAAa,IACF,IAAIjD,GAAS5D,KAAKmH,SAAS8E,WAAWjT,SA9F9B,KAiGnB+S,aAAe,IACJ/L,KAAK2G,cAAc3C,OAlGX,KAqGnBkI,uBAAyB,IACdlM,KAAK6G,eAAe7C,OAtGZ,KAyGnBmI,UAAatQ,GACFmE,KAAK6G,eAAe1C,OAAOtI,GA1GnB,KA6GnBuQ,aAAe,IACJpM,KAAKmH,SAASG,KAAKtO,QA9GX,KAiHnBqT,WAAa,IACFrM,KAAKmH,SAASC,QAAQpO,QAlHd,KAqHnBsN,aAAgB7E,IACZzB,KAAK+G,aAAa/N,QAAQlB,SAAS,CAAC0O,SAAS,IAC7CxG,KAAKsM,oBAAoBtT,QAAQ0P,MAAM,CAACjH,QAASA,IACjDzB,KAAKgH,eAAe0B,MAAM,CAACjH,QAASA,IACpCzB,KAAKiH,gBAAgBjO,QAAQ0P,MAAM,CAACjH,QAASA,KAzH9B,KA4HnBgF,YAAc,KACVzG,KAAK+G,aAAa/N,QAAQlB,SAAS,CAAC0O,SAAS,IAC7CxG,KAAKgH,eAAe6B,OACpB7I,KAAKsM,oBAAoBtT,QAAQ6P,OACjC7I,KAAKiH,gBAAgBjO,QAAQ6P,QAhId,KAkInB0D,OAAUC,IACN,MAAMtC,EAAKlK,KAAKmH,SAASsF,MAAMzT,QACzB0T,EAAYxC,EAAGyC,QAAQ,aACvBC,EAAU1C,EAAGyC,QAAQ,WACrBE,EAAc3C,EAAGyC,QAAQ,eACzBG,EAAY5C,EAAGyC,QAAQ,aACvBI,EAAc7C,EAAGyC,QAAQ,eACzBK,EAAa9C,EAAGyC,QAAQ,cACxBM,EAAoB/C,EAAGyC,QAAQ,qBAC/BO,EAAmBhD,EAAGyC,QAAQ,oBAC9BQ,EAAajD,EAAGyC,QAAQ,cAEV,WAAhBE,EACA7M,KAAKgM,gBAAe,IAAItI,IAAkBC,QAAQ+I,IAElDxC,EAAGpS,SAAS,CACRsV,OAAO,EACPV,UAAWA,EACXE,QAASA,EACTC,YAAaA,EACbC,UAAWA,EACXC,YAAaA,EACbC,WAAYA,EACZC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,WAAYA,KAzJpBnN,KAAKqN,SAAWrN,KAAKxH,MAAM6U,UAAY,MACvCrN,KAAKmH,SAAWnH,KAAKxH,MAAMsR,OAC3B9J,KAAK4L,aAAevT,cACpB2H,KAAK+G,aAAe1O,cAEpB2H,KAAKiH,gBAAkB5O,cAEvB2H,KAAKsN,YAActN,KAAKsN,YAAYC,KAAKvN,MACzCA,KAAKwN,aAAexN,KAAKwN,aAAaD,KAAKvN,MAE3CA,KAAKhI,MAAQ,CAACmF,MAAO,GAAIqJ,SAAS,GAUtCiE,oBACQzK,KAAKxH,MAAMiV,gBACXzN,KAAKxH,MAAMiV,eAAezN,MAG9B,IAAI0N,EAAsB,CACtBC,eAAe,WAAD,4BAAE,WAAe3J,EAAQD,EAAS6J,EAAKC,EAAQ7O,GAA7C,eAAA9K,EAAA,sEACS8J,GAAiB8P,eAAe9J,EAAOe,WAAW6I,EAAIvJ,IAAIuJ,EAAIrJ,QADvE,OACR9F,EADQ,OAEZO,EAAS,KAAMP,EAAS2K,KAAI,SAAS2E,GACjC,IAAIC,EAAO,GAIX,MAHG,SAAUD,EAAKE,QACdD,EAAMD,EAAKE,MAAL,MAEH,CACHC,QAASH,EAAK1Y,KACd8H,MAAO4Q,EAAK1Y,KACZ8Y,KAAMH,OAVF,2CAAF,2DAAC,IAgBnBhO,KAAK+L,eAAeqC,WAAa,CAACV,GAGtCnC,SAAS8C,IAUHb,eAAe,IAAD,4HACb,EAAK/D,UAAa,EAAKA,SAASjC,OADnB,uBAEZ,EAAK/H,IAAL,cAAgB,EAAKgC,QAArB,uBACA,EAAKhC,IAAL,6CAHY,iCAMhB,EAAKgK,SAAW,IAAIrD,GAAc,GANlB,SAOE,EAAKqD,SAASvB,IAAI,IAPpB,cAOVxS,EAPU,OAQZ,EAAK+T,SAASjC,SACd,EAAKiC,SAASjC,QAAS,GATX,kBAWT9R,GAXS,8CAcd4X,cAAe,IAAD,kHACd,EAAK7D,UACL,EAAKA,SAASF,UAFA,6CA0FpBQ,SAEI,OACI,uBAAK3M,UAAU,qBAEX,uBAAKkR,WAAa9B,GAAQA,EAAIjS,iBAAkBgU,OAAQvO,KAAKuM,QACzD,gBAAC,aAAD,CAAWiC,YAAa,CAACC,OAAQ,SAAUC,SAAU,KAAK1O,KAAK4L,aAAa5S,QAAQgL,OAAO2K,WAAY,gBAAC,KAAD,CACnG1E,IAAKjK,KAAK4L,aACVlR,KAAMsF,KAAKqN,SACXuB,MAAM,SACNpD,MAAO,OACPiD,OAAQ,OACRlD,SAAUvL,KAAKuL,SACflW,KAAK,eACLwF,SAAU,GACVgU,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,EACTC,0BAA0B,OAKtC,gBAAC,GAAD,CAAcxF,IAAKjK,KAAK+G,aAAc+C,OAAQ9J,OAC9C,gBAAC,GAAD,CAAaiK,IAAMC,IAAMlK,KAAKgH,eAAekD,GAAKJ,OAAQ9J,OAC1D,gBAAC,GAAD,CAAciK,IAAKjK,KAAKiH,gBAAiB6C,OAAQ9J,SAOjE,MAAM0P,WAAqBrX,YACvBqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnB+S,SAAYpO,IACR6C,KAAKlI,SAAS,CAACmL,QAAS9F,KALxB6C,KAAKhI,MAAQ,CAACwO,SAAS,EAAOvD,QAAS,MACvCjD,KAAK8J,OAAStR,EAAMsR,OAOxBC,SACI,OACI,uBAAK3M,UAAU,wBACX,gBAAC,IAAD,CAAQhD,QAAS4F,KAAK8J,OAAO0D,aACrBhH,QAASxG,KAAKhI,MAAMwO,SAD5B,OAEA,gBAAC,IAAD,CAAQpM,QAAS4F,KAAK8J,OAAOwD,aAA7B,UACA,gBAAC,IAAD,CAAQlT,QAAS4F,KAAK8J,OAAO+B,aAA7B,QAJJ,eAKgB,gBAAC,KAAD,CACZN,SAAUvL,KAAKuL,SACf3Q,MAAO,CAAC4Q,MAAO,UAEf,gBAACC,GAAD,CAAQtO,MAAM,SAAd,OACA,gBAACsO,GAAD,CAAQtO,MAAM,SAAd,OACA,gBAACsO,GAAD,CAAQtO,MAAM,SAAd,OACA,gBAACsO,GAAD,CAAQtO,MAAM,WAAd,OACA,gBAACsO,GAAD,CAAQtO,MAAM,WAAd,MACA,gBAACsO,GAAD,CAAQtO,MAAM,YAAd,MACA,gBAACsO,GAAD,CAAQtO,MAAM,MAAd,cAEJ,gBAAC,IAAD,CAASlF,KAAK,aAjBd,UAkBO,gBAAC8S,GAAD,CAAkBO,UAAYL,IACjCjL,KAAKmI,WAAa8C,OASlC,MAAM0E,WAAqBtX,YACvBqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnBkQ,MAAS3H,IACL,MAAMW,EAAO1B,KACbA,KAAKlI,SAAS,CAAC8X,MAAM,IAErBC,WAAW,KACHnO,EAAK1J,MAAM4X,OACXlO,EAAK5J,SAAS,CAAC0O,SAAS,IACxB9E,EAAK0G,cAAgBC,YAAY,KAEzB,GAAyB,YAArB3G,EAAKoO,YACL,OAEJpO,EAAKoO,YAAc,UACnB,MAAMC,EAAM,IAAI9Q,GAAS+Q,ICrS3B,EAACC,EAAWrT,KAC9B,IAAKqT,EAAW,CAEZ,GADArT,EAAUA,GAAW,mBACA,qBAAVsT,MACP,MAAM,IAAIA,MAAMtT,GAEpB,MAAMA,IDgSUuT,CAAOpP,EAAOqP,eAAe,WAAY,uBACzC,MAAM3O,EAAUV,EAAM,QACtBgP,EAAIzO,UAAU,GAAd,6BAAyCG,EAAzC,gBAAkE4O,IAC9D3O,EAAKoO,YAAc,SACnB,MAAMQ,EAAWD,EAAU,GACrBvP,EAAU,CACZyP,SAAU,EACVC,eAAgB,EAChBC,kBAAmB,GAEvBH,EAAQ,WAAeI,QAASrH,IAC5BvI,EAAO,UAAgBuI,EAAI,SAC3BvI,EAAO,gBAAsBuI,EAAI,eACjCvI,EAAO,mBAAyBuI,EAAI,oBAExC3H,EAAK5J,SAAS,CACVwS,QAASxJ,EAAQ0P,eAAiB1P,EAAQyP,SAAW,IACrDI,eAAgB7P,EAAQ2P,kBAAoB3P,EAAQyP,SAAW,IAC/D3W,MAAM,6CAAD,OAA+CkH,EAAQ2P,kBAAvD,YAA4E3P,EAAQyP,SAApF,YAAgGzP,EAAQ0P,eAAxG,gBAET5Q,IACA8B,EAAKoO,YAAc,SACnB,IACIpO,EAAKoI,OAAOqC,UAAUvM,GACxB,MAAO9I,GACL0I,QAAQC,IAAI3I,OAKtB,OAGX,MArDY,KAyDnB+R,KAAO,KACH7I,KAAK8P,YAAc,SACnB9P,KAAK4Q,gBAAkB,SACvB5Q,KAAKlI,SAAS,CAAC0O,SAAS,EAAO8D,QAAS,EAAGqG,eAAgB,EAAGf,MAAM,IAChE5P,KAAKoI,eACLQ,cAAc5I,KAAKoI,gBA5DvBpI,KAAKhI,MAAQ,CAACwO,SAAS,EAAO8D,QAAS,EAAGqG,eAAgB,EAAGf,MAAM,GACnE5P,KAAK8J,OAAStR,EAAMsR,OA+DxBC,SACI,OAAK/J,KAAKhI,MAAMwO,QAEZ,2BAAMxG,KAAKhI,MAAM4B,MACb,gBAAC,KAAD,CAAU0Q,QAAStK,KAAKhI,MAAMsS,QAASqG,eAAgB3Q,KAAKhI,MAAM2Y,kBAH1C,6BAUzBhF,U,+BE3Vf,MAAMkF,GAAgB/S,EAAQ,KAEvB,MAAMgT,WAA0BzY,YACnCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAOnBuY,UAAY,CAACC,EAAW7c,KAEpB,MAAMgJ,EAAQhJ,EAAK,GAAG6c,EAAU3W,KAEhC,GAAI2F,KAAKiR,QAAUjR,KAAKiR,OAAL,OAAnB,CACI,MAAMlH,EAAS/J,KAAKiR,OAAL,OAAsBD,EAAU3W,KAC3C0P,IACAiH,EAAS,OAAajH,OAH9B,CAQA,IACI,GAAI1R,YAAgB6Y,cAAc/T,EAAMlF,MAEpC,YADA+Y,EAAS,OAAa7T,GAAS,4BAAOA,IAI9C,MAAOrG,IAGc,QAAjBka,EAAU3W,IAKS,kBAAX8C,EAMW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjB6T,EAAU3W,KAAwC,WAAjB2W,EAAU3W,KAAqC,QAAjB2W,EAAU3W,MACzE2W,EAAS,OAAa7T,GAAS,2BAAMA,EAAMkE,aAJ3C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAMkE,YAJ5C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAM4F,KAAK,KAAKoO,UAAU,EAAG,MANnEH,EAAS,OAAa7T,GAAS,4BACvB7G,KAAKC,UAAU4G,GAAOgU,UAAU,EAAG,MAN3CH,EAAS,OAAa7T,GAAS,2BAAMA,EAAMgU,UAAU,EAAE,QA7B5C,KAuDnBzJ,OAAS,CAACvT,EAAM8c,KAEZjR,KAAKiR,OAAOA,EACZ,IAAIG,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAM5P,EAAO1B,KAEb7L,EAAKuc,SAAQ,SAAUrH,GACnB,IAAK,IAAIhP,KAAOgP,EACZ,IAAKgI,EAAOhX,GAAM,CACd,MAAM2W,EAAY,CACdpX,MAAOS,EACPkX,UAAWlX,EACXA,IAAKA,GAETqH,EAAKqP,UAAUC,EAAW7c,GAC1Bid,EAAKvO,KAAKmO,GACVK,EAAOhX,IAAO,MAM1BlG,EAAKuc,SAAQ,SAAUrH,EAAMmI,GACzB,IAAIC,EAAW,GACfL,EAAKV,SAAQ,SAAUrW,GACnBoX,EAASpX,EAAIA,KAAOgP,EAAKhP,EAAIA,QAEjCoX,EAAQ,IAAUD,EAClBF,EAAKzO,KAAK4O,MAGdzR,KAAKlI,SAAS,CAAC4Z,QAASN,EAAMjd,KAAMmd,KAxFrB,KA2FnBK,eAAiB,CAACtN,EAAKmN,EAAOI,KACT,gBAAbvN,EAAIhP,MAAuC,QAAbgP,EAAIhP,MAClC2K,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,EACTjc,QAASwO,EAAIlH,UAhGV,KAsGnB4U,eAAiB,KACb/R,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,MAvGjB9R,KAAKgS,WAAaxZ,EAAMoC,OAAS,GACjCoF,KAAKhI,MAAQ,CAAC0Z,QAAS,GAAIJ,KAAM,GAAIO,KAAM,CAACC,SAAS,IACrD9R,KAAKiR,OAAS,GA0GlBlH,SACI,MAAMrI,EAAO1B,KACb,OAAQ,uBAAKpF,MAAOoF,KAAKgS,YACjB,gBAAC,KAAD,CACIC,MAAO,CAAC5N,EAAKmN,KACF,CACHU,cAAgBN,IACZlQ,EAAKiQ,eAAetN,EAAKmN,EAAOI,MAO5CF,QAAS1R,KAAKhI,MAAM0Z,QACpBS,WAAYnS,KAAKhI,MAAM7D,OAC3B,gBAAC,KAAD,CACIyF,MAAO,OACPC,QAASmG,KAAKhI,MAAM6Z,KAAKC,QACzBhY,SAAUkG,KAAK+R,eACfhY,KAAMiG,KAAK+R,eACX9X,WAAW,SACXmY,OAAO,MAEP,gBAACvB,GAAD,CAAewB,OAAQrS,KAAKhI,MAAM6Z,KAAKhc,SAAW,Q,kECtItE,MAAMyc,GAAY,CACd9G,MAAO,IACPiD,OAAQ,IACR8D,YAAa,EACbC,YAAa,OACbC,YAAa,SACbC,aAAc,GAEZC,GAAc,CAChBF,YAAa,QACbD,YAAa,OACbI,gBAAiB,QAEfC,GAAc,CAChBJ,YAAa,QACbD,YAAa,OACbI,gBAAiB,QAGfE,GAAgB,CAClB1L,QAAS,QAIN,MAAM2L,WAAuB1a,IAAM2a,UAEtCtS,cACImE,QADU,KAQd0J,OAAU0E,IACNjT,KAAKlI,SAAS,CAACmb,UACf,MAAMC,EAAMhU,KAAQnK,KdhCgB,uBciCpCme,EAAIzc,IAAI,eAAgBvB,eAAe0B,QAAQmI,KAA0B,IACzEkU,EAAMvC,QAAQyC,IACVD,EAAIE,OAAOD,EAAKzc,KAAMyc,KAG1BD,EAAIG,IAAI,CAAC5P,EAAK/N,KACVsK,KAAKlI,SAAS,CAACmb,MAAO,KACjBxP,GAKDjE,QAAQC,IAAIgE,GACZzD,KAAKlI,SAAS,CAAC+D,IAAK4H,EAAIpC,WAAa,kFALjC3L,EAAIwL,IACJlB,KAAKlI,SAAS,CAAC+D,IAAK,eAAiBoX,EAAM9J,OAAS,uFAlBhEnJ,KAAKhI,MAAQ,CACTib,MAAO,IA2BflJ,SAEI,MAAMkJ,EAAQjT,KAAKhI,MAAMib,MAAM7J,IAAIkK,GAC/B,wBAAIjZ,IAAKiZ,EAAEje,MACNie,EAAE5c,KADP,MACgB4c,EAAEC,KADlB,WAKJ,OACI,6BAAS3Y,MAAOkY,IACZ,6BACI,kBAAC,KAAD,CAAUvE,OAAQvO,KAAKuO,OACbiF,qBAAsBhH,GAAOiH,aAAUjH,IAE5C,EAAEkH,eAAcC,gBAAeC,eAAcC,eAAcC,eAAcC,gBAAeC,oBACrF,IAAIC,EAAM,eAAO3B,IAIjB,OAHA2B,EAASL,EAAY,2BAAOK,GAAWtB,IAAesB,EACtDA,EAASH,EAAY,2BAAOG,GAAWpB,IAAeoB,EAGlD,yCACQP,IADR,CAEI9Y,MAAOqZ,IAEP,0BAAWN,KACX,6BACKE,EAAe,OAAS,OAD7B,kBAGCC,GAAgB,6DAMrC,+BACI,4BAAsB,IAAjBb,EAAM9J,OAAe,GAAK,SAC/B,4BAAK8J,IAET,6BAAMjT,KAAKhI,MAAM6D,IAAMmE,KAAKhI,MAAM6D,IAAM,M,aChGxD,MAAMqY,GAAcpW,EAAQ,KACtBqW,GAAgB,KAClB,IAAIC,EAAQF,KAIZ,MAHc,YAAVE,IACAA,EAAQ,WAELA,GAGI,MAAMC,GA0BjB,cAAclgB,GACV,IAAImgB,EAAQngB,EAAK,GAAGic,eAAe,KAC9Bjc,EAAKic,eAAe,aACrBjc,EAAKuc,QAASrH,IACVA,EAAI,SAAe,UACdiL,IACDjL,EAAI,EAAQ,KAIxB,MAAMkL,EAAkBpgB,EAAKqgB,OAAO,CAACpL,EAAKC,KACVA,EAArBoL,EAAqBpL,EAAlBqL,EAAkBrL,EAAfsL,EADmC,MAChCC,EAAYvL,EAAZuL,SACVC,EAAOzL,EAAIhT,IAAIwe,GAMrB,OALIC,EACAA,EAAKhS,KAAKwG,GAEVD,EAAI3S,IAAIme,EAAU,CAACvL,IAEhBD,GACR,IAAI0L,KAGDC,EADO5gB,EAAK,GACE,cAAoB,GAElC6gB,EAAW,IAAIT,EAAgBnD,QAAQhI,IAAK/O,IAC9C,MAAM4a,EAAiB/S,OAAOC,OAAO,CAAC+S,KAAMf,KAAiBgB,MAAO,YAAcJ,EAAQ1a,IAAQ,IAClG,OAAO,kBAAC,KAAD,eAASA,IAAKA,EAAKhF,KAAMgF,EAAKlG,KAAMogB,EAAgBne,IAAIiE,IAAU4a,MAIvEG,EAAUlT,OAAOC,OAAO,CAAClK,KAAM,SAAUod,QAAS,KAAON,EAAO,GAAS,IACzEO,EAAUpT,OAAOC,OAAO,CAAClK,KAAM,SAAUod,QAAS,KAAON,EAAO,GAAS,IACzEQ,EAAUrT,OAAOC,OAAO,CAAClK,KAAM,SAAUod,QAAS,KAAON,EAAO,GAAS,IAG/E,OACI,kBAAC,KAAD,CACIvJ,MAAO,IACPiD,OAAQ,IACRlE,OAAQ,CACJiL,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAG1C,kBAAC,KAAD,MACA,kBAAC,KAAUP,GACX,kBAAC,KAAUE,GACVhB,EAAQ,kBAAC,KAAUiB,GAAa,GACjC,kBAAC,KAAD,CAASK,OAAQ,CAACC,gBAAiB,SACnC,kBAAC,KAAD,MACCb,IA3EIX,GAGVyB,WAAa,CAAC3hB,EAAM4hB,KACvB,GAAI5hB,EAAKgV,OAAS,EACd,OAAO,EAGX,IACI,OAAO4M,EAAI5hB,EAAK,IAClB,MAAO2C,GACL,OAAO,EAGX,OAAO,GAdMud,GAiBV2B,eAAkB7hB,GACdkgB,GAA0ByB,WAAW3hB,EAAOkV,GAExCA,EAAK+G,eAAe,MAAQ/G,EAAK+G,eAAe,OAAS/G,EAAK+G,eAAe,iBAAmB/G,EAAK+G,eAAe,WACtG,YAAjB/G,EAAI,MAAmE,aAAxCA,EAAI,cAAoB,IAAzB,OCtB9C,MAAM6K,GAAcpW,EAAQ,KACtBqW,GAAgB,KAClB,IAAIC,EAAQF,KAIZ,MAHc,YAAVE,IACAA,EAAQ,WAELA,GAGI,MAAM6B,GAuBjB,cAAc9hB,GACV,MAAMkV,EAAOlV,EAAK,GACZ+hB,EAAK,GACLnB,EAAU1L,EAAI,cAAoB,GACxC,MAAqB,SAAjBA,EAAI,MAA2C,SAApB0L,EAAO,MAClC7S,OAAOkP,KAAK/H,GAAMqH,QAASrW,IACvB,GAA2B,kBAAfgP,EAAKhP,GAAoB,CACjC,MAAM4a,EAAiB/S,OAAOC,OAAO,CAACgU,OAAQhC,MAAmBY,EAAQ1a,IAAQ,IACjF6b,EAAGrT,KAAK,kBAAC,KAAD,eAAMxI,IAAKA,EAAKpC,KAAK,WAAWod,QAAShb,GAAS4a,QAG3D,kBAAC,KAAD,CACHzJ,MAAO,IACPiD,OAAQ,IACRta,KAAMA,EACNoW,OAAQ,CACJiL,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGzC,kBAAC,KAAD,CAAeG,gBAAgB,QAC/B,kBAAC,KAAD,CAAOR,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACCa,IAKY,QAAjB7M,EAAI,MAA0C,QAApB0L,EAAO,MACjC7S,OAAOkP,KAAK/H,GAAMqH,QAASrW,IACvB,GAA2B,kBAAfgP,EAAKhP,GAAoB,CACjC,MAAM4a,EAAiB/S,OAAOC,OAAO,CAAC+S,KAAMf,MAAmBY,EAAQ1a,IAAQ,IAC/E6b,EAAGrT,KAAK,kBAAC,KAAD,eAAMxI,IAAKA,EAAKgb,QAAShb,GAAS4a,QAG3C,kBAAC,KAAD,CACHzJ,MAAO,IACPiD,OAAQ,IACRta,KAAMA,EACNoW,OAAQ,CACJiL,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGzC,kBAAC,KAAD,CAAeG,gBAAgB,QAC/B,kBAAC,KAAD,CAAOR,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACCa,SApBT,GApDaD,GAGVH,WAAa,CAAC3hB,EAAM4hB,KACvB,GAAI5hB,EAAKgV,OAAS,EACd,OAAO,EAGX,IACI,OAAO4M,EAAI5hB,EAAK,IAClB,MAAO2C,GACL,OAAO,EAGX,OAAO,GAdMmf,GAiBVD,eAAkB7hB,GACd8hB,GAAeH,WAAW3hB,EAAOkV,GAC7BA,EAAK+G,eAAe,OAAS/G,EAAK+G,eAAe,SAAW/G,EAAK+G,eAAe,kB,yBCpCpF,MAAMgG,WAAoBpD,YAErCtS,YAAYlI,GACRqM,MAAMrM,GADS,KA+BnB6d,aAAe,KACX,MAAMliB,EAAO6L,KAAKhI,MAAM7D,KAClBmiB,EAAgB,GAChBC,EAAiB,GAEvBpiB,EAAKuc,QAASrH,IACV,MAAMmN,EAAWlgB,KAAKO,MAAMwS,EAAI,OAC1BoL,EAAIgC,KAAOC,IAAIF,EAASG,WAAWC,OAAO,cAChDN,EAAczT,KAAK,CACf4R,EAAGA,EACHoC,mBAAoBL,EAASK,mBAC7BC,uBAAwBN,EAASM,yBAGrCP,EAAe1T,KAAK,CAChB4R,EAAGA,EACHsC,aAAcP,EAASO,iBAG/B/W,KAAKlI,SAAS,CACVwe,cAAeA,EACfC,eAAgBA,KAlDpBvW,KAAKmH,SAAW3O,EAAMsR,OAAOA,OAC7B9J,KAAKhI,MAAQ,CAAC7D,KAAMqE,EAAMrE,KAAMmiB,cAAe,GAAIU,SAAU,IAIjEvM,oBACIzK,KAAKqW,eA0DTtM,SACI,OAAwC,IAApC/J,KAAKhI,MAAMse,cAAcnN,OAAqB,KAC3C,6BAEH,kBAAC,KAAD,CAAWqC,MAAO,IAAKiD,OAAQ,IAAKta,KAAM6L,KAAKhI,MAAMse,eACjD,kBAAC,KAAD,CAAMre,KAAK,WAAWod,QAAQ,qBAAqBc,OAAO,YAC1D,kBAAC,KAAD,CAAMle,KAAK,WAAWod,QAAQ,yBAAyBc,OAAO,YAC9D,kBAAC,KAAD,CAAeA,OAAO,SACtB,kBAAC,KAAD,CAAOd,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,OAGJ,kBAAC,KAAD,CAAW7J,MAAO,IAAKiD,OAAQ,IAAKta,KAAM6L,KAAKhI,MAAMue,gBACjD,kBAAC,KAAD,CAAMte,KAAK,WAAWod,QAAQ,eAAec,OAAO,YACpD,kBAAC,KAAD,CAAeA,OAAO,SACtB,kBAAC,KAAD,CAAOd,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,SAtFKe,GAaVa,SAAY9iB,IACf,GAAIA,EAAKgV,OAAS,EACd,OAAO,EAEX,IAEI,IADa7S,KAAKO,MAAM1C,EAAK,GAAL,OACf,MACL,OAAO,EAEb,MAAO2C,GACL,OAAO,EAGX,OAAO,GA1BMsf,GA6BVJ,eAAkB7hB,GACdiiB,GAAYa,SAAS9iB,GA9BfiiB,GA0DVc,cAAiB/iB,IACpB,IAAKiiB,GAAYJ,eAAe7hB,GAAO,MAAO,GAC9C,MAAMmiB,EAAgB,GAKtB,OAJAniB,EAAKuc,QAASrH,IACV,MAAMmN,EAAWlgB,KAAKO,MAAMwS,EAAI,OAChCiN,EAAczT,KAAKvM,KAAKC,UAAUigB,EAAU,KAAM,MAE/CF,EAAcvT,KAAK,OClEnB,MAAMoU,GAuBjB,cAAchjB,GACV,MAAMkV,EAAOlV,EAAK,GAClB,OAAO,kBAAC,GAAD,CAAgBA,KAAMkV,KAzBhB8N,GAGVrB,WAAa,CAAC3hB,EAAM4hB,KACvB,GAAI5hB,EAAKgV,OAAS,EACd,OAAO,EAGX,IACI,OAAO4M,EAAI5hB,EAAK,IAClB,MAAO2C,GACL,OAAO,EAGX,OAAO,GAdMqgB,GAiBVnB,eAAkB7hB,GACdgjB,GAAUrB,WAAW3hB,EAAOkV,GACxBA,EAAK+G,eAAe,UAAY/G,EAAK+G,eAAe,SAAW/G,EAAK+G,eAAe,kBAW/F,MAAMgH,WAAuB/e,IAAM2a,UAGtCtS,YAAYlI,GACRqM,MAAMrM,GADS,KAKnB6e,QAAWljB,IACP6L,KAAKlI,SAAS,CAAC3D,KAAMA,KAJrB6L,KAAKhI,MAAQ,CAAC7D,KAAM6L,KAAKxH,MAAMrE,MAOnC4V,SACI,OACI,yBAAKnP,MAAO,CAAC4Q,MAAM,SACf,kBAAC,aAAD,CAAWgD,YAAa,CAACC,OAAQ,UAC7B,4BACI6I,QAAQ,gBACR1c,MAAO,CAAC4Q,MAAO,OAAQiD,OAAQ,QAC/B8I,OAAQvX,KAAKhI,MAAM7D,KAAX,KACRqjB,YAAY,IACZC,UAAU,MACVxN,IAAMqJ,IACFtT,KAAK0X,IAAMpE,QChDxB,MAAMqE,WAAqBtf,IAAM2a,UAC5CtS,YAAYlI,GAAO,IAAD,EAChBqM,MAAMrM,GADU,YAqHlBof,aAAe,KACb5X,KAAKlI,SAAS,CAAC+f,YAAY7X,KAAKhI,MAAM6f,cAtHtB,KAwHlBC,eAAiB,KACf9X,KAAKlI,SAAS,CAACigB,cAAc/X,KAAKhI,MAAM+f,gBAzHxB,KAgIlBC,SAAY/Z,IACT,IACC,OAAOA,EAAIqL,MAAM,MAAMuB,OAAOoN,IAAQA,EAAKC,SAAS,aAAanV,KAAK,MACtE,MAAMjM,GACN,OAAOmH,IAjIT+B,KAAKmH,SAAW3O,EAAMsR,OAAO3C,SAC7BnH,KAAKnL,OAAS,IAAIC,cAClBkL,KAAKhI,MAAQ,CAAC6f,YAAW,EAAMM,mBAAmB,IAGlD,IAAIC,EAAiB,CAACjb,EAAMkb,IACnB,kBAAC,IAAD,CAAQpgB,KAAK,OAAOmC,QAAO,uCAAE,WAAOoS,GAAP,mBAAAtY,EAAA,sDAM5BokB,EAAY9L,EAAI+L,OAAOC,WAMvBC,EAAMH,EAAUE,WAAWE,UAC7BC,EAAQ,GAbsB,KAc1BF,EAd0B,OAe3B,IAf2B,OAgB3B,IAhB2B,OAiB3B,IAjB2B,+BAexBE,EAAO,UAfiB,mCAgBxBA,EAAO,SAhBiB,oCAiBxBA,EAAO,WAjBiB,oCAmBlCnZ,QAAQC,IAAIgZ,GAnBsB,UAoB5B,EAAKZ,WAAWQ,EAAOhjB,KAAKsjB,GApBA,4CAAF,uDAsB9B,0BAAM/d,MAAO,CAACge,WAAW,SAASC,SAAS,aAAarN,MAAM,UAAWrO,IAsC/E6C,KAAK8Y,aAAe,CAClB/O,OAAO,CACLlU,QAASuiB,EACTnP,SATkB,CAAC9L,EAAMkb,IACpB,kBAAC,IAAD,CAAQpgB,KAAK,OAAOmC,QAAO,uCAAE,WAAOoS,GAAP,SAAAtY,EAAA,sEAC5B,EAAK6jB,aAAaM,EAAOhjB,MADG,2CAAF,uDAE/B,0BAAMuF,MAAO,CAACge,WAAW,SAASC,SAAS,aAAarN,MAAM,UAAWrO,IAO1E6L,OAAQoP,EACRxc,OAxCgBuB,IAClB,IAAI4b,EAAI,GACJC,EAAW,GACf,OAAQ7b,GACN,IAAK,OACL,IAAK,SAAU4b,EAAI,SAAU,MAC7B,IAAK,UAAWA,EAAI,UAAWC,EAAU,CAACpG,gBAAgB,SAAU,MACpE,IAAK,UAAWmG,EAAI,UAGtB,OAAO,kBAAC,IAAD,CAAQ9gB,KAAM8gB,EAAGne,MAAOoe,GAAW7b,IA+BxC,YA5BgB,CAACA,EAAMkb,KACzB,MAAM5W,EAAU4W,EAAOhjB,KACvB,MAAmB,YAAhBgjB,EAAOzc,OACC,kBAAC,IAAD,CAAQ3D,KAAK,UAAUoC,IAAKoH,EAAS+E,QAASxG,KAAKhI,MAAMmgB,mBAAmB1W,GAAUrH,QAAO,uCAAE,WAAOoS,GAAP,SAAAtY,EAAA,6DACnG,EAAK8D,MAAMmgB,mBAAmB1W,IAAW,EACzC,EAAK3J,SAAS,EAAKE,MAAMmgB,oBAF0E,SAG7F/S,GAAc6T,OAAOZ,EAAOxiB,SAHiE,OAInG,EAAK4S,SAJ8F,2CAAF,uDAA7F,iBAOJ,kBAAC,IAAD,CAAQpO,IAAKoH,EAASrH,QAAO,uCAAE,WAAOoS,GAAP,SAAAtY,EAAA,sEACjBkR,GAAcmE,QAAQ9H,GADL,cAEnC,EAAKgH,SAF8B,2CAAF,uDAA7B,WAuBLA,SAAS,IAAD,+HACZ,EAAK3Q,SAAS,CAACqgB,mBAAmB,KADtB,SAEM,EAAKtjB,OAAOuB,IAAIpB,UAAakkB,SAAS,IAF5C,OAGK,MADXxjB,EAFM,QAGLkG,QACF,EAAKwL,SACJ,EAAKA,QAAQM,OACX,EAAKyR,YAAYzjB,EAAIG,SACrB,EAAKijB,cAPD,6CAYdK,YAAYhlB,GACT,OAAOA,EAAKiV,IAAIC,IACd,MAAM5H,EAA2B,YAAjB4H,EAAI,OAAyBA,EAAI,QAAc,GAC/D,OAAOnH,OAAOC,OAAOkH,EAAK,CAAC,YAAc5H,MAIxCoW,WAAWpW,EAAQkX,GAAO,IAAD,wIACX,EAAK9jB,OAAOuB,IAAIpB,UAAa8T,WAAW,CAACrH,QAAQA,IADtC,OACvB/L,EADuB,OAE7B,EAAKoC,SAAS,CACZ+f,YAAY,EACZuB,qBAAqB1jB,EAAIG,QAAQ8iB,KAJN,6CAQzBZ,aAAatW,GAAS,IAAD,wIACP,EAAK5M,OAAOuB,IAAIpB,UAAa8T,WAAW,CAACrH,QAAQA,IAD1C,OACnB/L,EADmB,OAEzB,EAAKoC,SAAS,CACZigB,cAAc,IAEb,EAAKsB,aACN,EAAKA,YAAY3R,OAAOpR,KAAKO,MAAMnB,EAAIG,QAAQoT,WANxB,6CAiBtBwB,oBAAoB,IAAD,kIACf,EAAKhC,SADU,6CAaxBsB,SACE,OAAO,yBAAK3M,UAAU,uBACpB,kBAAC,KAAD,CACYxD,MAAO,OACPC,QAASmG,KAAKhI,MAAM6f,WACpB/d,SAAUkG,KAAK4X,aACf7d,KAAMiG,KAAK4X,aACX3d,WAAW,SACXuR,MAAM,MACN4G,OAAO,MAClB,kBAAC,KAAD,CAAW3D,OAAQ,QACJjD,MAAO,OACP9Q,KAAK,OACLkU,MAAM,SACNvZ,KAAK,aACL8H,MAAO6C,KAAKgY,SAAShY,KAAKhI,MAAMohB,uBAAuB,MAGvE,kBAAC,KAAD,CACYxf,MAAO,OACPC,QAASmG,KAAKhI,MAAM+f,aACpBje,SAAUkG,KAAK8X,eACf/d,KAAMiG,KAAK8X,eACX7d,WAAW,SACXuR,MAAM,MACN4G,OAAO,MACnB,kBAAC,GAAD,CAAmBxX,MAAO,CAAC0e,SAAS,UAAWrP,IAAMsP,IAAYvZ,KAAKqZ,YAAcE,GAAWzP,OAAQ9J,QAEvG,yBAAKpF,MAAO,CAAE4e,aAAc,KAC1B,kBAAC,IAAD,CAAQvhB,KAAK,UAAUmC,QAAS,KAAK4F,KAAKyI,WAA1C,WAIF,kBAAC,GAAD,CAAmBwB,IAAMsP,IAAYvZ,KAAKoH,QAAUmS,GAAWzP,OAAQ9J,SCtK/E,MAAMyZ,GAAQC,KAASD,MACjBE,GAAUC,KAAKD,QAErB,SAAS3a,GAAS3E,IAIX,MAAMwf,WAAkBC,gBAC3BpZ,YAAYlI,GACRqM,MAAMrM,GADS,KAsBnBuhB,WAAc5lB,GACH0lB,GAAU/D,WAAW3hB,EAAOkV,GACxBA,EAAK+G,eAAe,MAAQ/G,EAAK+G,eAAe,MAAgC,kBAAf/G,EAAI,GAxBjE,KA6BnB2Q,SAAY7lB,GACD,kBAAC,KAAD,CACHsa,OAAQ,IACR7U,MAAM,MACNzF,KAAMA,IAjCK,KAsCnB8lB,WAAa,KACT,MAAM9lB,EAAO6L,KAAKhI,MAAM7D,KACxB,OAAIiiB,GAAYJ,eAAe7hB,GACpB,kBAAC,GAAD,CAAaA,KAAMA,EAAM2V,OAAQ9J,OAGxCqU,GAA0B2B,eAAe7hB,GAClCkgB,GAA0BtK,OAAO5V,GAGxC6L,KAAK+Z,WAAW5lB,GACT6L,KAAKga,SAAS7lB,GAGrB8hB,GAAeD,eAAe7hB,GACvB8hB,GAAelM,OAAO5V,GAG7BgjB,GAAUnB,eAAe7hB,GAClBgjB,GAAUpN,OAAO5V,GAGrB,+BA1DP6L,KAAKmH,SAAW3O,EAAMsR,OACtB9J,KAAKhI,MAAQ,CAAC7D,KAAM,GAAImiB,cAAe,GAAIU,SAAU,IA6DzDK,UACI,IACI,MAAMljB,EAAO6L,KAAKmH,SAAS+S,cAAgB,GAC3Cla,KAAKlI,SAAS,CAAC3D,KAAMA,IACvB,MAAO2C,KAObiT,SACI,OAAQ,kBAAC,KAAD,CAAUwB,SAAUvM,IACxB,kBAACya,GAAD,CAAOU,OAAO,kBAAkB9f,IAAI,KAChC,kBAAC,KAAD,CAAM+f,iBAAiB,IAAI7O,SAAUvM,GAAUqb,WAAahgB,IAC3C,MAANA,GACC2F,KAAKsM,oBAAoB7D,WAGjC,kBAACkR,GAAD,CAASW,IAAI,eAAejgB,IAAI,KAC/B,kBAAC,GAAD,CAAkB4P,IAAMC,GAAKlK,KAAKsM,oBAAoBpC,EAAIJ,OAAQ9J,QAEnE,kBAAC2Z,GAAD,CAASW,IAAI,SAASjgB,IAAI,KACtB,kBAAC,GAAD,OAEJ,kBAACsf,GAAD,CAASW,IAAI,YAAYjgB,IAAI,KAAK2F,KAAKia,cACvC,kBAACN,GAAD,CAASW,IAAI,UAAUjgB,IAAI,KACvB,6BAAM+b,GAAYc,cAAclX,KAAKhI,MAAM7D,QAE/C,kBAACwlB,GAAD,CAASW,IAAI,UAAUjgB,IAAI,KACvB,kBAAC,GAAD,CAAc4P,IAAMC,GAAKlK,KAAKwI,aAAa0B,EAAIJ,OAAQ9J,YA/FlE6Z,GAQF/D,WAAa,CAAC3hB,EAAM4hB,KACvB,GAAI5hB,EAAKgV,OAAS,EACd,OAAO,EAGX,IACI,OAAO4M,EAAI5hB,EAAK,IAClB,MAAO2C,GACL,OAAO,EAGX,OAAO,GCzBA,MAAMyjB,WAAkBliB,IAAM2a,UAEzCtS,YAAYlI,GACRqM,MAAMrM,GADS,KAInBgiB,eAAiB,IACNxa,KAAKgE,OAAOA,OAGvByG,oBACIzK,KAAKwa,iBAAiBC,UAAU7f,MAAM8f,WAAa,EAGvD3Q,SACI,OACI,kBAAC,KAAD,CACI4Q,SAAUzL,IACV1D,MAAO,OACPvB,IAAKC,IACDlK,KAAKgE,OAASkG,GAElB/M,MAAO6C,KAAKxH,MAAMoiB,YAClBlgB,KAAK,MACLkU,MAAM,Y,eCpCP,MAAMc,WAAqBrX,IAAM2a,UAE5CtS,YAAYlI,GACRqM,MAAMrM,GADS,KAKnBqiB,WAAa,KACT7a,KAAKlI,SAAS,CAACgjB,WAAW,IAC1B9a,KAAKhI,MAAM+iB,YAAYC,WAPR,KAUnBC,cAAgB,KACZjb,KAAKlI,SAAS,CAACgjB,WAAW,KAT1B9a,KAAKhI,MAAQ,CAAC8iB,WAAW,EAAOC,YAAaviB,EAAMuiB,aAYvDhR,SACI,OAAO,6BAEC/J,KAAKhI,MAAM8iB,UAAY,0BAAM1gB,QAAS4F,KAAKib,eAAe,kBAAC,KAAD,CAAMhjB,KAAK,OAAOijB,MAAI,KAC5E,0BAAM9gB,QAAS4F,KAAK6a,YAAY,kBAAC,KAAD,CAAM5iB,KAAK,mBCnB/D,MAAMuI,GAAS1C,EAAQ,KAER,MAAMqd,GAKjBza,YAAYuC,GAAU,KAQtBiF,IAAM,CAACjK,EAAKmd,EAAaC,KACrB,MAAM5Z,EAAUjB,KACJ,IAAIvB,GAAS+Q,IAErB7M,aAAa,CACb1B,QAASA,EACTwB,QAASjD,KAAKiD,SACfhF,EAAKmd,EAAaC,IAfJ,KAyBrBtT,SAAW,CAACuT,EAAMtT,EAAUoT,KACZ,IAAInc,GvB/B2B,uBuBgCvCC,QAAQH,GAAkB,CAC1B/D,GAAIgN,EACJnS,QAASylB,GACTpa,IACiB,KAAbA,EAAGtF,OACHsF,EAAGvB,KAAMwB,IACLia,EAAYja,EAAG,MACfN,IACAua,EAAYva,KAGhBua,EAAY,UAGhBha,IACAga,EAAYha,MAzChBpB,KAAKiD,QAAUA,GCTvB,MAAM4N,GAAgB/S,EAAQ,KAGf,MAAMyd,WAAkBljB,YAEnCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnBuY,UAAY,CAACC,EAAW7c,EAAM8c,KAE1B,MAAM9T,EAAQhJ,EAAK,GAAG6c,EAAU3W,KAEhC,GAAI4W,GAAUA,EAAM,OAApB,CACI,MAAMlH,EAAS/J,KAAKhI,MAAMiZ,OAAX,OAA4BD,EAAU3W,KACjD0P,IACAiH,EAAS,OAAajH,OAH9B,CAQA,IACI,GAAI1R,YAAgB6Y,cAAc/T,EAAMlF,MAEpC,YADA+Y,EAAS,OAAa7T,GAAS,4BAAOA,IAI9C,MAAOrG,IAGgB,kBAAXqG,EAIW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjB6T,EAAU3W,KAAwC,WAAjB2W,EAAU3W,KAAqC,QAAjB2W,EAAU3W,MACzE2W,EAAS,OAAa7T,GAAS,2BAAMA,EAAMkE,aAJ3C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAMkE,YAJ5C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAM4F,KAAK,KAAKoO,UAAU,EAAG,MAJnEH,EAAS,OAAa7T,GAAS,4BAAO7G,KAAKC,UAAU4G,GAAOgU,UAAU,EAAG,QA5B9D,KA+CnBqK,UAAY,CAACrnB,EAAM8c,KACf,IAAIG,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAM5P,EAAO1B,KA0Bb,OAxBA7L,EAAKuc,SAAQ,SAAUrH,GACnB,IAAK,IAAIhP,KAAOgP,EACZ,IAAKgI,EAAOhX,GAAM,CACd,MAAM2W,EAAY,CACdpX,MAAOS,EACPkX,UAAWlX,EACXA,IAAKA,GAETqH,EAAKqP,UAAUC,EAAW7c,GAC1Bid,EAAKvO,KAAKmO,GACVK,EAAOhX,IAAO,MAM1BlG,EAAKuc,SAAQ,SAAUrH,EAAMmI,GACzB,IAAIC,EAAW,GACfL,EAAKV,SAAQ,SAAUrW,GACnBoX,EAASpX,EAAIA,KAAOgP,EAAKhP,EAAIA,QAEjCoX,EAAQ,IAAUD,EAClBF,EAAKzO,KAAK4O,MAEP,CAACL,EAAME,IA7EC,KAgFnB+F,QAAU,CAACljB,EAAM8c,KAAW,QAEHjR,KAAKwb,UAAUrnB,EAAM8c,GAFlB,mBAEjBG,EAFiB,KAEXE,EAFW,KAGxBtR,KAAKlI,SAAS,CAAC4Z,QAASN,EAAME,KAAMA,EAAML,OAAQA,KAnFnC,KAsFnBU,eAAiB,CAACtN,EAAKmN,EAAOI,KACT,gBAAbvN,EAAIhP,MAAuC,QAAbgP,EAAIhP,MAClC2K,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,EACTjc,QAASwO,EAAIlH,UA3FV,KAiGnB4U,eAAiB,KACb/R,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,MApGF,QAEM9R,KAAKwb,UAAUhjB,EAAMrE,MAAQ,GAAIqE,EAAMyY,QAAU,IAFvD,mBAERG,EAFQ,KAEFE,EAFE,KAGftR,KAAKhI,MAAQ,CAAC0Z,QAASN,EAAME,KAAMA,EAAMO,KAAM,CAACC,SAAS,IAsG7D/H,SACI,MAAMrI,EAAO1B,KACb,OAAQ,2BACA,gBAAC,KAAD,CACIiS,MAAO,CAAC5N,EAAKmN,KACF,CACHU,cAAgBN,IACZlQ,EAAKiQ,eAAetN,EAAKmN,EAAOI,MAO5CF,QAAShQ,EAAK1J,MAAM0Z,QACpBS,WAAYzQ,EAAK1J,MAAMsZ,OAC3B,gBAAC,KAAD,CACI1X,MAAO,OACPC,QAAS6H,EAAK1J,MAAM6Z,KAAKC,QACzBhY,SAAU4H,EAAKqQ,eACfhY,KAAM2H,EAAKqQ,eACX9X,WAAW,SACXmY,OAAO,MAEP,gBAAC,GAAD,CAAeC,OAAQ3Q,EAAK1J,MAAM6Z,KAAKhc,SAAW,QCpIvD,MAAM4lB,WAAqBpjB,IAAM2a,UAE5CtS,YAAYlI,GACRqM,MAAMrM,GADS,KAMnB6e,QAAWqE,IAMP,GALA1b,KAAKlI,SAAS,CAAC4jB,YAAaA,EAAaC,SAAU,KAC/C3b,KAAK4b,iBACL5b,KAAK4b,gBAAgBvE,QAAQrX,KAAKhI,MAAM0jB,YAAa,IAGrD1b,KAAK6b,eAAgB,CACrB,MAAMxS,EAAOrJ,KAAKhI,MAAM0jB,YAAY,GACpC1b,KAAK6b,eAAexE,QAAQhO,KAdjB,KAmBnBjI,KAAQvF,IACJmE,KAAKlI,SAAS,CAAC6jB,SAAU9f,IACrBmE,KAAKgE,QACLhE,KAAKgE,OAAOA,OAAOE,SAASrI,IAtBjB,KA0BnBigB,YAAc,KACV,GAAI9b,KAAKhI,MAAM0jB,aAAevE,GAAUnB,eAAehW,KAAKhI,MAAM0jB,aAAc,CAC5E,MAAMrS,EAAOrJ,KAAKhI,MAAM0jB,YAAY,GACpC,OAAO,kBAAC,GAAD,CAAgBvnB,KAAMkV,EAAMY,IAAMC,GAAOlK,KAAK6b,eAAiB3R,IAEtE,OAAO,+BA/BI,KAoCnB6R,aAAe,IACP/b,KAAKhI,MAAM2jB,SACJ,6BAAK,kBAAC,KAAD,CACRhB,SAAUzL,IACV1D,MAAO,OACPvB,IAAKC,IACDlK,KAAKgE,OAASkG,GAElB/M,MAAO6C,KAAKhI,MAAM2jB,SAClBjhB,KAAK,OACLkU,MAAM,wBAIH,8BAlDI,KAsDnBoN,aAAe,IACPhc,KAAKhI,MAAM0jB,YACJ,kBAAC,GAAD,CAAWvnB,KAAM6L,KAAKhI,MAAM0jB,YAAazR,IAAMC,GAAOlK,KAAK4b,gBAAkB1R,IAE7E,8BAxDXlK,KAAKhI,MAAQ,CAAC2jB,SAAU,IA6D5B5R,SACI,OAAO,6BACF/J,KAAK+b,eAEF/b,KAAKgc,eACPhc,KAAK8b,gBCpEJ,MAAMG,WAAoB5jB,IAAM2a,UAC3CtS,YAAYlI,GACRqM,MAAMrM,GADS,KAKnBwiB,QAAU,KACN,MAAM/c,EAAM+B,KAAKkc,UAAU1B,iBAAiBzV,WAC7B,IAAIoW,GAAO,KACnBjT,IAAIjK,EAAMpC,IACbmE,KAAKmc,aAAa9E,QAAQxb,GAC1BmE,KAAK+G,aAAajP,SAAS,CAACgjB,WAAW,IACvC9a,KAAKoc,SAASC,mBACfxgB,IACCmE,KAAKmc,aAAa/a,KAAKvF,GACvBmE,KAAK+G,aAAajP,SAAS,CAACgjB,WAAW,OAd5B,KAkBnBwB,iBAAmB,IACc,KAAtBtc,KAAKuc,aAnBG,KAsBnBA,WAAa,IACFvc,KAAKkc,UAAU1B,iBAAiBzV,WArBvC/E,KAAKoc,SAAW5jB,EAAMsR,OAyB1BC,SACI,OAAO,6BACH,kBAAC,GAAD,CAAW6Q,YAAa5a,KAAKxH,MAAMoiB,YAAa3Q,IAAKC,IACjDlK,KAAKkc,UAAYhS,GAClB6Q,YAAa/a,OAChB,kBAAC,GAAD,CAAciK,IAAKC,IACflK,KAAK+G,aAAemD,GACrB6Q,YAAa/a,OAChB,kBAAC,GAAD,CAAciK,IAAKC,GAAMlK,KAAKmc,aAAejS,MCvCzD,MAAMsS,GAAgB,2CAEP,MAAMC,WAAiBpkB,IAAM2a,UACxCtS,YAAYlI,GACRqM,MAAMrM,GADS,KAQnBkkB,qBAAwB9B,GACb,kBAAC,GAAD,CAAa9Q,OAAQ9J,KAAM4a,YAAaA,EAAa3Q,IAAKC,GAAMlK,KAAK2c,OAAOzS,KATpE,KAYnByS,OAAUC,IACFA,GACA5c,KAAK6c,gBAAgBha,KAAK+Z,IAdf,KAkBnBP,gBAAkB,KACM,KACTrc,KAAK6c,gBAAgBC,OAAO,GAAG,GAAGR,mBAExCS,KACD/c,KAAKgd,aAAana,KAAK7C,KAAK0c,wBAC5B1c,KAAKlI,SAAS,CAACklB,aAAchd,KAAKgd,gBAEtChd,KAAKid,gBA1BU,KA6BnBA,aAAe,KACX,MAAM9f,EAAQ6C,KAAK6c,gBAAgBzT,IAAKwT,GAC7BA,EAASL,cACjBxZ,KAAKyZ,IAERxc,KAAKiL,OAAOlD,SAAS5K,EAAO6C,KAAKgI,SAAWnM,QAlC7B,KA4CnBqH,KAAO,CAAC/F,EAAO6K,KACXhI,KAAKgI,SAAWA,EAChBhI,KAAK4a,YAAczd,EACfA,GAAmB,cAAVA,IACT6C,KAAK6c,gBAAkB,GACvB7c,KAAKgd,aAAehd,KAAK4a,YAAYtR,MAAMkT,IAAepT,IAAKwR,GACpD5a,KAAK0c,qBAAqB9B,IAErC5a,KAAKlI,SAAS,CAACklB,aAAchd,KAAKgd,iBAlDtChd,KAAK6c,gBAAkB,GACvB7c,KAAKgd,aAAe,CAAChd,KAAK0c,qBAAqB,KAC/C1c,KAAKhI,MAAQ,CAACglB,aAAchd,KAAKgd,cACjChd,KAAKiL,OAAS,IAAIkQ,GAAO,KAiC7B1Q,oBACQzK,KAAKxH,MAAMiV,gBACXzN,KAAKxH,MAAMiV,eAAezN,MAgBlC+J,SACI,OAAO,6BAEC/J,KAAKhI,MAAMglB,eCjE3B,MAAMxc,GAAS1C,EAAQ,KAEhB,MAAMof,GACTxc,YAAYyL,GACRnM,KAAKmM,UAAYA,EACjBnM,KAAKP,IAAM,GAET0d,iBAAkB,IAAD,kHACf,EAAK/U,gBACLQ,cAAc,EAAKR,eACnB,EAAKA,cAAgB,MAHN,6CAOjBgV,WAAY,IAAD,kHACb,EAAKD,iBACL,EAAK/U,cAAgBC,YAAW,sBAAC,kCAAAnU,EAAA,6DACvBuN,EAAUjB,KACVuP,EAAM,IAAIjb,cAFa,SAGXib,EAAIzO,UAAJ,4BAAoC,EAAK7B,IAAL,SAAuB,EAA3D,4CAAyGgC,EAAS,IAHvG,OAGvB/L,EAHuB,QAIvBoL,EAAUpL,EAAIG,QAAQ,IACjB,MAAUsT,OAAS,GAC1B,EAAKgD,UAAUrL,EAAO,MAAUsI,IAAIC,GACzBA,EAAKC,MAAM,cAAc,IACjCvG,KAAK,OAEZ,EAAKtD,IAAL,OAAqBqB,EAAO,OAVC,2CAW9B,KAbU,8CCGF4K,KAAXD,O,MAEFjL,GAAS1C,EAAQ,KAGvB,MAAMuf,WAAkBhlB,YAEpBqI,YAAYlI,GACRqM,MAAMrM,GADS,KAenB0K,KAAO,CAAC/F,EAAO6K,KACXhI,KAAKlI,SAAS,CAAEqF,MAAOA,EAAO6K,SAAUA,GAAY,KAChDhI,KAAK4L,aAAa5H,OAAOE,SAAS/G,EAAO,MAjB9B,KAgCnB0O,YAAc,KACV,MAAMkE,EAAM,IAAI9Q,G7BpD2B,uB6BqDrCyC,EAAO1B,KAEPiM,EAAajM,KAAKkM,yBAEnBxK,EAAK1J,MAAMgQ,SAKhB+H,EAAI7Q,QAAQH,GAAkB,CAC1B/D,GAAI0G,EAAK1J,MAAMgQ,SACfnS,QAAS6L,EAAKqK,eAAehH,YAC7B7D,IACiB,KAAbA,EAAGtF,OACHsF,EAAGvB,KAAMwB,IACLO,EAAKyK,UAAUhL,EAAG,MAClBN,IACAa,EAAKyK,UAAUtL,KAGnBa,EAAKyK,UAAU,UAGnB/K,IACAM,EAAKyK,UAAU/K,KAnBf6K,EAAW/H,SAAS,2CAvCT,KAoHnB4H,WAAa,IACF9L,KAAK+L,eAAehH,WArHZ,KAwHnBC,aAAe,KACX,IAAIC,EAAiBjF,KAAK+L,eAAe7G,oBAEzC,OADclF,KAAK+L,eAAehI,QAAQoB,aAAaF,IA1HxC,KA8HnB+G,eAAkBpM,IACd,MAAMoE,EAAShE,KAAK+L,eACdtH,EAAIT,EAAOU,oBACjBV,EAAOD,QAAQK,OAAOK,EAAG7E,GACzBoE,EAAOW,SAlIQ,KAqInBoH,aAAe,IACJ/L,KAAK4L,aAAa5H,OAtIV,KAyInBkI,uBAAyB,IACdlM,KAAKmH,SAAS8E,WAAWjT,QAAQgL,OA1IzB,KA6InBmI,UAAatQ,IACT,MACMkI,EADS/D,KAAKkM,yBACGnI,QACvBA,EAAQK,OAAO,CACXC,IAAKN,EAAQO,YACbC,OAAQ,GACT,KAAO1I,IAnJK,KAsJnBuQ,aAAe,IACJpM,KAAKmH,SAASG,KAAKtO,QAvJX,KA0JnBqT,WAAa,IACFrM,KAAKmH,SAASC,QAAQpO,QAzJ7BgH,KAAKqN,SAAWrN,KAAKxH,MAAM6U,UAAY,MACvCrN,KAAKmH,SAAWnH,KAAKxH,MAAMsR,OAAO3C,SAElCnH,KAAKhI,MAAQ,CAAEmF,MAAO,GAAIqJ,SAAS,GAEnCxG,KAAKwN,aAAexN,KAAKwN,aAAaD,KAAKvN,MAC3CA,KAAKsN,YAActN,KAAKsN,YAAYC,KAAKvN,MAEzCA,KAAKsd,WAAa,IAAIJ,GAAWld,KAAKmM,WAEtCnM,KAAKP,IAAM,GAUfgL,oBACQzK,KAAKxH,MAAMiV,gBACXzN,KAAKxH,MAAMiV,eAAezN,MAIlCuL,SAAS8C,IAmCHb,eAAgB,IAAD,yIACjB,EAAKzG,aAAajP,SAAS,CAAC0O,SAAQ,IACpC,EAAK/E,QAAUjB,KACTuP,EAAM,IAAIjb,eACV4M,EAAO,GACRwK,yBAAyBhI,SAAS,IACvCxC,EAAK2K,aAAa3E,OAAOpR,KAAKO,MAAM,OAE9B0mB,EAAS7b,EAAKsD,eAChBwY,EAAW9b,EAAKoK,aAGL,KAAXyR,IACAC,EAAWD,GAGTvV,EAAWtG,EAAK1J,MAAMgQ,SAC5B,EAAKsV,WAAWF,WAjBC,UAkBCrN,EAAIzO,UAAUkc,EAAU,EAAK/b,QAAS,CACpDuG,SAAUA,EACVyV,QAAS,SACTnf,YAAa,WArBA,WAuBE,OALb5I,EAlBW,QAuBTkG,OAvBS,wBAwBb,EAAK0hB,WAAWH,iBAChB,EAAKhR,UAAUzW,EAAIG,SACnB,EAAKkR,aAAajP,SAAS,CAAC0O,SAAQ,IA1BvB,2BA6BjB,IACI,EAAK2F,UAAUzW,EAAIG,QAAQkN,KAAK,OACnC,MAAM2a,GACH,EAAKvR,UAAUzW,EAAIG,QAAJ,KAEnB,EAAKynB,WAAWH,iBAChB,EAAKpW,aAAajP,SAAS,CAAC0O,SAAQ,IAnCnB,8CAsCf8G,cAAe,IAAD,+HACX,EAAK7L,QADM,wDAEVA,EAAUjB,KACVuP,EAAM,IAAIjb,cAHA,SAIEib,EAAIzO,UAAU,SAAW,EAAKG,QAAQ,IAAKA,EAAS,IAJtD,OAIV/L,EAJU,OAKhB,IACI,EAAKyW,UAAUzW,EAAIG,QAAQ,GAAZ,aAClB,MAAMiB,GACH,EAAKqV,UAAUzW,EAAIG,SAGvB,EAAK4L,QAAU,KACf,EAAK6b,WAAWH,iBAZA,8CAyDpBpT,SAEI,OACI,uBAAK3M,UAAU,qBAEX,uBAAKkR,WAAa9B,GAAQA,EAAIjS,iBAAkBgU,OAAQvO,KAAKuM,QACzD,gBAAC,aAAD,CAAWiC,YAAa,CAAEC,OAAQ,SAAWC,SAAU,KAAQ1O,KAAK4L,aAAa5S,QAAQgL,OAAO2K,WAAa,gBAAC,KAAD,CACzG1E,IAAKZ,GAAQrJ,KAAK4L,aAAavC,EAC/B3O,KAAMsF,KAAKqN,SACXuB,MAAM,SACNpD,MAAO,OACPiD,OAAQ,OACRlD,SAAUvL,KAAKuL,SACflW,KAAK,eACLwF,SAAU,GACVgU,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,EACTC,0BAA0B,OAKtC,gBAAC,GAAD,CAAcxF,IAAKZ,GAAQrJ,KAAK+G,aAAasC,EAAMS,OAAQ9J,SAO3E,MAAM0P,WAAqBrX,YACvBqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnB+S,SAAYpO,IACR6C,KAAKlI,SAAS,CAAEmL,QAAS9F,KALzB6C,KAAKhI,MAAQ,CAAEwO,SAAS,EAAOvD,QAAS,MACxCjD,KAAK8J,OAAStR,EAAMsR,OAQxBC,SACI,OACI,uBAAK3M,UAAU,wBACX,gBAAC,IAAD,CAAQhD,QAAS4F,KAAK8J,OAAO0D,aACzBhH,QAASxG,KAAKhI,MAAMwO,SADxB,OAEA,gBAAC,IAAD,CAAQpM,QAAS4F,KAAK8J,OAAOwD,aAA7B,UACA,gBAAC,IAAD,CAAQlT,QAAS4F,KAAK8J,OAAO+B,aAA7B,UASDwR,UCrPA,MAAMM,WAAqBtlB,IAAM2a,UAC5CtS,YAAYlI,GACRqM,MAAMrM,GADS,KAKnBmkB,OAAUC,IACHA,IACC5c,KAAKgE,OAAS4Y,IAPH,KAkBnB1Z,KAAO,CAAC/F,EAAO6K,KACXhI,KAAKgE,OAAOd,KAAK/F,EAAO6K,IAjBxBhI,KAAKmH,SAAWnH,KAAKxH,MAAMsR,OAU/BW,oBACQzK,KAAKxH,MAAMiV,gBACXzN,KAAKxH,MAAMiV,eAAezN,MASlC+J,SACI,OAAO,6BACH,kBAAC,GAAD,CAAWD,OAAQ9J,KAAMiK,IAAKC,GAAMlK,KAAK2c,OAAOzS,GAAKmD,SAAS,aCxB1E,MAAMsM,GAAUC,KAAKD,QAEd,MAAMiE,WAAkBvlB,YAC3BqI,YAAYlI,GACRqM,MAAMrM,GADS,KAqBnBqlB,QAAW5T,IACPjK,KAAK8d,OAAOjb,KAAKoH,IAtBF,KAyBnB8T,iBAAmB,KACf,MAAMC,EAAYhe,KAAKhI,MAAMgmB,UAC7B,IAAIC,EAAc,KAMlB,OALAje,KAAK8d,OAAOpN,QAAQrH,IACZA,EAAK2U,YAAcA,IACnBC,EAAc5U,KAGf4U,GAjCQ,KAoCnB1S,SAAYyS,IAER,IAAIC,EAAc,KAElBje,KAAKhI,MAAMkmB,MAAMxN,QAAQrH,IACjBA,EAAKhP,MAAQ2jB,IACbC,EAAc5U,KAIlB4U,IAAgBA,EAAYrkB,MAAMukB,SAAS,UAC3Cne,KAAK8J,OAAOhS,SAAS,CAACsmB,cAAe,WAC/BH,IAAgBA,EAAYrkB,MAAMukB,SAAS,OACjDne,KAAK8J,OAAOhS,SAAS,CAACsmB,cAAe,aAErCpe,KAAK8J,OAAOhS,SAAS,CAACsmB,cAAe,iBAGzCpe,KAAKlI,SAAS,CAACkmB,eAtDA,KAyDnBK,OAAS,CAACC,EAAWrqB,KACjB+L,KAAK/L,GAAQqqB,IA1DE,KA6DnBC,QAAU,CAACC,EAASxf,KAChB,MAyBMkf,EAAQle,KAAKhI,MAAMkmB,MACnBF,EAAS,gBAAYhe,KAAKye,eAChCP,EAAMrb,KAAK,CACPjJ,MAAO4kB,GAAW,SAAWxe,KAAKye,YAClC5oB,QA7BYmoB,IACRQ,EAAQL,SAAS,UACV,gBAAC,GAAD,CAAgBrU,OAAQ9J,KAAK8J,OAAQ2D,eAAiBxD,IACzDjK,KAAK6d,QAAQ,CAAC5T,IAAKA,EAAK+T,UAAWA,IAC/Bhf,GACAA,EAAS,CAACiL,IAAKA,EAAK+T,UAAWA,KAEpCA,UAAWA,IACRQ,EAAQL,SAAS,OAChB,gBAAC,GAAD,CAAUrU,OAAQ9J,KAAK8J,OAAQ2D,eAAiBxD,IACnDjK,KAAK6d,QAAQ,CAAC5T,IAAKA,EAAK+T,UAAWA,IAC/Bhf,GACAA,EAAS,CAACiL,IAAKA,EAAK+T,UAAWA,KAEpCA,UAAWA,IACTQ,EAAQL,SAAS,OACf,gBAAC,GAAD,CAAcrU,OAAQ9J,KAAK8J,OAAQ2D,eAAiBxD,IACvDjK,KAAK6d,QAAQ,CAAC5T,IAAKA,EAAK+T,UAAWA,IAC/Bhf,GACAA,EAAS,CAACiL,IAAKA,EAAK+T,UAAWA,KAEpCA,UAAWA,SANZ,EAcGha,CAAOga,GAChB3jB,IAAK2jB,IAEThe,KAAKlI,SAAS,CAAComB,QAAOF,eA9FP,KAiGnBU,IAAM,KACF1e,KAAKue,QAAQ,UAAYve,KAAKye,YAAY,GAAI1d,QAlG/B,KAqGnB4d,wBAA2BL,IACvB,IAAIM,EAMJ,OALA5e,KAAKhI,MAAMkmB,MAAMxN,QAAQ,CAACmO,EAAMC,KACxBD,EAAKxkB,MAAQikB,IACbM,EAAYE,EAAI,KAGjBF,GA5GQ,KA+GnBG,OAAUT,IACN,IAAIN,EAAYhe,KAAKhI,MAAMgmB,UACvBY,EAAY5e,KAAK2e,wBAAwBL,GAE7C,MAAMJ,EAAQle,KAAKhI,MAAMkmB,MAAMrT,OAAOgU,GAAQA,EAAKxkB,MAAQikB,GACvDJ,EAAM/U,QAAU6U,IAAcM,IAE1BN,EADAY,GAAa,EACDV,EAAMU,GAAWvkB,IAEjB6jB,EAAM,GAAG7jB,KAG7B,MAAM2kB,EAAgBhf,KAAK8d,OAAOjT,OAAQxB,GAASA,EAAK2U,YAAcM,GACtEte,KAAK8d,OAAS9d,KAAK8d,OAAOjT,OAAQxB,GAASA,EAAK2U,YAAcM,GAC9Dte,KAAK8J,OAAOmV,YAAYD,EAAc,IAEtChf,KAAKlI,SAAS,CAAComB,QAAOF,eA7HtBhe,KAAK8J,OAAStR,EAAMsR,OACpB9J,KAAK8d,OAAS,GACd9d,KAAKye,YAAc,EACnB,MAAMP,EAAQ,CACV,CACItkB,MAAO,UACP/D,QAAS,gBAAC,GAAD,CAAgBiU,OAAQ9J,KAAK8J,OAAQ2D,eAAiBxD,IAC3DjK,KAAK6d,QAAQ,CAAC5T,IAAKA,EAAK+T,UAAW,aACpCA,UAAU,YACb3jB,IAAK,YAGb2F,KAAKhI,MAAQ,CACTgmB,UAAWE,EAAM,GAAG7jB,IACpB6jB,SAEJle,KAAKye,cAgHT1U,SACI,OACI,gBAAC,KAAD,CACIwB,SAAUvL,KAAKuL,SACfyS,UAAWhe,KAAKhI,MAAMgmB,UACtB/lB,KAAK,gBACLomB,OAAQre,KAAKqe,QAEZre,KAAKhI,MAAMkmB,MAAM9U,IAAIyV,GAAQ,gBAAC,GAAD,CAASvE,IAAKuE,EAAKjlB,MAAOS,IAAKwkB,EAAKxkB,IAC3BsC,SAAUkiB,EAAKliB,UAAWkiB,EAAKhpB,Y,uBCjJtF,MAAMqpB,GAAaC,IAAMC,MAElB,MAAMC,WAAqBhnB,YAC9BqI,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKsf,UAAY9mB,EAAMsR,OACvB9J,KAAKhI,MAAQ,GAGjB+R,SACI,OAAO,2BACH,2CACA,gBAACmV,GAAD,CAAYK,SAAS,GAChBvf,KAAKhI,MAAMse,iBChB5B,MAAM9V,GAAS1C,EAAQ,KACR,MAAM0hB,GAwDjB,eAAenlB,EAAIlG,EAAKsrB,GACpB,IAAIC,EAAWrlB,EACfolB,EAAKC,GACc,kBAATvrB,GACN+N,OAAOkP,KAAKjd,GAAMuc,QAAQiP,IACtBH,GAAMI,QAAN,UAAiBF,EAAjB,aAA8BC,EAA9B,MAAoCxrB,EAAKwrB,GAAGF,MA7DvCD,GACVK,iBAAmB,KACdrf,KAAW,IAAIsf,QAAQ,KAAM,IAFxBN,GAIVO,WAAa,IACTvf,KAAW,GALLgf,GAQVQ,YAAepgB,GACdA,EACGA,EAAIkgB,QAAQ,SAAU,OADblgB,EATH4f,GAaVS,MAASrgB,GACRA,EACE,IAAN,OAAW4f,GAAMQ,YAAYpgB,GAA7B,KADgBA,EAdH4f,GAkBVU,QAAWtgB,GACVA,EAAIugB,WAAW,MAASvgB,EAAIue,SAAS,MAGrCve,EAAIugB,WAAW,MAAQvgB,EAAIue,SAAS,KAF7Bve,EAAIkd,MAAM,EAAGld,EAAIuJ,OAAS,GAKjCvJ,EAAIugB,WAAW,QAAUvgB,EAAIue,SAAS,OAC/Bve,EAAIkd,MAAM,EAAGld,EAAIuJ,OAAS,GAE9BvJ,EA5BM4f,GA+BVY,UAAY,CAACC,EAAMC,KACtBA,EAAMD,GACFA,EAAKE,UACLF,EAAKE,SAASnX,IAAIC,IACdmW,GAAMY,UAAU/W,EAAMiX,MAnCjBd,GAuCVgB,QAAU,CAACH,EAAMC,KAChBD,EAAKE,UACLF,EAAKE,SAASnX,IAAIC,IACdmW,GAAMgB,QAAQnX,EAAMiX,KAG5BA,EAAMD,IA7COb,GAgDViB,gBAAkB,KACd,CACHjiB,UAAW,QACXkiB,UAAW,OACXC,eAAe,IApDNnB,GAkEVoB,2BAA6B,KACzB,CACHpiB,UAAW,QACXmiB,eAAe,IArENnB,GAyEVqB,SAAYC,GACXA,EAAEX,WAAW,MAAQW,EAAE3C,SAAS,KAAa2C,EAC3C,IAAN,OAAYA,EAAZ,KA3EatB,GA8EVuB,SAAW,CAACC,EAAQrI,KACvB,IAAIA,EACH,MAAO,IAAI,IAAIsI,IAAID,IAEpB,MAAME,EAAQ,GACd,OAAOF,EAAOnW,OAAOxB,KACbA,EAAKsP,KAAUuI,KAGfA,EAAM7X,EAAKsP,IAAUtP,EAAKsP,IACnB,KAxFF6G,GA4FV2B,kBAAoB,CAAC1M,EAAGC,IACpBpe,KAAKC,UAAUke,KAAOne,KAAKC,UAAUme,GA7F/B8K,GA+FV4B,kBAAoB,CAACC,EAAMC,IAG9B,SAASC,EAAgB9M,EAAGC,GACxB,IAAIjQ,EAIJ,GAAI+c,MAAM/M,IAAM+M,MAAM9M,IAAmB,kBAAND,GAA+B,kBAANC,EACxD,OAAO,EAMX,GAAID,IAAMC,EACN,OAAO,EAMX,GAAkB,oBAAND,GAAiC,oBAANC,GAClCD,aAAa5M,MAAQ6M,aAAa7M,MAClC4M,aAAagN,QAAU/M,aAAa+M,QACpChN,aAAaiN,QAAUhN,aAAagN,QACpCjN,aAAakN,QAAUjN,aAAaiN,OACrC,OAAOlN,EAAEpT,aAAeqT,EAAErT,WAI9B,KAAMoT,aAAavS,QAAUwS,aAAaxS,QACtC,OAAO,EAGX,GAAIuS,EAAEvD,cAAcwD,IAAMA,EAAExD,cAAcuD,GACtC,OAAO,EAGX,GAAIA,EAAE/T,cAAgBgU,EAAEhU,YACpB,OAAO,EAGX,GAAI+T,EAAEmN,YAAclN,EAAEkN,UAClB,OAAO,EAIX,SA/CMC,GA+CQC,QAAQrN,IAAM,SA/CXsN,GA+C2BD,QAAQpN,IAAM,EACtD,OAAO,EAKX,IAAKjQ,KAAKiQ,EAAG,CACT,GAAIA,EAAEtE,eAAe3L,KAAOgQ,EAAErE,eAAe3L,GACzC,OAAO,EAEN,UAAWiQ,EAAEjQ,YAAcgQ,EAAEhQ,GAC9B,OAAO,EAIf,IAAKA,KAAKgQ,EAAG,CACT,GAAIC,EAAEtE,eAAe3L,KAAOgQ,EAAErE,eAAe3L,GACzC,OAAO,EAEN,UAAWiQ,EAAEjQ,YAAcgQ,EAAEhQ,GAC9B,OAAO,EAGX,cAAgBgQ,EAAEhQ,IACd,IAAK,SACL,IAAK,WAKD,SA7ENod,GA0EgBhf,KAAK4R,SA1EVsN,GA2EMlf,KAAK6R,IAEX6M,EAAgB9M,EAAEhQ,GAAIiQ,EAAEjQ,IACzB,OAAO,QA9EjBod,GAiFgBG,YAjFLD,GAkFMC,MACX,MAEJ,QACI,GAAIvN,EAAEhQ,KAAOiQ,EAAEjQ,GACX,OAAO,GAMvB,OAAO,EAGJ8c,CAAgBF,EAAMC,GCvLrC,MAAMpC,GAAaC,IAAMC,MACnB3T,GAASC,KAAOD,OAGf,MAAMwW,WAAkB5pB,YAC3BqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YASnBiS,kBATmB,sBASC,kCAAAvW,EAAA,6DACH,EACPW,EAAS,IAAIC,cAFH,SAGED,EAAOyM,UAAU,wCAAwCke,GAAMO,aAAaP,GAAMoB,8BAHpF,OAGVlrB,EAHU,OAIVvB,EAAOqrB,GAAMuB,SAASrrB,EAAIG,QAAQ1B,KAAK,QACvC+tB,EAAoB,GAC1B/tB,EAAKuc,QAAQrH,IACT6Y,EAAkBrf,KAAK,gBAAC,GAAD,CAAQxI,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAE3E,EAAKyC,SAAS,CAACoqB,kBAAmBA,IATlB,2CATD,KAqBnBnhB,OAAUyL,IACNxM,KAAK7L,KAAK4M,OAAOyL,EAAI+L,OAAO4J,aAAa,SAAW3V,EAAI+L,OAAOpb,OAtBhD,KA0BnBilB,WAAa,CAACjlB,EAAOqP,KACjBxM,KAAK7L,KAAKkuB,YAAcllB,EACxB,MAAMuE,EAAO1B,KACD,IAAIf,GAASL,IACrB0C,UAAU,GAAd,2CAAuDnE,EAAvD,gBAA8EhJ,IAC1E,MAAMmiB,EAAgB,GACtBniB,EAAKuc,QAAQrH,IACTiN,EAAczT,KAAK,gBAAC,KAAD,CAAKxI,IAAG,cAASgP,EAAKiZ,QACrC,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOjoB,IAAG,gBAAWgP,EAAKiZ,OAAS1nB,MAAO,CAAC4e,aAAc,QAASnkB,KAAMgU,EAAKiZ,MAAO/W,SAAU7J,EAAKX,OAAQ9I,KAAK,OACzGsqB,YAAalZ,EAAKiZ,MAClBE,YAAanZ,EAAKlP,mBAIrCuH,EAAK+gB,cAAczpB,QAAQlB,SAAS,CAACwe,cAAeA,KACrDlV,QA1CY,KA+CnB1K,KAAQ8V,IACJxM,KAAK7L,KAAKuuB,MAAQlW,EAAI+L,OAAOpb,OAhDd,KAmDnBqI,UAAagH,IACTxM,KAAK7L,KAAKwuB,WAAanW,EAAI+L,OAAOpb,OApDnB,KAuDnBylB,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAIlD,KAAK3f,KAAK7L,KAAK4M,OAAQ,CAC5B,IAAI+f,EAAI9gB,KAAK7L,KAAK4M,OAAO4e,GACzB,GAAGmB,EAAE,CACD,IAAIgC,EAAK,IAAOhC,EAAI,IACV,SAANnB,GAAsB,0BAANA,IAChBmD,EAAK,MAAQhC,EAAI,OAErB+B,EAAYhgB,KAAK8c,EAAEG,QAAQ,aAAc,KAAO,IAAMgD,IAI9D,IAAIC,EAAW,GAIf,OAHIF,EAAY1Z,OAAS,IACrB4Z,EAAW,SAET,QAAN,OAjBa/iB,KAiBO7L,KAAKkuB,YAAzB,aAjBariB,KAiBkC7L,KAAKuuB,MAApD,aAA+DK,EAA/D,YAA2EF,EAAY9f,KAAK,WAA5F,eAjBa/C,KAiBqG7L,KAAKwuB,WAAvH,MAvEA3iB,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK7L,KAAO,CAAC4M,OAAO,IACpBf,KAAKhI,MAAQ,CAACkqB,kBAAmB,IACjCliB,KAAKyiB,cAAgBpqB,cAuEzB0R,SACI,OAAO,2BACH,gBAAC,GAAD,CAAYwV,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,kBACc,gBAAC,KAAD,CACVhU,SAAUvL,KAAKoiB,WACfa,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvGtjB,KAAKhI,MAAMkqB,sBAKrB,2BACCliB,KAAKxH,MAAM+qB,WAAY,4BAAc,gBAAC,GAAD,CAAYhE,SAAS,GACvD,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOhU,SAAUvL,KAAKtJ,KAAMuB,KAAK,OAAOsF,MAAM,OAAOglB,YAAY,OAC1DC,YAAY,8BAI/B,2BAEKxiB,KAAKxH,MAAMgrB,gBAAiB,4BAAa,gBAAC,GAAD,CAAYjE,SAAS,GAC9D,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKwF,UAAWjI,MAAM,YAAYglB,YAAY,YACpEC,YAAY,iBAKhC,2BACA,gBAAC,GAAD,CAAc1Y,OAAQ9J,KAAMiK,IAAKjK,KAAKyiB,kBC1HlD,MAAMvD,GAAaC,IAAMC,MAElBqE,IADQ/X,KAAOD,OACH0T,IAAZsE,UAGA,MAAMC,WAAuBrrB,YAChCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAQnBmrB,YAAeta,GACQ,gBAAfA,EAAKiZ,OAA0C,kBAAfjZ,EAAKiZ,MAC9B,KAEQ,SAAfjZ,EAAKiZ,OAAmC,0BAAfjZ,EAAKiZ,MACvB,gBAAC,KAAD,KAAK,gBAAC,KAAD,KAAMjZ,EAAKiZ,MAAX,IAAkB,gBAACmB,GAAD,CAAU7oB,MAAO,CAAC4e,aAAc,QAASnkB,KAAMgU,EAAKiZ,MAC1C/W,SAAUvL,KAAKe,OACf9I,KAAK,OAAOqZ,KAAM,OAEvD,gBAAC,KAAD,KACH,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAO1W,MAAO,CAAC4e,aAAc,QAASnkB,KAAMgU,EAAKiZ,MAAO/W,SAAUvL,KAAKe,OAAQ9I,KAAK,OAC7EsqB,YAAalZ,EAAKiZ,MAClBE,YAAanZ,EAAKlP,gBArBlB,KA8CnB4G,OAAUyL,IACNxM,KAAK7L,KAAK4M,OAAOyL,EAAI+L,OAAO4J,aAAa,SAAW3V,EAAI+L,OAAOpb,OA/ChD,KAkDnBzG,KAAQ8V,IACJxM,KAAK7L,KAAKuuB,MAAQlW,EAAI+L,OAAOpb,OAnDd,KAsDnBqI,UAAagH,IACTxM,KAAK7L,KAAKwuB,WAAanW,EAAI+L,OAAOpb,OAvDnB,KA0DnBylB,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAIlD,KAAK3f,KAAK7L,KAAK4M,OAAQ,CAC5B,IAAI+f,EAAI9gB,KAAK7L,KAAK4M,OAAO4e,GACzBkD,EAAYhgB,KAAK8c,EAAEG,QAAQ,aAAc,KAAxBH,KAA4CmB,EAAI,KAOrE,OAJ0B,GAAtB+B,EAAY1Z,QACZ0Z,EAAYhgB,KAAK,sBAGf,SAAN,OAAgB7C,KAAK7L,KAAKwuB,WAA1B,eAA2C3iB,KAAK3K,KAAhD,aAA0D2K,KAAK7L,KAAKuuB,MAApE,qBACNG,EAAY9f,KAAK,WADX,MApEA/C,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK3K,KAAOmD,EAAMnD,KAClB2K,KAAK7L,KAAO,CAAC4M,OAAQ,IACrBf,KAAKhI,MAAQ,CAACse,cAAe,IAqBjC7L,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAd,4BAAwCI,EAAKrM,KAA7C,gBAAmElB,IAC/D,MAAMmiB,EAAgB,GACtBniB,EAAKuc,QAAQrH,IACT,MAAMua,EAAO5jB,KAAK2jB,YAAYta,GACjB,OAATua,IACAtN,EAAczT,KAAK+gB,GACnBtN,EAAczT,KAAK,+BAI3BnB,EAAK5J,SAAS,CAACwe,cAAeA,KAC/BlV,OAiCP2I,SACI,OAAO,2BACH,6DACA,gBAAC,GAAD,CAAYwV,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKwF,UAAW+N,KAAM,QAASgP,YAAY,YACjEC,YAAY,kCAI/B,2BACA,gBAAC,GAAD,CAAYjD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOhU,SAAUvL,KAAKtJ,KAAMuB,KAAK,OAAOsb,KAAM,QAASgP,YAAY,kBAC5DC,YAAY,uCAI/B,2BACA,qDACA,gBAAC,GAAD,CAAYjD,SAAS,GAChBvf,KAAKhI,MAAMse,iBCvG5B,MAAM4I,GAAaC,IAAMC,MACnB3T,GAASC,KAAOD,OAGf,MAAMoY,WAAkBxrB,YAC3BqI,YAAYlI,GACRqM,MAAMrM,GADS,KAsBnB4pB,WAAa,CAACjlB,EAAOqP,KACjBxM,KAAK7L,KAAKkuB,YAAcllB,GAvBT,KA0BnB2mB,SAAW,CAAC3mB,EAAOqP,KACfxM,KAAK7L,KAAK4vB,UAAY5mB,GA3BP,KA8BnBzG,KAAQ8V,IACJxM,KAAK7L,KAAKuuB,MAAQlW,EAAI+L,OAAOpb,OA/Bd,KAkCnBqI,UAAagH,IACTxM,KAAK7L,KAAKwuB,WAAanW,EAAI+L,OAAOpb,OAnCnB,KAsCnB6mB,YAAexX,IACXxM,KAAK7L,KAAK8vB,aAAezX,EAAI+L,OAAOpb,OAvCrB,KA0CnB+mB,QAAW1X,IACPxM,KAAK7L,KAAKgwB,SAAW3X,EAAI+L,OAAOpb,OA3CjB,KA8CnBylB,UAAY,KAER,IAAIwB,EAAiB,GACjBpkB,KAAK7L,KAAK8vB,eACVG,EAAiB,eAAiBpkB,KAAK7L,KAAK8vB,cAGhD,IAAII,EAAU,cAKd,OAJIrkB,KAAK7L,KAAKgwB,WACVE,EAAU,mBAAerkB,KAAK7L,KAAKgwB,SAAzB,MAGR,QAAN,OAXankB,KAWO7L,KAAK4vB,UAAzB,YAXa/jB,KAW8B7L,KAAKwuB,WAAhD,eAXa3iB,KAWyD7L,KAAKkuB,YAA3E,aAXariB,KAWoF7L,KAAKuuB,MAAtG,sBAA0H2B,EAA1H,YAAwID,EAAxI,MAxDApkB,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK7L,KAAO,GACZ6L,KAAKhI,MAAQ,CAACkqB,kBAAmB,IAGrCzX,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAI,wCAA0CnN,IACxD,MAAM+tB,EAAoB,GAC1B/tB,EAAKuc,QAAQrH,IACT6Y,EAAkBrf,KAAK,gBAAC,GAAD,CAAQxI,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAE3EqM,EAAK5J,SAAS,CAACoqB,kBAAmBA,KACnC9gB,OA4CP2I,SACI,OAAO,2BACH,gBAAC,GAAD,CAAYwV,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,kBACc,gBAAC,KAAD,CACVhU,SAAUvL,KAAKoiB,WACfa,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvGtjB,KAAKhI,MAAMkqB,sBAKrB,2BACA,gBAAC,GAAD,CAAY3C,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,iBACa,gBAAC,KAAD,CACThU,SAAUvL,KAAK8jB,SACfb,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,wBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQjpB,IAAK,YAAa8C,MAAO,aAAjC,aACA,gBAAC,GAAD,CAAQ9C,IAAK,SAAU8C,MAAO,UAA9B,UACA,gBAAC,GAAD,CAAQ9C,IAAK,gBAAiB8C,MAAO,iBAArC,iBACA,gBAAC,GAAD,CAAQ9C,IAAK,SAAU8C,MAAO,UAA9B,cAKZ,2BACA,gBAAC,GAAD,CAAYoiB,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKwF,UAAWjI,MAAM,YAAYglB,YAAY,YACpEC,YAAY,mCAI/B,2BAEA,gBAAC,GAAD,CAAYjD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOhU,SAAUvL,KAAKtJ,KAAMuB,KAAK,OAAOsqB,YAAY,cAC7CC,YAAY,8BAI/B,2BACA,gBAAC,GAAD,CAAYjD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKgkB,YAAazB,YAAY,cACpDC,YAAY,mBAI/B,2BACA,gBAAC,GAAD,CAAYjD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKkkB,QAAS3B,YAAY,UAChDC,YAAY,eAI/B,6BC5IZ,MAAMtD,GAAaC,IAAMC,MAElBqE,IADQ/X,KAAOD,OACH0T,IAAZsE,UAGQ,MAAMa,WAAmBjsB,YACpCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAgBnBmrB,YAAeta,GACQ,gBAAfA,EAAKiZ,OAA0C,kBAAfjZ,EAAKiZ,MAC9B,KAEQ,SAAfjZ,EAAKiZ,OAAmC,0BAAfjZ,EAAKiZ,MACvB,gBAAC,KAAD,KAAK,gBAAC,KAAD,KAAMjZ,EAAKiZ,MAAX,IAAkB,gBAAC,GAAD,CAAU1nB,MAAO,CAAC4e,aAAc,QAASnkB,KAAMgU,EAAKiZ,MAC1C/W,SAAUvL,KAAKe,OACf9I,KAAK,OAAOqZ,KAAM,OAEvD,gBAAC,KAAD,CAAKjX,IAAKgP,EAAKiZ,OAClB,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAO1nB,MAAO,CAAC4e,aAAc,QAASnkB,KAAMgU,EAAKiZ,MAAO/W,SAAUvL,KAAKe,OAAQ9I,KAAK,OAC7EsqB,YAAalZ,EAAKiZ,MAClBE,YAAanZ,EAAKlP,gBA7BlB,KAsDnB4G,OAAUyL,IACNxM,KAAK7L,KAAK4M,OAAOyL,EAAI+L,OAAO4J,aAAa,SAAW3V,EAAI+L,OAAOpb,OAvDhD,KA0DnBzG,KAAQ8V,IACJxM,KAAK7L,KAAKuuB,MAAQlW,EAAI+L,OAAOpb,OA3Dd,KA8DnBqI,UAAagH,IACTxM,KAAK7L,KAAKwuB,WAAanW,EAAI+L,OAAOpb,OA/DnB,KAkEnBonB,gBAAmB/X,IACfxM,KAAK7L,KAAKqwB,iBAAmBhY,EAAI+L,OAAOpb,OAnEzB,KAiGnBsnB,cAAgB,IACmB,SAA3BzkB,KAAKhI,MAAM+U,YACJ,gBAAC,GAAD,CAAYwS,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKwF,UAAW+N,KAAM,QAC5CgP,YAAaviB,KAAKhI,MAAMmV,WAAanN,KAAKhI,MAAMmV,WAAa,cAC7DqV,YAAY,QAK5B,KA7GQ,KAgHnBkC,oBAAsB,IACmB,SAAjC1kB,KAAKhI,MAAMiV,kBACJ,gBAAC,GAAD,CAAYsS,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtnB,KAAK,OAAOsT,SAAUvL,KAAKukB,gBAAiBhR,KAAM,QAClDgP,YAAaviB,KAAKhI,MAAMkV,iBAAmBlN,KAAKhI,MAAMkV,iBAAmB,eACzEsV,YAAY,QAK5B,KA5HQ,KA+HnBmC,kBAAoB,IACZ3kB,KAAKhI,MAAM8U,UACJ9M,KAAKhI,MAAM8U,UAEX,YAnII,KAsInB8X,aAAe,IACmB,SAA1B5kB,KAAKhI,MAAMgV,WACJ,gBAAC,GAAD,CAAYuS,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOhU,SAAUvL,KAAKtJ,KAAMuB,KAAK,OAAOsb,KAAM,QAASgP,YAAaviB,KAAK2kB,oBAClEnC,YAAY,QAK5B,GA/IPxiB,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK3K,KAAOmD,EAAMnD,KAClB2K,KAAK7L,KAAO,CAAC4M,OAAQ,IACrBf,KAAKhI,MAAQ,CACTse,cAAe,GACfvJ,YAAavU,EAAMuU,YACnBD,UAAWtU,EAAMsU,UACjBE,WAAYxU,EAAMwU,WAClBC,kBAAmBzU,EAAMyU,kBACzBC,iBAAkB1U,EAAM0U,iBACxBC,WAAY3U,EAAM2U,YAsB1B1C,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAd,4BAAwCI,EAAKrM,KAA7C,gBAAmElB,IAC/D,MAAMmiB,EAAgB,GACtBniB,EAAKuc,QAAQrH,IACT,MAAMua,EAAO5jB,KAAK2jB,YAAYta,GACjB,OAATua,IACAtN,EAAczT,KAAK+gB,GACnBtN,EAAczT,KAAK,+BAI3BnB,EAAK5J,SAAS,CAACwe,cAAeA,KAC/BlV,OAqBPyjB,aAEI,IAAIhC,EAAc,GAClB,IAAK,IAAIlD,KAAK3f,KAAK7L,KAAK4M,OAAQ,CAC5B,IAAI+f,EAAI9gB,KAAK7L,KAAK4M,OAAO4e,GACrBmD,EAAK,IAAOhC,EAAI,IACV,SAANnB,GAAsB,0BAANA,IAChBmD,EAAK,MAAQhC,EAAI,OAErB+B,EAAYhgB,KAAK8c,EAAEG,QAAQ,aAAc,KAAO,IAAMgD,GAG1D,IAAIC,EAAW,GACXF,EAAY1Z,OAAS,IACrB4Z,EAAW,SAGf,IAAI+B,EAAQ,GAOZ,OALI9kB,KAAK7L,KAAKqwB,mBACVM,EAAK,aAAS9kB,KAAK7L,KAAKqwB,mBAItB,OAAN,OAAcxkB,KAAK7L,KAAKwuB,YAAc,UAAtC,eAAsD3iB,KAAK3K,KAA3D,aAAqE2K,KAAK7L,KAAKuuB,OAAS,GAAxF,aAAgGK,EAAhG,YAA4GF,EAAY9f,KAAK,UAA7H,YAA0I+hB,EAA1I,KAsDJC,UACI,OAAO,2BACF/kB,KAAKykB,gBACN,2BACCzkB,KAAK0kB,sBACN,2BACC1kB,KAAK4kB,eACN,2BACoC,GAAnC5kB,KAAKhI,MAAMse,cAAcnN,OAAc,GAAK,2CAC7C,gBAAC,GAAD,CAAYoW,SAAS,GAChBvf,KAAKhI,MAAMse,iBCvKrB,MAAM0O,WAAkBV,GAC3B5jB,YAAYlI,GACRqM,MAAMrM,GADS,KAKnBoqB,UAAY,IACD/d,MAAMggB,aAIjB9a,SACI,OAAOlF,MAAMkgB,WCRrB,MAAM7F,GAAaC,IAAMC,MACV1T,KAAOD,OAGf,MAAMwZ,WAAsBD,GAAW,eAAD,oBAEzCpC,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAIlD,KAAK3f,KAAK7L,KAAK4M,OAAQ,CAC5B,IAAI+f,EAAI9gB,KAAK7L,KAAK4M,OAAO4e,GACzBkD,EAAYhgB,KAAK8c,EAAEG,QAAQ,aAAc,KAAxBH,KAA4CmB,EAAI,KAOrE,OAJ0B,GAAtB+B,EAAY1Z,QACZ0Z,EAAYhgB,KAAK,sBAGf,kBAAN,OAAyB7C,KAAK3K,KAA9B,uBACNwtB,EAAY9f,KAAK,WADX,MAIJgH,SACI,OAAO,2BAEH,gBAAC,GAAD,CAAYwV,SAAS,GAChBvf,KAAKhI,MAAMse,iB,iDCpB5B,MAAM7K,GAASC,KAAOD,OACfgY,GAAYtE,IAAZsE,SAEA,MAAMyB,WAAuB7sB,YAEhCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAUnB2sB,QAAW3Y,IACPxM,KAAK7L,KAAKixB,SAAW5Y,EAAI+L,OAAOpb,OAXjB,KAcnByX,SAAYpI,IACRxM,KAAK7L,KAAKkxB,UAAY7Y,EAAI+L,OAAOpb,OAflB,KAkBnBmoB,QAAWnoB,IACP6C,KAAKulB,SAAWpoB,GAnBD,KAsBnBme,KAAQjN,IACJrO,KAAKwlB,MAAQnX,GAvBE,KA+BnBoX,WAActoB,IACV6C,KAAK0lB,KAAOvoB,EACZ6C,KAAK2lB,aAAa3sB,QAAQ4sB,SAAU,EACpC5lB,KAAKlI,SAAS,CAAC8c,UAAU,IACP,WAAd5U,KAAK0lB,MACL1lB,KAAKlI,SAAS,CAAC8c,UAAU,IAE7B5U,KAAKlI,SAAS,CAAC+tB,SAAU1oB,KAtCV,KA2CnB2oB,eAAkBF,IACVA,EACA5lB,KAAK+lB,QAAQ/sB,QAAQgL,OAAOE,SAASlE,KAAKgmB,eAE1ChmB,KAAK+lB,QAAQ/sB,QAAQgL,OAAOE,SAAS,KA/C1B,KAoDnB8hB,YAAc,KACV,MAAMN,EAAO1lB,KAAKhI,MAAM6tB,UAAY,QACpC,MAAa,UAATH,EACM,8CAKG,WAATA,EACM,mCAIG,SAATA,EACM,gPAWH,MA7EQ,KAgFnBO,aAAe,IACPjmB,KAAKhI,MAAM4c,SACJ,gBAAC,KAAD,KACH,gBAAC,KAAD,iBACa,gBAAC,GAAD,CAAUha,MAAO,CAAC4e,aAAc,QAASnkB,KAAM,WAAYic,KAAM,GACvD/F,SAAUvL,KAAK4U,SACf3c,KAAK,OACLsqB,YAAa,WACbC,YAAW,8VAYnC,KApGQ,KAuGnB0D,SAAW,IACA,2BAAK,gBAAC,KAAD,KACR,gBAAC,KAAD,aACS,gBAAC,KAAD,CAAWjc,IAAKjK,KAAK+lB,QACVrrB,KAAMsF,KAAKhI,MAAM6tB,UAAY,QAC7BjX,MAAM,SACNpD,MAAO,QACPiD,OAAQ,QACRpZ,KAAK,OACLwF,SAAU,GACVgU,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBxD,SAAUvL,KAAKsb,KACftM,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,OAKjC,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAKtY,KAAM,GAAX,oBACqB,gBAAC,KAAD,CAAQ+S,IAAKjK,KAAK2lB,aAAcpa,SAAUvL,KAAK8lB,qBArIjE,KA2InBlD,UAAY,KAER,IAAIC,EAAc,GAOlB,OANAA,EAAYhgB,KAAZ,gBAA0B7C,KAAK0lB,KAA/B,MACA7C,EAAYhgB,KAAZ,kBAA4B7C,KAAKwlB,MAAjC,QACA3C,EAAYhgB,KAAZ,mBAA6B7C,KAAKulB,SAAlC,MACIvlB,KAAKqlB,WACLxC,EAAYhgB,KAAZ,sBAAgC7C,KAAKqlB,UAArC,QAEE,4BAAN,OAAqCrlB,KAAK7L,KAAKixB,SAA/C,oBACNvC,EAAY9f,KAAK,UADX,MAlJA/C,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK3K,KAAOmD,EAAMnD,KAClB2K,KAAK7L,KAAO,CAAC4M,OAAQ,IACrBf,KAAKhI,MAAQ,CAACse,cAAe,IAC7BtW,KAAK+lB,QAAU1tB,cACf2H,KAAK2lB,aAAettB,cAoBxBoS,qBA6HAV,SACI,OAAO,2BAEH,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOwB,SAAUvL,KAAKmlB,QAASltB,KAAK,OAAOsb,KAAM,QAASgP,YAAY,WAC/DC,YAAY,sBAG3B,2BAEA,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAKtrB,KAAM,GACP,yCAEJ,gBAAC,KAAD,CAAKA,KAAM,IACP,gBAAC,KAAD,CACI+rB,YAAU,EACV1X,SAAUvL,KAAKslB,QACf1qB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,kBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQnmB,MAAM,OAAd,OACA,gBAAC,GAAD,CAAQA,MAAM,QAAd,WAIZ,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAKjG,KAAM,GACP,sCAEJ,gBAAC,KAAD,CAAKA,KAAM,IACP,gBAAC,KAAD,CACI+rB,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,uBACZU,iBAAiB,WACjB3X,SAAUvL,KAAKylB,WACftC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQnmB,MAAM,QAAd,QACA,gBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,gBAAC,GAAD,CAAQA,MAAM,UAAd,aAIZ,2BACC6C,KAAKimB,eACN,2BACCjmB,KAAKkmB,WACN,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOtrB,MAAO,CAAC4e,aAAc,QAASnkB,KAAM,aAAckW,SAAUvL,KAAKe,OAAQ9I,KAAK,OAC/EsqB,YAAa,aACbC,YAAa,mBC9NrBrD,IAAMC,MAAzB,MACM3T,GAASC,KAAOD,OAGf,MAAM0a,WAAkB9tB,YAC3BqI,YAAYlI,GACRqM,MAAMrM,GADS,KA4BnB4tB,OAAUjpB,IACN6C,KAAKomB,OAASjpB,GA7BC,KA+BnBylB,UAAY,IACF,sBAAN,OAA8B5iB,KAAKomB,OAAnC,gBA9BApmB,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK3K,KAAOmD,EAAMnD,KAClB2K,KAAK7L,KAAO,CAAC4M,OAAQ,IACrBf,KAAKhI,MAAQ,CACTse,cAAe,GACfvJ,YAAavU,EAAMuU,YACnBD,UAAWtU,EAAMsU,UACjBE,WAAYxU,EAAMwU,YAI1BvC,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAd,+BAAqDnN,IACjD,MAAMmiB,EAAgB,GACtBniB,EAAKuc,QAAQrH,IACTiN,EAAczT,KAAK,gBAAC,GAAD,CAAQxI,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAEvEqM,EAAK5J,SAAS,CAACwe,cAAeA,KAC/BlV,OAYP2I,SACI,OAAO,2BACH,gBAAC,KAAD,KACI,gBAAC,KAAD,WACO,gBAAC,KAAD,CACHwB,SAAUvL,KAAKomB,OACfnD,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvGtjB,KAAKhI,MAAMse,mBCjDV6I,IAAMC,MAAzB,MACM3T,GAASC,KAAOD,OAGf,MAAM4a,WAAmBrB,GAAW,eAAD,oBAiBtCpC,UAAY,IAEF,YAAN,OADa5iB,KACW7L,KAAKkuB,YAA7B,aADariB,KACsC7L,KAAKuuB,MAAxD,gBADa1iB,KAC8D7L,KAAKqwB,iBAAhF,KAnBkC,KAsBtC4B,OAAUjpB,IACN6C,KAAK7L,KAAKkuB,YAAcllB,GArB5BsN,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAd,+BAAqDnN,IACjD,MAAMmiB,EAAgB,GACtBniB,EAAKuc,QAAQrH,IACTiN,EAAczT,KAAK,gBAAC,GAAD,CAAQxI,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAEvEqM,EAAK5J,SAAS,CAACwe,cAAeA,KAC/BlV,OAcP2I,SACI,OAAO,2BACF/J,KAAKykB,gBACN,2BACCzkB,KAAK0kB,sBACN,2BACC1kB,KAAK4kB,eACN,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,WACO,gBAAC,KAAD,CACHrZ,SAAUvL,KAAKomB,OACfnD,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvGtjB,KAAKhI,MAAMse,mBCpD7B,MAAM4I,GAAaC,IAAMC,MAEV,MAAMkH,WAAsBhC,GAEvC5jB,YAAYlI,GACRqM,MAAMrM,GADS,KAInBoqB,UAAY,KAER,IAAIkC,EAAQ,GAER9kB,KAAK7L,KAAKqwB,mBACVM,EAAK,aAAS9kB,KAAK7L,KAAKqwB,mBAG5B,MAAM+B,EAAW1hB,MAAMggB,aAAa/E,QAAQgF,EAAO,IAE7C0B,EAAe,kBAAcxmB,KAAK7L,KAAKwuB,WAAxB,eAAyC3iB,KAAK3K,KAA9C,aAAwD2K,KAAK7L,KAAKuuB,OAAS,GAA3E,aAAmFoC,EAAnF,KAErB,MAAO,UAAIyB,EAAJ,qBACLC,EADK,8BAEIxmB,KAAK3K,KAFT,aAEmB2K,KAAK7L,KAAKuuB,OAAS,GAFtC,gBAEiD1iB,KAAK7L,KAAKsyB,cAF3D,gBAGJC,eAnBY,KAsBnBC,aAAgBna,IACZxM,KAAK7L,KAAKsyB,cAAgBja,EAAI+L,OAAOpb,OAGzC4M,SACI,OAAO,2BACF/J,KAAKykB,gBACN,2BAECzkB,KAAK0kB,sBACN,2BACC1kB,KAAK4kB,eACN,2BACA,gBAAC,GAAD,CAAYrF,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOhU,SAAUvL,KAAK2mB,aAAc1uB,KAAK,OAAOsb,KAAM,QAASgP,YAAa,eACrEC,YAAY,8EAI/B,2BACoC,GAAnCxiB,KAAKhI,MAAMse,cAAcnN,OAAc,GAAK,2CAC7C,gBAAC,GAAD,CAAYoW,SAAS,GAChBvf,KAAKhI,MAAMse,iBCnDrB,MAAMsQ,WAAuBtC,GAEhC5jB,YAAYlI,GACRqM,MAAMrM,GADS,KAInBoqB,UAAY,KACR,MAAMxiB,EAAG,gDAA4CuC,mBAAmB3C,KAAK7L,KAAKuuB,QAC5EmE,EAAOC,SAASC,cAAc,KAMpC,OALAF,EAAKG,KAAO5mB,EACZymB,EAAKtO,OAAS,SACduO,SAASzmB,KAAK4mB,YAAYJ,GAC1BA,EAAKK,QACLJ,SAASzmB,KAAK8mB,YAAYN,GACnB,IAGXpc,qBAGAV,SACI,OAAOlF,MAAMkgB,WCjBF5F,IAAMC,MAAzB,MACM3T,GAASC,KAAOD,OAGf,MAAM2b,WAAyB/uB,YAClCqI,YAAYlI,GACRqM,MAAMrM,GADS,KA+BnB4tB,OAAUjpB,IACN6C,KAAKomB,OAASjpB,GAhCC,KAkCnBylB,UAAY,IACF,0BAAN,OAAkC5iB,KAAKomB,OAAvC,gBAjCApmB,KAAKgjB,MAAQxqB,EAAMsR,OACnB9J,KAAK3K,KAAOmD,EAAMnD,KAClB2K,KAAK7L,KAAO,CAAC4M,OAAQ,IACrBf,KAAKhI,MAAQ,CACTse,cAAe,GACfvJ,YAAavU,EAAMuU,YACnBD,UAAWtU,EAAMsU,UACjBE,WAAYxU,EAAMwU,YAI1BvC,oBACI,MAAM/I,EAAO1B,KACD,IAAIf,GAASL,IAErB0C,UAAU,GAAd,iCAAuDnN,IAEnD,MAAMmiB,EAAgBniB,EAAK0W,OAAOxB,GACN,WAAjBA,EAAKge,SACbje,IAAIC,GACI,gBAAC,GAAD,CAAQhP,IAAKgP,EAAK5H,QAAStE,MAAOkM,EAAK5H,SAAU4H,EAAK5H,UAGjEC,EAAK5J,SAAS,CAACwe,cAAeA,KAC/BlV,OAYP2I,SACI,OAAO,2BACH,gBAAC,KAAD,KACI,gBAAC,KAAD,oBACgB,gBAAC,KAAD,CACZwB,SAAUvL,KAAKomB,OACfnD,YAAU,EACVroB,MAAO,CAAC4Q,MAAO,KACfgX,YAAY,qBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvGtjB,KAAKhI,MAAMse,mBC/CtB,MAAMgR,WAAcjvB,YACvBqI,YAAYlI,GACRqM,MAAMrM,GADS,KAQnB+uB,sBAAwB,KACpBvnB,KAAKkK,GAAGpS,SAAS,CAACsV,OAAO,EAAOoa,gBAAgB,KATjC,KAWnBC,qBAAuB,KACnB,MAAMxpB,EAAM+B,KAAK0nB,SAAS1uB,QAAQ4pB,YAClC5iB,KAAKkK,GAAG0Y,UAAU3kB,GAClB+B,KAAKkK,GAAGpS,SAAS,CAACsV,OAAO,EAAOoa,gBAAgB,KAdjC,KAiBnBG,cAAgB,IACoB,SAA5B3nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAW5C,OAAQ9J,KAAMiK,IAAKjK,KAAK0nB,WAEd,SAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAWrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAG/B,gBAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAerX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAGnC,gBAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAerX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAGnC,iBAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,eAAgBrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,UAAc1nB,KAAKkK,GAAGlS,QAG1D,cAA5BgI,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAWrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAG/B,qBAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAkBrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAGtC,cAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,CAAgBrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAGpC,aAA5B1nB,KAAKkK,GAAGlS,MAAM0U,UACP,gBAAC,GAAD,eAAYrX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,UAAc1nB,KAAKkK,GAAGlS,QAGpD,SAA9BgI,KAAKkK,GAAGlS,MAAM6U,YACP,gBAAC,GAAD,eAAWxX,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,UAAc1nB,KAAKkK,GAAGlS,QAG9E,gBAAC,GAAD,CAAgB3C,KAAM2K,KAAKkK,GAAGlS,MAAM0U,UAAWzC,IAAKjK,KAAK0nB,WAvDhE1nB,KAAKkK,GAAK1R,EAAMsR,OAChB9J,KAAK0nB,SAAWrvB,cAChB2H,KAAKhI,MAAQ,CAACwvB,gBAAgB,EAAM5tB,MAAOpB,EAAMoB,OACjDoG,KAAK7L,KAAO,GAwDhB4V,SACI,OACI,2BACI,gBAAC,IAAD,CACInQ,MAAOoG,KAAKhI,MAAM4B,MAClBC,QAASmG,KAAKhI,MAAMwvB,eACpB1tB,SAAUkG,KAAKunB,sBACfxtB,KAAMiG,KAAKynB,qBACXvtB,OAAO,KACPD,WAAW,UAEV+F,KAAK2nB,mB,wBChF1B,MAAMlO,GAAQC,KAASD,MACPG,KAAKD,QAEd,MAAMiO,WAAqBvvB,YAC9BqI,YAAYlI,GACRqM,MAAMrM,GADS,KAWnB0Q,QAAU,CAACyW,EAAGmB,KACV9gB,KAAK6nB,SAASlI,GAAKmB,GAZJ,KAenBnU,QAAWgT,GACA3f,KAAK6nB,SAASlI,GAhBN,KAmBnBmI,YAAetb,IACX,MAAMK,EAAcL,EAAI+L,OAAO4J,aAAa,eAC5CniB,KAAKkJ,QAAQ,YAAasD,EAAI+L,OAAO4J,aAAa,SAClDniB,KAAKkJ,QAAQ,UAAWsD,EAAI+L,OAAO4J,aAAa,SAChDniB,KAAKkJ,QAAQ,cAAe2D,GAC5B7M,KAAKkJ,QAAQ,YAAasD,EAAI+L,OAAO4J,aAAa,cAAgB,IAClEniB,KAAKkJ,QAAQ,mBAAoBsD,EAAI+L,OAAO4J,aAAa,qBAAuB,IAChFniB,KAAKkJ,QAAQ,aAAcsD,EAAI+L,OAAO4J,aAAa,eAAiB,IACpEniB,KAAKkJ,QAAQ,cAAesD,EAAI+L,OAAO4J,aAAa,iBAAkB,GACtEniB,KAAKkJ,QAAQ,aAAcsD,EAAI+L,OAAO4J,aAAa,gBAAiB,GACpEniB,KAAKkJ,QAAQ,oBAAqBsD,EAAI+L,OAAO4J,aAAa,uBAAwB,IA7BnE,KAkCnBS,UAAa3kB,IACT+B,KAAKmH,SAAS4W,mBAAmB9T,IAAI+B,eAAe/N,IAnCrC,KAuCnB8pB,UAAY,IACJ/nB,KAAKhI,MAAMoV,MACJ,gBAAC,GAAD,CAAOtD,OAAQ9J,KAAMpG,MAAOoG,KAAKhI,MAAM4U,UAE3C,KA3CQ,KA+CnBob,cAAiBxb,IACbxM,KAAK8nB,YAAYtb,GACjBxM,KAAKmH,SAAS4W,mBAAmB9T,IAAIsC,OAAOC,IA/C5CxM,KAAKmH,SAAW3O,EAAMsR,OACtB9J,KAAKhI,MAAQ,GACbgI,KAAK6nB,SAAW,GAGpBpd,qBA6CAV,SACI,OACI,2BACI,gBAAC,KAAD,CAAUnP,MAAO,CAAC2P,OAAQ,UAAW0d,QAAS,YAC1C,gBAAC,GAAD,CAAO9N,OAAO,aAAa9f,IAAI,KAC3B,gBAAC,KAAD,CAAK6tB,OAAQ,IACT,gBAAC,KAAD,CAAKhxB,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAO,kBAET,gBAAC,KAAD,CAAKuuB,KAAM,CAAC3O,aAAc,QAAS5f,MAAM,iBACpCkuB,YAAa9nB,KAAK8nB,YAAazyB,KAAM,OACrC+yB,KAAM,wBACNC,WAAW,EAAMjU,MAAM,UAAUlC,cAAelS,KAAKgoB,eAH1D,aAMA,gBAAC,KAAD,CAAKG,KAAM,CAAC3O,aAAc,QAAS5f,MAAM,YAAYkuB,YAAa9nB,KAAK8nB,YAClEzyB,KAAM,OACN+yB,KAAM,2BACNC,WAAW,EAAMjU,MAAM,UAAUlC,cAAelS,KAAKgoB,eAH1D,eAMR,gBAAC,KAAD,CAAK9wB,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAM,cACR,gBAAC,KAAD,CAAKuuB,KAAM,CAAC3O,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAChDzyB,KAAM,eACN+yB,KAAM,kCACNC,WAAW,EAAMjU,MAAM,UAAUlC,cAAelS,KAAKgoB,eAH1D,SAKA,gBAAC,KAAD,CAAKG,KAAM,CAAC3O,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAChDzyB,KAAM,kBACN+yB,KAAM,qCACNC,WAAW,EAAMjU,MAAM,UAAUlC,cAAelS,KAAKgoB,eAH1D,YAKA,gBAAC,KAAD,CAAKG,KAAM,CAAC3O,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cACjF3yB,KAAM,eACN+yB,KAAM,oCACNC,WAAW,EAAMjU,MAAM,WAH5B,gBAKA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,YACN+yB,KAAM,0BACNC,WAAW,EAAMjU,MAAM,WAH5B,oBAKA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,mBACN+yB,KAAM,+CACNC,WAAW,EAAMjU,MAAM,WAH5B,iBAKA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,aACN+yB,KAAM,iBACNC,WAAW,EAAMjU,MAAM,WAH5B,gBAOR,gBAAC,KAAD,CAAKld,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAM,UACR,gBAAC,KAAD,CAAKgB,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,eAAgBizB,YAAa,OACnCF,KAAM,oBACNG,UAAW,iBAAkBC,YAAa,OAAQC,WAAY,QAC9DC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,qBAOA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,oBAAqBizB,YAAa,OACxCF,KAAM,qBACNG,UAAW,iBAAkBC,YAAa,OAAQC,WAAY,QAC9DC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,yBAUZ,2BACA,gBAAC,KAAD,CAAK8T,OAAQ,IACT,gBAAC,KAAD,CAAKhxB,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAM,8BACR,gBAAC,KAAD,CAAKkuB,YAAa9nB,KAAK8nB,YAAazyB,KAAM,YAAaizB,YAAa,OAAQpW,cAAelS,KAAKgoB,cAC3FI,KAAM,2BACNC,WAAW,EAAMjU,MAAM,WAF5B,cAIA,gBAAC,KAAD,CAAK0T,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cACnD3yB,KAAM,WACN+yB,KAAM,8BACNG,UAAW,mBACXI,iBAAkB,gBAClBC,WAAY,gBACZJ,YAAa,OACbC,WAAY,QACZC,kBAAmB,QACnBL,WAAW,EAAMjU,MAAM,WAT5B,gCAYR,gBAAC,KAAD,CAAKld,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAM,QACR,gBAAC,KAAD,CAAKgB,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAazyB,KAAM,UAAW6c,cAAelS,KAAKgoB,cACnGM,YAAa,SACbD,WAAW,EAAMjU,MAAM,WAF5B,aAGA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAazyB,KAAM,OAAQ6c,cAAelS,KAAKgoB,cAChGM,YAAa,OACbC,UAAW,qBAAsBC,YAAa,OAC9CJ,KAAM,gBACNC,WAAW,EAAMjU,MAAM,WAJ5B,YAMA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,mBAAoBizB,YAAa,GACvCF,KAAM,0BACNC,WAAW,EAAMjU,MAAM,WAH5B,8BAMR,gBAAC,KAAD,CAAKld,KAAM,GACP,gBAAC,IAAD,CAAM0C,MAAM,SACR,gBAAC,KAAD,CAAKgB,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,cAAeizB,YAAa,OAClCF,KAAM,sDACNC,WAAW,EAAMjU,MAAM,WAH5B,0BAIA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,iBAAkBizB,YAAa,OACrCF,KAAM,oCACNG,UAAW,GAAIC,YAAa,OAAQC,WAAY,OAChDC,kBAAmB,QACnBL,WAAW,EAAMjU,MAAM,WAL5B,eAOA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,eAAgBizB,YAAa,SACnCF,KAAM,GACNC,WAAW,EAAMjU,MAAM,WAH5B,iBAIA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAAe3yB,KAAM,OACvGizB,YAAa,OACbC,UAAW,qBAAsBC,YAAa,QAC9CJ,KAAM,mBACNC,WAAW,EAAMjU,MAAM,WAJ5B,aAKA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,eAAgBizB,YAAa,OACnCC,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDL,KAAM,+BACNC,WAAW,EAAMjU,MAAM,WAJ5B,gBAMA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,YAAaizB,YAAa,GAChCF,KAAM,qBACNC,WAAW,EAAMjU,MAAM,WAH5B,mBAMA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,iBAAkBizB,YAAa,OACrCF,KAAM,6BACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,QACnBL,WAAW,EAAMjU,MAAM,WAL5B,qBAMA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,cAAeizB,YAAa,OAClCF,KAAM,aACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,aAOA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,WAAYizB,YAAa,OAC/BF,KAAM,cACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,eAOA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,cAAeizB,YAAa,OAClCF,KAAM,2BACNG,UAAW,eAAgBC,YAAa,QAASC,WAAY,QAC7DC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,4BAOA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,eAAgBizB,YAAa,OACnCF,KAAM,gBACNG,UAAW,cAAeC,YAAa,OAAQC,WAAY,QAC3DC,kBAAmB,OACnBL,WAAW,EAAMjU,MAAM,WAL5B,6BAMA,gBAAC,KAAD,CAAKxZ,MAAO,CAAC4e,aAAc,QAASsO,YAAa9nB,KAAK8nB,YAAa5V,cAAelS,KAAKgoB,cAClF3yB,KAAM,eACNizB,YAAa,SACbD,WAAW,EAAMjU,MAAM,WAH5B,yBAWnBpU,KAAK+nB,c,yCCvPdc,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAMC,WAAsB3wB,YACvCqI,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKhI,MAAM,CAACixB,IAAI,GAAGziB,SAAQ,GAIzBiC,SAAS,IAAD,iIACZ,EAAK3Q,SAAS,CAAC0O,SAAQ,IADX,SAEMpB,GAAc8jB,oBAFpB,OAGI,OADVxzB,EAFM,QAGLkG,SACIqtB,EAAM,GACZvzB,EAAIG,QAAQ6a,QAAQrH,IACb4f,EAAI5f,EAAK8f,UAGXF,EAAI5f,EAAK8f,UAAUtmB,KAAKwG,EAAK+f,OAF7BH,EAAI5f,EAAK8f,UAAY,CAAC9f,EAAK+f,SAKhC,EAAKtxB,SAAS,CAACmxB,SAEnB,EAAKnxB,SAAS,CAAC0O,SAAQ,IAdZ,6CAiBd6iB,OACI,OAAOnnB,OAAOonB,QAAQtpB,KAAKhI,MAAMixB,KAAK7f,IAAI,EAAE/O,EAAI8C,KACrC,gBAAC0rB,GAAD,CAAUjvB,MAAOS,EAAKA,IAAKA,GAC9B8C,EAAMiM,IAAIC,GACA,gBAACwf,GAAD,CAAU/tB,KAAM,gBAACyuB,GAAA,EAAD,MAAmB3vB,MAAOyP,EAAMhP,IAAG,UAAKA,EAAL,YAAYgP,GAAQmgB,QAAM,OAM7F/e,oBAAoB,IAAD,kIAChB,EAAKhC,SADW,6CAIzBsB,SACE,OACE,gBAAC,KAAD,CAAM0f,IAAI,aAAaC,SAAU1pB,KAAKhI,MAAMwO,SAC5C,gBAACuiB,GAAD,KACC/oB,KAAKqpB,U,MC5CNR,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAMY,WAAuBtxB,YACxCqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAMnBoxB,YANmB,uCAML,WAAMlzB,GAAN,iBAAAxC,EAAA,sEACMkR,GAAcykB,GAAGnzB,GADvB,UAEI,OADVhB,EADM,QAELkG,QAAiBlG,EAAIG,QAAQ,GAAGi0B,gBAF3B,uBAGDC,EAAOr0B,EAAIG,QAAQuT,IAAIC,IACzBA,EAAI,OAAa,EAAK2gB,MAAM3gB,GAC5BA,EAAI,IAAUA,EAAK3S,KACnB2S,EAAI,MAAYA,EAAK3S,KAAK4S,MAAM,KAAKwT,OAAO,GAAG,GAC/CzT,EAAI,QAAcA,EAAK4gB,OAChB5gB,IARJ,kBAUA0gB,GAVA,gCAYJ,IAZI,2CANK,2DAqBnBC,MAAO3gB,GACEA,EAAK6gB,WAAW/J,WAAW,KAtBjB,KAyBlBgK,WAzBkB,uCAyBL,WAAOC,GAAP,SAAAl2B,EAAA,sEAC4B,EAAK01B,YAAYQ,EAAS5xB,MAAM6xB,QAAQ3zB,MADpE,OACZ0zB,EAAS5xB,MAAM6xB,QAAQ9J,SADX,OAEZ,EAAKzoB,SAAS,CAACiyB,KAAK,IAAI,EAAK/xB,MAAM+xB,QAFvB,2CAzBK,2DA8BnBO,gBAAkBn2B,GACTA,EAAKiV,IAAIC,GACXA,EAAKkX,SACC,gBAAC,GAAD,CAAU3mB,MAAOyP,EAAKzP,MAAOS,IAAKgP,EAAKhP,IAAKmvB,OAAQngB,EAAKmgB,OAASa,QAAShhB,GAC/ErJ,KAAKsqB,gBAAgBjhB,EAAKkX,WAGxB,gBAAC,GAAD,CAAU3mB,MAAOyP,EAAKzP,MAAOS,IAAKgP,EAAKhP,IAAKmvB,OAAQngB,EAAKmgB,OAAQa,QAAShhB,KAnCjFrJ,KAAKhI,MAAM,CAAC+xB,KAAK,GAAGvjB,SAAQ,GAuC1BiC,SAAS,IAAD,+HACX,EAAK3Q,SAAS,CAAC0O,SAAQ,IADZ,SAEQ,EAAKojB,YAAY,KAFzB,OAELG,EAFK,OAGX,EAAKjyB,SAAS,CAAC0O,SAAQ,EAAMujB,SAHlB,6CAMRtf,oBAAoB,IAAD,kIAChB,EAAKhC,SADW,6CAIzBsB,SACE,OACE,2BACE,gBAAC,KAAD,CAAM0f,IAAI,aAAaC,SAAU1pB,KAAKhI,MAAMwO,SAC7C,gBAAC,GAAD,CAAe+jB,SAAUvqB,KAAKmqB,YAC1BnqB,KAAKsqB,gBAAgBtqB,KAAKhI,MAAM+xB,U,4DC9DKjsB,EAAQ,KAEpD0sB,GAAiB,CACnB1yB,S,GAHI1D,uBAKFq2B,GAAgB,CAClB3yB,S,GAN2BxD,gB,GCIkDP,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,yBAAAC,EAAA,yDAChGW,EAAS,IAAIC,cADmF,EAE5Eb,EAAOE,KAA1Bu2B,EAF+F,EAE/FA,KAAKC,EAF0F,EAE1FA,WACRD,EAAKV,MAH6F,iCAI/En1B,EAAOuB,IAAIpB,UAAa41B,gBAAgB,CAAC5vB,GAAG0vB,EAAK1vB,KAJ8B,UAKlF,OADVtF,EAJ4F,QAK3FkG,OAL2F,yCAMvF,CAACzH,KAAK,CACTuH,MAAM,oBAAD,OAAsBgvB,EAAKntB,MAA3B,qBAA6C7H,EAAIG,YAPoC,OAU5Fg1B,EAAan1B,EAAIG,QACvB80B,EAAWG,sBAAsB,CAAC9vB,GAAI0vB,EAAK1vB,GAAInF,QAASg1B,EAAWh1B,QAASR,KAAMw1B,EAAWx1B,OAXK,iCAa/F,CAAClB,KAAK,KAbyF,4CAAzB,uDAA3D42B,G,GAAR12B,QAA2C22B,G,GAAP/2B,O,GCC4BF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,mCAAAC,EAAA,yDAC7FW,EAAS,IAAIC,cADgF,EAE3Cb,EAAOE,KAAvD82B,EAF2F,EAE3FA,WAF2F,EAE/EN,WAAWO,EAFoE,EAEpEA,KAFoE,IAE/DC,qBAF+D,MAEjD,GAFiD,IAGhFD,EAAKE,gBAAjBC,EAH4F,EAG5FA,SAH4F,yCAMxF,CAACl3B,KAAK,CACTm3B,gBAAiB,gCAP0E,OAW3FZ,EAASz2B,EAAOsD,QAAhBmzB,KAEJV,GAAQ,EAbuF,KAc3FiB,EAd2F,OAe1F,SAf0F,QA2B1F,WA3B0F,4BAgB3FjB,GAAQ,EACJqB,EAASlN,SAAS,WAClBkN,EAASlN,SAAS,QAClBkN,EAASlN,SAAS,OAnBqE,0CAoBhF,CACHhqB,KAAM,CACFm3B,gBAAiB,mDAtB8D,mDA4B3FtB,GAAQ,EA5BmF,oCAgC7FuB,EAAa,CACfF,SAAUA,EACVrB,MAAOA,EACPn0B,QAASs1B,EACTK,SAAUd,EAAK1vB,IApCgF,UAuCjFnG,EAAOE,KAAKC,UAAaiT,iBAAiBsjB,GAvCuC,wCAyC5F,CACHp3B,KAAK,2BACEF,EAAOE,MADV,IAEAs3B,UAAWjM,GAAMO,iBA5C0E,4CAAzB,uDAAtD2L,G,GAATr3B,QAA0Cs3B,G,GAAR13B,O,GCDgBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,uBAAAC,EAAA,6DAC/E03B,EAAgB33B,EAAOE,KAAvBy3B,aACaC,EAAmB53B,EAAOsD,QAAvCq0B,aACDE,EAAiBF,EAAa/gB,OAAOxB,IAAOwiB,EAAgB3T,SAAS7O,IACrE0iB,EAAmBF,EAAgBhhB,OAAOxB,IAAOuiB,EAAa1T,SAAS7O,IACvExU,EAAS,IAAIC,cACnBg3B,EAAepb,QAAf,uCAAuB,WAAMsb,GAAN,SAAA93B,EAAA,sEACbW,EAAOE,KAAKC,UAAaiT,iBAAiB,CAC5CjN,GAAIgxB,EAAQC,YAAW,IAFR,2CAAvB,uDAMAF,EAAiBrb,QAAjB,uCAAyB,WAAMsb,GAAN,SAAA93B,EAAA,sEACfW,EAAOE,KAAKC,UAAaiT,iBAAiB,CAC5CjN,GAAIgxB,EAAQC,YAAW,IAFN,2CAAzB,uDAZsF,kBAkB/E,CACH93B,KAAM,CACFy3B,kBApB8E,2CAAzB,uDAA3CM,G,GAAR73B,QAAmC83B,G,GAAPl4B,O,GCCoCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DAC3Fw2B,EAASz2B,EAAOE,KAAhBu2B,KAD2F,SAE7F51B,cAAYD,OAAOE,KAAKC,UAAao3B,mBAAoB,CAC3DpxB,GAAI0vB,EAAK1vB,KAHsF,gCAK5F,CACH7G,KAAK,2BACEF,EAAOE,MADV,IAEAs3B,UAAWjM,GAAMK,uBAR0E,2CAAzB,uDAAtDwM,G,GAATh4B,QAA0Ci4B,G,GAARr4B,OCAjD,MAAMs4B,OACKC,eAAe,iBADpBD,GAEKE,iBAAiB,mBAFtBF,GAGKG,iBAAiB,mBAHtBH,GAIKI,OAAO,SAElB,MAAMC,GAAkB,2BACjBpC,IADiB,IAEpB,CAAC+B,GAAsBC,gBAAgBzB,GACvC,CAACwB,GAAsBE,kBAAkBf,GACzC,CAACa,GAAsBI,QAAQT,GAC/B,CAACK,GAAsBG,kBAAkBL,KAEvCQ,GAAiB,2BAChBpC,IADgB,IAEnB,CAAC8B,GAAsBC,gBAAgBxB,GACvC,CAACuB,GAAsBE,kBAAkBd,GACzC,CAACY,GAAsBI,QAAQR,GAC/B,CAACI,GAAsBG,kBAAkBJ,KAG7C,SAASQ,GAAkB90B,EAAO/D,GAClC,OAAO44B,GAAkB54B,EAAOgE,MAAMD,EAAO/D,EAAOE,M,gCC2CrC44B,OAlEf,MAA4B,cAAD,KAkBvBC,MAASC,IAEL,IAAkBvC,EAAkB5L,EAAhCoO,EAAU,GAAUC,EAAQ,GAChC,IAAKrO,EAAI,EAAGA,EAAImO,EAAK9jB,OAAQ2V,GAAK,EAC9BoO,EAAQD,EAAKnO,GAAG9jB,IAAM8jB,EACtBmO,EAAKnO,GAAGsO,WAAa,GAEzB,IAAKtO,EAAI,EAAGA,EAAImO,EAAK9jB,OAAQ2V,GAAK,EAE9B,GADA4L,EAAOuC,EAAKnO,GACU,IAAlB4L,EAAKc,SACL,IACIyB,EAAKC,EAAQxC,EAAKc,WAAW4B,WAAWvqB,KAAK6nB,GAC/C,MAAO5zB,GACL0I,QAAQC,IAAI,gBACZD,QAAQC,IAAIirB,GACZlrB,QAAQC,IAAIytB,EAAQxC,EAAKc,gBAI7B2B,EAAMtqB,KAAK6nB,GAGnB,OAAOyC,GAxCY,KA0CvBE,QAAWhkB,IACHA,EAAI,YAAkBA,EAAI,WAAeF,OAAS,IAClDE,EAAI,SAAeA,EAAI,WACvBA,EAAI,SAAaD,IAAKkkB,GACXttB,KAAKqtB,QAAQC,KAG5BjkB,EAAI,GAASqY,OAAOrY,EAAI,IACxBA,EAAI,IAAUA,EAAI,GAElBA,EAAI,MAAY,8BAAOA,EAAK9L,OAC5B8L,EAAI,QAAcA,EAAI,MAClBA,EAAI,MACJA,EAAI,KAAW,kBAACkkB,GAAA,EAAD,MAEflkB,EAAI,KAAW,kBAACmkB,GAAA,EAAD,MAGZnkB,K,yLC3Df,MAAMokB,GAAWjxB,KAAOC,IAAV,MAaCixB,OANf,WACI,OAAO,kBAACD,GAAD,KACH,kBAAC,KAAD,CAAMhE,IAAI,kBCZlB,MAAMkE,GAAiB,EAAEC,iBAAeh1B,YAAUi1B,eAAa,MAAD,EAEE90B,wBAASM,GAFX,mBAEnDy0B,EAFmD,KAE3BC,EAF2B,KAiD1D,MAAO,CAACC,aA7CaC,sBAAaltB,IAAY,MAClC6Q,EAAgB7Q,EAAhB6Q,MAAO8Y,EAAS3pB,EAAT2pB,KAEf,IAAIwD,EAAUtc,EAAMuc,QAChBC,EAASxc,EAAMyc,QACnB,MAAMnH,EAAS1a,IACX,IAAIohB,EAAe50B,QAAS,QACP40B,EAAe50B,QAAQs1B,SAAS9hB,EAAI+L,SAErDwV,OAA0B10B,IAGlCytB,SAASyH,iBAAiB,QAASrH,GAEnC,MAAMsH,EAAS,KACXT,OAA0B10B,IAS9B,OAPAytB,SAASyH,iBAAiB,SAAUC,GAEpCT,EAA0B,CACtBU,MAAOP,EACPQ,MAAON,EACPpzB,GAAI0vB,EAAK1vB,IAAM0vB,EAAKrwB,MAEjB,KACHysB,SAAS6H,oBAAoB,QAAQzH,GACrCJ,SAAS6H,oBAAoB,SAASH,KAE5C,CAACT,IAiBkBa,GAfVX,sBAAY,KACnB,IAAKH,EACD,OAFmB,uBAIWA,GAA1BW,EAJe,EAIfA,MAAOC,EAJQ,EAIRA,MACTG,GALiB,EAID7zB,GACL,CACb8zB,OAAQ,IACRC,SAAU,QACVpZ,KAAK,GAAD,OAAK8Y,EAAL,MACJjZ,IAAI,GAAD,OAAKkZ,EAAL,MACHhc,aAAc,MACdsc,UAAW,uGAEf,OAAO,yBAAK/kB,IAAK2jB,EAAgBhzB,MAAOi0B,GAAWhB,EAAS,CAACC,yBAAuBC,4BAA0Bn1B,gBAChH,CAACk1B,MCrCC/E,GAAkBD,KAAlBC,cAGFjsB,GAAY,CACdmyB,MAAO,GACPvzB,WAAOrC,EACPiyB,qBAAiBjyB,EACjB4xB,gBAAY5xB,EACZ61B,iBAAa71B,EACb81B,cAAc,EACd1D,eAAWpyB,EACXmN,SAAS,EACTolB,aAAc,IAIZwD,GAAoB/2B,IAAMC,gBAEhC,SAAS+2B,GAAW72B,GAAQ,MAChBmyB,EAAenyB,EAAfmyB,WADe,EAEIztB,0BAAgB4vB,GAAmBhwB,GAAW8vB,IAFlD,mBAEhB50B,EAFgB,KAETY,EAFS,KAGf4N,EAQJxO,EARIwO,QACJyoB,EAOAj3B,EAPAi3B,MACAvzB,EAMA1D,EANA0D,MAAO4vB,EAMPtzB,EANOszB,gBACPL,EAKAjzB,EALAizB,WACAkE,EAIAn3B,EAJAm3B,aACAD,EAGAl3B,EAHAk3B,YACAzD,EAEAzzB,EAFAyzB,UACAG,EACA5zB,EADA4zB,aAEE/2B,EAAS,IAAIC,cACb84B,EAAiBn0B,mBAbA,EAcR61B,IAAKC,UAAbrE,EAdgB,oBAgBvBxxB,oBAAU,MACO,uCAAG,kCAAAxF,EAAA,sEACMW,EAAOuB,IAAIpB,UAAaw6B,iBAAkB,IADhD,UAEO,OADb95B,EADM,QAEJkG,OAFI,iDAMN6zB,EAAU,IAAI1C,GACd2C,EAAUD,EAAQzC,MAAMt3B,EAAIG,SAAS85B,KAAK,CAACz7B,EAAG07B,IACzC17B,EAAE8G,GAAK40B,EAAE50B,IAId60B,EAAWH,EAAQtmB,IAAIC,GAClBomB,EAAQpC,QAAQhkB,IAG3BmW,GAAMY,UAAUyP,EAAS,GAAKxmB,IACtBA,EAAK4iB,YACLL,EAAa/oB,KAAKwG,EAAKrO,MAI/BpC,EAAU,CACNX,KAAM,WACN9D,KAAM,CACF86B,MAAOY,EACPrpB,SAAS,EACTolB,kBA3BI,4CAAH,qDA+BbkE,IACD,CAACrE,IAEJ,MAnDuB,EAgImCkC,GAAe,CAAEC,iBAAgBh1B,YAAWi1B,SA7ErF,EAAEC,yBAAwBC,4BAA2Bn1B,gBAAgB,MAC1EoC,EAAO8yB,EAAP9yB,GACR,IAAIud,OAASlf,EAOb,OALAmmB,GAAMY,UAAU6O,EAAM,GAAK5lB,IACnBA,EAAKrO,KAAOA,IACZud,EAASlP,KAGbrO,IAAOi0B,EAAM,GAAGj0B,GACT,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACi1B,GAAA,EAAD,MAAuB31B,QACpC,KACIxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu2B,KAAMnS,EACN0S,WAAY,SACZiE,YAAa,iBACbC,cAAc,OAR9B,mBAgBH5W,EAAOyR,MAcL,kBAAC,IAAD,KACH,kBAAC,IAAKrvB,KAAN,CAAWG,KAAM,kBAACk1B,GAAA,EAAD,MAAqB51B,QAAS,KAC3CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu2B,KAAMnS,EACN0S,WAAY,OACZiE,YAAa,cACbC,cAAc,KAGtBpB,OAA0B10B,IAC3BgB,IAAK,GAXR,iBAYA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACi1B,GAAA,EAAD,MAAuB31B,QAAS,KAC7CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu2B,KAAMnS,EACN0S,WAAY,SACZiE,YAAa,gBACbC,cAAc,KAGtBpB,OAA0B10B,IAC3BgB,IAAK,GAXR,iBAYA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACm1B,GAAA,EAAD,MAAoB71B,QAAS,KAC1CxB,EAAU,CACNX,KAAMs0B,GAAsBG,iBAC5Bv4B,KAAM,CACFu2B,KAAMnS,KAGdwV,OAA0B10B,IAC3BgB,IAAK,GARR,WAtCO,kBAAC,IAAD,KACH,kBAAC,IAAKM,KAAN,CAAWP,QAAS,KAChBxB,EAAU,CACNX,KAAMs0B,GAAsBG,iBAC5Bv4B,KAAM,CACFu2B,KAAMnS,KAGdwV,OAA0B10B,IAC3BgB,IAAK,GARR,cAgDU61B,EAhIC,EAgIflC,aAAkCmC,EAhInB,EAgIevB,GAGtC,OACI,kBAACQ,GAAkBz1B,SAAnB,CAA4BwD,MAAO,CAAEvE,cAChCu3B,IACD,kBAAC,KAAD,CACIv2B,MAAOs1B,EACPr1B,QAASs1B,EACTr1B,SAAU,KACNlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEg7B,cAAc,MAG9Bp1B,KAAM,KACFnB,EAAU,CACNX,KAAMs0B,GAAsBE,iBAC5Bt4B,KAAM,CACFg7B,cAAc,EACdxE,aAAYM,aACZC,WAIZjxB,WAAW,SACXmY,OAAO,MAGHkZ,GAAmB,kBAAC,GAAD,CAAU1uB,QAAS0uB,IAE1C,kBAAC,IAAD,CAAMJ,KAAMA,GACR,kBAAC,IAAKvwB,KAAN,CAAWtF,KAAK,WAAWkI,MAAM,aAC7B,kBAAC,IAAD,SAIX7B,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAC5B8K,GAAW,kBAAC,GAAD,OACVA,GACE,kBAAC,GAAD,CAAeiI,OAAQ,IACnB2hB,SAAWxE,IACPhzB,EAAU,CACNX,KAAMs0B,GAAsBI,OAC5Bx4B,KAAM,CAAEy3B,mBAGhByE,kBAAkB,EAClBzE,aACIA,EAEJ1Z,cAAe,CAAC1F,EAAKke,KACjB9xB,EAAU,CACNX,KAAMs0B,GAAsBC,eAC5Br4B,KAAM,CAAEw2B,aAAYD,WAG5B4F,aAAa,QACbtC,aAAckC,EACdK,aAAc,kBAACC,GAAA,EAAD,MACdX,SAAUZ,K,MCrNtBtV,GAAYC,KAAZD,QACO,MAAM8W,WAAqBp4B,YACtCqI,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKmH,SAAW3O,EAAMsR,OAE1BC,SACG,OAAO,gBAAC,KAAD,CAAMqQ,iBAAiB,IAAIxf,MAAO,CAACkQ,SAAS,SAAUuP,WAAahgB,IAChE,MAANA,GACI2F,KAAK0wB,kBACJ1wB,KAAK0wB,iBAAiBjoB,WAI9B,gBAAC,GAAD,CAAS6R,IAAI,SAASjgB,IAAI,KAC3B,uBAAK+C,UAAU,gBACX,gBAACiyB,GAAD,CAAY1E,WAAc3qB,KAAKmH,aAGnC,gBAAC,GAAD,CAASmT,IAAI,YAAYjgB,IAAI,KAC7B,uBAAK+C,UAAU,gBACX,gBAAC,GAAD,CAAe6M,IAAMC,GAAMlK,KAAK0wB,iBAAmBxmB,MAGvD,gBAAC,GAAD,CAASoQ,IAAI,aAAajgB,IAAI,KAC9B,uBAAK+C,UAAU,gBACX,gBAAC,GAAD,CAAgB6M,IAAMC,GAAMlK,KAAK2wB,kBAAoBzmB,Q,OCnBhE,MAAM0mB,WAAsB5d,YAExBtS,YAAYlI,GACRqM,MAAMrM,GADS,KAiBnBsyB,sBAAyB+F,IACrB,MAAMnvB,EAAO1B,KAEb,GAAIA,KAAK8wB,gBAAgB1gB,eAAeygB,EAAO71B,IAAK,CAChD,MAAM+1B,EAAY/wB,KAAK8wB,gBAAgBD,EAAO71B,IAC9C+1B,EAAU9mB,IAAI/G,KAAK2tB,EAAOh7B,QAASg7B,EAAO71B,IAC1CgF,KAAKgxB,YAAYh4B,QAAQuS,SAASwlB,EAAU/S,gBAG5Che,KAAKgxB,YAAYh4B,QAAQulB,QAAQsS,EAAOx7B,KAAO07B,IAC3CA,EAAU9mB,IAAI/G,KAAK2tB,EAAOh7B,QAASg7B,EAAO71B,IAC1C0G,EAAKovB,gBAAgBD,EAAO71B,IAAM+1B,IAKtCF,EAAOx7B,KAAK8oB,SAAS,OACrBzc,EAAK5J,SAAS,CAACsmB,cAAe,aACxByS,EAAOx7B,KAAK8oB,SAAS,OAC3Bzc,EAAK5J,SAAS,CAACsmB,cAAe,iBAE9B1c,EAAK5J,SAAS,CAACsmB,cAAe,YAtCnB,KA0CnBa,YAAe8R,IACX,MAAME,EAAsB/uB,OAAOkP,KAAKpR,KAAK8wB,iBAAiBjmB,OAAOxQ,GAC1D2F,KAAK8wB,gBAAgBz2B,GAAK2jB,YAAc+S,EAAU/S,WAC1DxJ,OAAO,CAAC0c,EAAK72B,KACZ62B,EAAI72B,GAAO2F,KAAK8wB,gBAAgBz2B,GACzB62B,GACR,IACHlxB,KAAK8wB,gBAAkBG,GAjDR,KAoDnBlT,iBAAmB,IACR/d,KAAKgxB,YAAYh4B,QAAQ+kB,mBArDjB,KAyDnB7U,QAAW/U,IACP6L,KAAKka,aAAe/lB,EACpB6L,KAAKsH,KAAKtO,QAAQqe,WA3DH,KA8DnB8Z,aAAe,KACX,GAAiC,aAA7BnxB,KAAKhI,MAAMomB,eAA6D,iBAA7Bpe,KAAKhI,MAAMomB,cACtD,OAAO,6BACH,kBAAC,aAAD,CAAW5P,YAAa,CAACC,OAAQ,SAAUC,SAAU,KACjD1O,KAAKiM,WAAWjT,QAAQgL,OAAO2K,WAE/B,kBAAC,KAAD,CACIF,OAAQ,OACRjD,MAAO,OACPvB,IAAKjK,KAAKiM,WACVvR,KAAK,OACLkU,MAAM,SACNvZ,KAAK,iBAIb,6BACI,kBAAC,GAAD,CAAW4U,IAAKjK,KAAKsH,KAAMwC,OAAQ9J,QAEvC,yBAAK5C,UAAU,uBACX,kBAAC,GAAD,CAAmB6M,IAAKjK,KAAKoH,QAAS0C,OAAQ9J,UA/E1DA,KAAKhI,MAAQ,CAACo5B,WAAY,GAAIhT,cAAe,UAE7Cpe,KAAKgxB,YAAc34B,IAAMg5B,YACzBrxB,KAAKiM,WAAa5T,IAAMg5B,YACxBrxB,KAAKoH,QAAU/O,IAAMg5B,YACrBrxB,KAAKsH,KAAOjP,IAAMg5B,YAClBrxB,KAAKyM,MAAQpU,IAAMg5B,YAInBrxB,KAAK8wB,gBAAkB,GA4E3B/mB,SACI,OACI,yBAAK3M,UAAU,UAEZ,yBAAKA,UAAU,gBACf,kBAAC,aAAD,CAAYxC,MAAO,CAAE02B,aAAc,OAAQC,YAAa,UACvD,kBAAC,GAAD,CAAetnB,IAAMC,GAAKlK,KAAKwxB,gBAAkBtnB,EAAIJ,OAAQ9J,SAI7D,yBAAK5C,UAAU,iBACX,yBAAKxC,MAAO,CAAC4e,aAAc,SACvB,kBAAC,GAAD,CAAcvP,IAAKjK,KAAKyM,MAAO3C,OAAQ9J,QAE3C,kBAAC,GAAD,CAAWiK,IAAKjK,KAAKgxB,YAAalnB,OAAQ9J,OACzCA,KAAKmxB,kBAQXP,U,WC7Hf,MAAMa,GACJ/wB,YAAYgxB,GACV1xB,KAAK0xB,WAAaA,EAGpBC,QAAQC,GACN,OAAOA,EAAOpd,OAAO,CAACqd,EAAGC,IAAUA,EAAMD,GAAI7xB,KAAK0xB,aAIvCK,OAZJL,GAAe,IAAID,GAAaC,GCEpC,MAAMM,GAAeN,GAAa,cAAcA,EAAY,eAAD,iCAE5DO,iBAAmB,KACjBjyB,KAAKlI,SAAS,CAACo6B,gBAAgBlyB,KAAKhI,MAAMk6B,kBAHgB,KAM5DA,eAAkB1lB,IAChB,IAAIA,EAAIke,KAAKlyB,MAAT,MACF,OAEF,MAAM25B,EAAe,CAAC/I,MAAO5c,EAAIke,KAAKlyB,MAAT,MAAwB45B,GAAI5lB,EAAIke,KAAKlyB,MAAT,IACzDwH,KAAKlI,SAAS,CAACo6B,gBAAe,EAAKC,kBAXuB,KAc5DE,iBAAmB,IACXryB,KAAKhI,MAAMm6B,aAGVnyB,KAAKhI,MAAMm6B,aAAaC,GAAK,IAAMpyB,KAAKhI,MAAMm6B,aAAa/I,MAFrD,GAhB6C,KAqB5DkJ,UArB4D,uCAqBhD,WAAOzkB,GAAP,mBAAA3Z,EAAA,sDACR,EAAK4D,SAAS,CAACo6B,gBAAe,IADtB,EAEW,EAAKl6B,MAAMm6B,aAAvBC,EAFC,EAEDA,GAAGhJ,EAFF,EAEEA,MAEV,EAAKmJ,SAASC,WAAW3kB,EAAOukB,EAAGhJ,GAJ3B,2CArBgD,wDCIhDL,IAAkBD,KAA5BD,SAA4BC,KAAlBC,eAEH,MAAM0J,WAAwBV,GAAIpI,IAAgBgI,KAAKK,KAClEtxB,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAKnB05B,eAAkB1lB,IACd,MAAM2lB,EAAe,CAAC/I,MAAO5c,EAAIke,KAAKlyB,MAAM6xB,QAAf,KAA+B+H,GAAI,IAChEpyB,KAAKlI,SAAS,CAACo6B,gBAAe,EAAKC,kBAPpB,KAUnBG,UAVmB,uCAUP,WAAOzkB,EAAO6kB,EAAGC,GAAjB,iBAAAz+B,EAAA,sDACR,EAAK4D,SAAS,CAACo6B,gBAAe,IADtB,EAEW,EAAKl6B,MAAMm6B,aAFtB,EAEDC,GAAGhJ,EAFF,EAEEA,MACV,EAAKmJ,SAASC,WAAW3kB,EAAO6kB,EAAGtJ,EAAMuJ,GAHjC,2CAVO,+DAgBnB5oB,OAAS,IACE,2BACH,gBAAC,KAAD,CACInQ,MAAK,uBAAkBoG,KAAKqyB,mBAAvB,MACLx4B,QAASmG,KAAKhI,MAAMk6B,eACpBp4B,SAAUkG,KAAKiyB,iBACfl4B,KAAM,KAAQiG,KAAKsyB,UAAU,OAAOtyB,KAAK4yB,WAAWz+B,KAAKkuB,YAAYriB,KAAK4yB,WAAWz+B,KAAK4M,SAC1F9G,WAAW,SACXmY,OAAO,MACH,gBAAC,GAAD,CAAW/X,IAAK2F,KAAKqyB,mBAAoB9O,YAAY,EAAMC,iBAAiB,EAAMvZ,IAAKC,GAAIlK,KAAK4yB,WAAW1oB,EAAKJ,OAAQ9J,QAEhI,gBAAC,KAAD,CAAMypB,IAAI,aAAaC,SAAU1pB,KAAKhI,MAAMwO,SACxC,gBAAC,GAAD,CAAeiI,OAAQ,IAAK8b,SAAUvqB,KAAKmqB,WAAYmG,aAAa,cAActC,aAAchuB,KAAKkyB,gBAChGlyB,KAAKsqB,gBAAgBtqB,KAAKhI,MAAM+xB,SA3B7C/pB,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,U,MCL7B1J,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAM8J,WAAuBd,GAAI/I,IAAe2I,KAAKK,KAChEtxB,YAAYlI,GACRqM,MAAMrM,GADS,KAInBs6B,WAActmB,IACVxM,KAAKlI,SAAS,CACVg2B,uBAAwB,CACpBW,MAAOjiB,EAAIoF,MAAM6c,MACjBC,MAAOliB,EAAIoF,MAAM8c,MACjBtF,MAAO5c,EAAIke,KAAKlyB,MAAT,MACP45B,GAAI5lB,EAAIke,KAAKlyB,MAAT,OARZwH,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAYjClJ,OACI,OAAOnnB,OAAOonB,QAAQtpB,KAAKhI,MAAMixB,KAAK7f,IAAI,EAAE/O,EAAK8C,KACtC,gBAAC,GAAD,CAAUvD,MAAOS,EAAKA,IAAKA,GAC7B8C,EAAMiM,IAAIC,GACA,gBAAC,GAAD,CAAUvO,KAAM,gBAACyuB,GAAA,EAAD,MAAmB3vB,MAAOyP,EAAM+f,MAAO/f,EAAM+oB,GAAI/3B,EAAKA,IAAG,UAAKA,EAAL,YAAYgP,GAAQmgB,QAAM,OAM1Hzf,SAEI,OACI,2BACK,gBAAC,KAAD,CACGnQ,MAAK,aACLC,QAASmG,KAAKhI,MAAMk6B,eACpBp4B,SAAUkG,KAAKiyB,iBACfl4B,KAAM,KAAKiG,KAAKsyB,UAAU,UAC1Br4B,WAAW,SACXmY,OAAO,MANV,gBAOYpS,KAAKqyB,mBAPjB,OASD,gBAAC,KAAD,CAAM5I,IAAI,aAAaC,SAAU1pB,KAAKhI,MAAMwO,SACxC,gBAAC,GAAD,CAAewnB,aAAchuB,KAAKkyB,gBAC7BlyB,KAAKqpB,W,SC5CoCt1B,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,iBAAAC,EAAA,sEACrEkR,GAAc2tB,mBADuD,UAEpE,OADbr9B,EADiF,QAE/EkG,OAF+E,uBAG7EqtB,EAAM,GACZvzB,EAAIG,QAAQ6a,QAAQrH,IACX4f,EAAI5f,EAAK2pB,WAGV/J,EAAI5f,EAAK2pB,WAAWnwB,KAAKwG,EAAK7D,WAF9ByjB,EAAI5f,EAAK2pB,WAAa,CAAC3pB,EAAK7D,aAN+C,kBAW5E,CACHrR,KAAK,aACD80B,OAAOh1B,EAAOE,QAb6D,gCAkBhF,CACHA,KAAK,eAAKF,EAAOE,QAnBkE,2CAAzB,uDAA1C8+B,G,GAAT5+B,QAAoC6+B,G,GAARj/B,O,GCDkBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,iBAAAC,EAAA,+DACrDD,EAAOE,KAA7Bg/B,EAD2E,EAC3EA,UAD2E,EACjEZ,SACRC,WAAW,OAAO,GAAGW,GAFoD,kBAG3E,CACHh/B,KAAM,KAJwE,2CAAzB,uDAAvCi/B,G,GAAR/+B,QAAiCg/B,G,GAAPp/B,O,GCGyBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,iBAAAC,EAAA,6DAC/E8G,EAAM/G,EAAOE,KAAb6G,GACDmQ,EAAQ,IAAIrW,cAFoE,SAGhFqW,EAAM/U,IAAIpB,UAAas+B,sBAAsB,CAAC9tB,UAAUxK,IAHwB,gCAI/E,CACH7G,KAAM,CACFs3B,UAAWjM,GAAMO,gBAN6D,2CAAzB,uDAA3CwT,G,GAARl/B,QAAmCm/B,G,GAAPv/B,O,GCDgCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,mCAAAC,EAAA,+DAC9DD,EAAOE,KAAhCs/B,EADuF,EACvFA,WAAYlB,EAD2E,EAC3EA,SACZmB,EAAgBz/B,EAAOsD,QAAvBm8B,YACMP,EAAoBO,EAA1Br+B,KAAiB4C,EAASy7B,EAATz7B,KAHsE,SAK9Ds6B,EAASoB,aAAa,OAAQ,GAAIR,GAL4B,gBAKvFl1B,EALuF,EAKvFA,IAAKuH,EALkF,EAKlFA,UAEPouB,EAAUv+B,IACZ8V,EAAM7J,UAAN,yBACOrD,EADP,sCAEmBuH,EAFnB,eAEmCnQ,EAFnC,aAE6Co+B,EAF7C,oBAGOjU,GAAMO,aAAc,CAAE1d,OAAO,KAElC8I,EAAQ,IAAIrW,cAb6E,KAcvFmD,EAduF,OAetF,SAfsF,QAkBtF,SAlBsF,QAqBtF,UArBsF,gCAgBvF27B,EAAO,QAhBgF,oCAmBvFA,EAAO,WAnBgF,oCAsBvFA,EAAO,SAtBgF,sDA2BxF,CACHz/B,KAAK,eACEF,EAAOE,QA7B6E,4CAAzB,uDAAlD0/B,G,GAATx/B,QAAwCy/B,G,GAAR7/B,OCC/C,MAAM8/B,OACKC,KAAO,OADZD,GAEKE,KAAO,OAFZF,GAGKG,OAAS,SAHdH,GAIKI,UAAY,WAEvB,MAAMC,GAAsB,2BACrB5J,IADqB,IAExB,CAACuJ,GAA0BC,MAAMf,GACjC,CAACc,GAA0BE,MAAMb,GACjC,CAACW,GAA0BG,QAAQX,GACnC,CAACQ,GAA0BI,WAAWN,KAGpCQ,GAAqB,2BACpB5J,IADoB,IAEvB,CAACsJ,GAA0BC,MAAMd,GACjC,CAACa,GAA0BE,MAAMZ,GACjC,CAACU,GAA0BG,QAAQV,GACnC,CAACO,GAA0BI,WAAWL,KAG1C,SAASQ,GAAsBt8B,EAAO/D,GACtC,OAAOogC,GAAsBpgC,EAAOgE,MAAMD,EAAO/D,EAAOE,M,wCCtBhD00B,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACV7wB,GAAYC,IAAZD,QAEF4E,GAAY,CACdmsB,IAAK,GACLziB,SAAS,EACT2sB,eAAW95B,EACXk7B,SAAS,EACT9I,eAAWpyB,EAEXm7B,UAAU,EACVd,YAAa,CACTr+B,UAAMgE,EACNpB,UAAMoB,IAKRo7B,GAAwBp8B,IAAMC,gBAEpC,SAASo8B,GAAel8B,GAAQ,MACpB+5B,EAAqC/5B,EAArC+5B,SAAkBoC,EAAmBn8B,EAA3BiQ,OADS,EAEAvL,0BAAgBo3B,GAAuBx3B,GAAWs3B,IAFlD,mBAEpBp8B,EAFoB,KAEbY,EAFa,KAGnBqwB,EAEJjxB,EAFIixB,IAAKziB,EAETxO,EAFSwO,QAAS2sB,EAElBn7B,EAFkBm7B,UAAWoB,EAE7Bv8B,EAF6Bu8B,QAAS9I,EAEtCzzB,EAFsCyzB,UACtC+I,EACAx8B,EADAw8B,SAAUd,EACV17B,EADU07B,YAER9F,EAAiBn0B,mBANI,EAQN61B,IAAKC,UAAnBqF,EARoB,sBAuF+BjH,GAAe,CAAEC,iBAAgBh1B,YAAWi1B,SA7ErF,EAAGC,yBAAwBC,4BAA2Bn1B,gBAAiB,MAC5EoC,EAAO8yB,EAAP9yB,GAER,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAAC+5B,GAAA,EAAD,MAAwBz6B,QAAS,KAC9CxB,EAAU,CACNX,KAAM87B,GAA0BE,KAChC9/B,KAAM,CACFg/B,UAAWn4B,EACXu3B,cAGR35B,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,KAGjBxG,OAA0B10B,IAC3BgB,IAAK,GAfR,cAiBA,kBAAC,GAAD,CAASS,KAAM,kBAACg6B,GAAA,EAAD,MAAuBl7B,MAAM,UACxC,kBAAC,IAAKe,KAAN,CAAWG,KAAM,kBAACi6B,GAAA,EAAD,MAAyB36B,QAAS,KAC/CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu/B,YAAa,CACTr+B,KAAM2F,EACN/C,KAAM,QAEVu8B,UAAU,EACVjC,cAIRxE,OAA0B10B,IAC3BgB,IAAK,KAdR,WAeA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACi6B,GAAA,EAAD,MAAyB36B,QAAS,KAC/CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu/B,YAAa,CACTr+B,KAAM2F,EACN/C,KAAM,SAEVu8B,UAAU,KAIlBzG,OAA0B10B,IAC3BgB,IAAK,KAbR,YAcA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACi6B,GAAA,EAAD,MAAyB36B,QAAS,KAC/CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFu/B,YAAa,CACTr+B,KAAM2F,EACN/C,KAAM,QAEVu8B,UAAU,KAGlBzG,OAA0B10B,IAC3BgB,IAAK,KAZR,kBAeJ,kBAAC,IAAKM,KAAN,CAAWP,QAAS,KAChBxB,EAAU,CACNX,KAAM87B,GAA0BG,OAChC//B,KAAM,CACF6G,QAGR+yB,OAA0B10B,IAC3BgB,IAAK,EAAGS,KAAM,kBAACm1B,GAAA,EAAD,OARjB,cAWcC,EAvFK,EAuFnBlC,aAAkCmC,EAvFf,EAuFWvB,GActC,OAZAl1B,oBAAU,KACNd,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAErB5N,EAAU,CACNX,KAAM87B,GAA0BC,KAChC7/B,KAAM,CACFqS,SAAS,MAGlB,CAACilB,EAAWkJ,IAEX,kBAACF,GAAsB96B,SAAvB,CAAgCwD,MAAO,CAAEvE,cACrC,kBAAC,KAAD,CACIgB,MAAK,oBAAe85B,EAAYz7B,MAChC4B,QAAS26B,EACT16B,SAAU,KACNlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFqgC,UAAU,MAItBz6B,KAAM,KAAO,MACD05B,EAAemB,EAAWI,iBAA1BvB,WACRmB,EAAWK,cACXr8B,EAAU,CACNX,KAAM87B,GAA0BI,UAChChgC,KAAM,CAAEqgC,UAAU,EAAOf,aAAYlB,eAG7Ct4B,WAAW,SACXmY,OAAO,MACP,kBAAC,IAAD,CAAM8Y,KAAM0J,GACR,kBAAC,IAAKj6B,KAAN,CAAW6C,MAAO,CACd,CACIC,UAAU,EACVb,QAAS,wBAGbW,MAAM,SACNlI,KAAK,cACL,kBAAC,IAAD,SAIZ,kBAAC,KAAD,CACIuE,MAAK,aACLC,QAAS06B,EACTz6B,SAAU,KACNlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,MAIrBx6B,KAAM,KACFnB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEg/B,gBAGhBl5B,WAAW,SACXmY,OAAO,MAlBX,eAmBa+gB,EAnBb,MAqBA,kBAAC,KAAD,CAAM1J,IAAI,aAAaC,SAAUljB,GAC5B2pB,IACD,kBAAC,GAAD,CAAe1hB,OAAQ,IAAKyD,cAAe,CAAC1F,EAAKke,KAC7C9xB,EAAU,CACNX,KAAM87B,GAA0BE,KAChC9/B,KAAM,CACFg/B,UAAWzI,EAAK1vB,GAChBu3B,cAGR35B,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,MAGlBvG,aAAckC,GAEThuB,OAAOonB,QAAQL,GAAKiM,QAAQ,EAAE76B,EAAK8C,KACxBA,EAAMiM,IAAIC,GACN,kBAAC,GAAD,CAAUvO,KAAM,kBAACyuB,GAAA,EAAD,MAAmBvuB,GAAIqO,EAAM+f,MAAO/f,EAAM+oB,GAAI/3B,EAAKT,MAAOyP,EAAMhP,IAAKgP,EAAMmgB,QAAM,S,SCtMtEz1B,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,2BAAAC,EAAA,2DACjED,EAAOE,KAAtBghC,EADgF,EAChFA,OADgF,EACzEzK,KACRvf,EAAQ,IAAIrW,cACdqgC,EAHmF,gCAInEhqB,EAAM7J,UAAN,kCAAkDke,GAAMO,aAAaP,GAAMiB,mBAJR,UAMhE,OAFf/qB,EAJ+E,QAM3EkG,OAN2E,uBAOzEqtB,EAAOvzB,EAAIG,QAAQ1B,KAAKiV,IAAIC,IAC9BA,EAAI,IAAUA,EAAK+rB,cAAgB/rB,EAAKgsB,UACxChsB,EAAI,MAAYA,EAAKhP,IACrBgP,EAAI,QAAa,EACjBA,EAAI,SAAe,GACZA,IAZoE,kBAcxE,CACHlV,KAAK,aACD80B,OAAOh1B,EAAOE,QAhByD,WAsBpFghC,EAtBoF,kCAuB7EhqB,EAAM7J,UAAN,6BAAsC6zB,EAAtC,MAAiD3V,GAAMO,aAAaP,GAAMiB,mBAvBG,yBAwBnEtV,EAAM7J,UAAN,+BAA+Cke,GAAMO,aAAaP,GAAMiB,mBAxBL,WA0BhE,OAFf/qB,EAxB+E,QA0B3EkG,OA1B2E,wBA2BzE05B,EAAU5/B,EAAIG,QAAQ1B,KAAK0W,OAAOxB,IACzBA,EAAK8f,UAAY9f,EAAKgsB,aACnBF,GACf/rB,IAAIC,IACHA,EAAI,IAAJ,UAAiB8rB,EAAjB,YAA2B9rB,EAAK7D,WAChC6D,EAAI,MAAYA,EAAK7D,UACrB6D,EAAI,QAAa,EACjBA,EAAI,KAAS,gBAACkgB,GAAA,EAAD,MACNlgB,IAEJ4f,EAAOh1B,EAAOsD,QAAd0xB,IACDsM,EAAStM,EAAI7f,IAAIgpB,IAChBA,EAAG/3B,MAAM86B,IACR/C,EAAG7R,SAAW+U,GAEXlD,IA1CoE,kBA4CxE,CACHj+B,KAAK,2BAAKF,EAAOE,MAAb,IAAkB80B,IAAIsM,MA7CiD,iCAmDhF,CACHphC,KAAK,eAAKF,EAAOE,QApDkE,4CAAzB,uDAA1C8+B,G,GAAT5+B,QAAoC6+B,G,GAARj/B,O,GCHuBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,2CAAAC,EAAA,+DACvBD,EAAOE,KAA/Dg/B,EAD+E,EAC/EA,UAAWZ,EADoE,EACpEA,SAAUiD,EAD0D,EAC1DA,gBAAgBC,EAD0C,EAC1CA,gBAD0C,EAEnEtC,EAAU7pB,MAAM,KAFmD,mBAEhF8oB,EAFgF,KAE5EhJ,EAF4E,KAI/EsM,EAAsCF,EAAtCE,YAAaC,EAAyBH,EAAzBG,WAAYC,EAAaJ,EAAbI,SAC3BC,EAAsBJ,GAAmBjW,GAAMqB,SAAS4U,GAC1DA,GAAmBC,GACbI,EAAQD,EAAqB,QAAUH,EAAYtsB,IAAIC,GAAM,IAAF,OAAMmW,GAAMQ,YAAY3W,GAAxB,MAAkCtG,KAAK,KAAO,IAC/GwvB,EAASC,WAAW,OAAQJ,EAAIhJ,EAAM,CAAC2M,UAAWD,KAE7CL,GAAmBE,GAAcC,GAChCI,EAD0C,UACjCH,EADiC,eACPrW,GAAMS,MAAM0V,GADL,gBACwBnW,GAAMS,MAAM2V,GADpC,eACoDC,EADpD,MAEhDtD,EAASC,WAAW,OAAQJ,EAAIhJ,EAAM,CAAC2M,UAAWC,KAElDzD,EAASC,WAAW,OAAQJ,EAAIhJ,GAdmD,kBAgBhF,CACHj1B,KAAM,KAjB6E,2CAAzB,uDAA1Ci/B,G,GAAT/+B,QAAoCg/B,G,GAARp/B,OCCrCgiC,GAAO,CAAC9hC,EAAM+hC,IAChB/hC,EAAKiV,IAAIC,IACL,MAAMmI,EAAQnI,EAAKzP,MAAMkoB,QAAQoU,GAC3BC,EAAY9sB,EAAKzP,MAAMw8B,OAAO,EAAG5kB,GACjC6kB,EAAWhtB,EAAKzP,MAAMw8B,OAAO5kB,EAAQ0kB,EAAY/sB,QACjDvP,EACF4X,GAAS,EACL,8BACK2kB,EACD,0BAAM/4B,UAAU,0BAA0B84B,GACzCG,GAGD,8BAAOhtB,EAAKzP,OAGxB,OAAIyP,EAAKkX,SACE,2BAAKlX,GAAZ,IAAkBzP,QAAO2mB,SAAU0V,GAAK5sB,EAAKkX,SAAU2V,KAGpD,2BAAK7sB,GAAZ,IAAkBzP,Y,GAG4C7F,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,uBAAAC,EAAA,yDACnF+0B,EAAQh1B,EAAOsD,QAAf0xB,IACAiN,EAAgBjiC,EAAOE,KAAvB+hC,YAFmF,yCAIhF,CACH/hC,KAAM,CACFy3B,aAAc,GAAI0K,WAAYrN,KANiD,cAWvFsN,EAAW,GACX3K,EAAe3C,EACdiM,QAAQ7rB,IAAS,IAAD,EACb,MAAMlI,GAAM,UAAAkI,EAAKkX,gBAAL,eAAenX,IAAIotB,GACvBA,EAAI58B,MAAMkoB,QAAQoU,IAAgB,EAC3B7sB,EAAKhP,IAET,MACRwQ,OAAOxB,GAAQA,KAAS,GAK3B,OAHGA,EAAKzP,MAAMkoB,QAAQoU,IAAgB,GAClCK,EAAS1zB,KAAKwG,EAAKhP,KAEhB8G,IAGfyqB,EAAepM,GAAMuB,SAAS6K,GACxB0K,EAAaL,GAAKhN,EAAKiN,GAAarrB,OAAOxB,GACtCuiB,EAAa1T,SAAS7O,EAAKhP,MAAQk8B,EAASre,SAAS7O,EAAKhP,MA7BsB,kBA+BpF,CACHlG,KAAM,CACFy3B,eAAc0K,gBAjCqE,2CAAzB,uDAA9CG,G,GAATpiC,QAAsCqiC,G,GAARziC,OCvB7C,MAAM0iC,OACK3C,KAAO,OADZ2C,GAEK1C,KAAO,OAFZ0C,GAGKC,OAAS,SAEpB,MAAMC,GAAkB,2BACjBrM,IADiB,IAEpB,CAACmM,GAAsB3C,MAAMf,GAC7B,CAAC0D,GAAsB1C,MAAOb,GAC9B,CAACuD,GAAsBC,QAASH,KAE9BK,GAAiB,2BAChBrM,IADgB,IAEnB,CAACkM,GAAsB3C,MAAMd,GAC7B,CAACyD,GAAsB1C,MAAOZ,GAC9B,CAACsD,GAAsBC,QAASF,KAGpC,SAASK,GAAkB/+B,EAAO/D,GAClC,OAAO6iC,GAAkB7iC,EAAOgE,MAAMD,EAAO/D,EAAOE,MCdhB20B,KAA5BD,S,MAAUE,GAAkBD,KAAlBC,cAEZjsB,GAAY,CACdmsB,IAAK,GACLziB,SAAS,EACT2sB,eAAW95B,EACXk7B,SAAS,EACT9I,eAAWpyB,EACXuyB,aAAc,IAGZoL,GAAoB3+B,IAAMC,gBAEhC,SAAS2+B,GAAWz+B,GAChB,MAAM+5B,EAAW2E,GAAiB3E,SAClBoC,EAAmBn8B,EAA3BiQ,OAFe,EAGIvL,0BAAgB65B,GAAmBj6B,GAAW+5B,IAHlD,mBAGhB7+B,EAHgB,KAGTY,EAHS,KAIfqwB,EAEJjxB,EAFIixB,IAAKziB,EAETxO,EAFSwO,QAAS2sB,EAElBn7B,EAFkBm7B,UAAWoB,EAE7Bv8B,EAF6Bu8B,QAAS9I,EAEtCzzB,EAFsCyzB,UACtC6K,EACAt+B,EADAs+B,WAAY1K,EACZ5zB,EADY4zB,aALO,EChB3B,WAA+B,MAAD,EAEQ7yB,mBAAS,IAFjB,mBAEnBo6B,EAFmB,KAERgE,EAFQ,OAGIp+B,oBAAS,GAHb,mBAGnByN,EAHmB,KAGVwE,EAHU,OAIFjS,mBAAS,IAJP,mBAInB5E,EAJmB,KAIb+U,EAJa,OAKAnQ,wBAASM,GALT,mBAKnBqC,EALmB,KAKZ07B,EALY,OAMoBr+B,wBAASM,GAN7B,mBAMnBo8B,EANmB,KAMF4B,EANE,OAOYt+B,oBAAS,GAPrB,mBAOnBu+B,EAPmB,KAONC,EAPM,OAQXjI,IAAKC,UAAbrE,EARmB,oBASpB/f,EAAQ,IAAIrW,cAElB4E,oBAAU,MACK,uCAAG,sCAAAxF,EAAA,yDACLi/B,EADK,0DAEUA,EAAU7pB,MAAM,KAF1B,mBAEH8oB,EAFG,KAEChJ,EAFD,KAGVpe,GAAW,GAHD,SAKQG,EAAM7J,UAAN,yCAAkD8wB,EAAlD,YAAwDhJ,EAAxD,MAChB5J,GAAMO,aAAaP,GAAMiB,mBANjB,OAQS,OAHb/qB,EALI,QAQFkG,QACEzH,EAAOuB,EAAIG,QAAQ1B,KAAKiV,IAAIC,IAAQ,QAEdA,EAAKmuB,UAAUluB,MAAM,KAAK,GAAGA,MAAM,KAFrB,mBAE/B/E,EAF+B,KAEvBpH,EAFuB,KAMtC,OAHKs4B,GACD4B,EAAmB9yB,GAEhB,CAAEA,SAAQpH,WAErB+L,EAAQ/U,GACRojC,GAAe,GACK,IAAhBpjC,EAAKgV,QACLouB,GAAe,KASnBruB,EAAQ,IACRquB,GAAe,IAEnBvsB,GAAW,GAhCD,2CAAH,qDAkCXhI,IACD,CAACmwB,IAEJ,MAAMR,EAAUx+B,EAAKsjC,UAAUruB,IAAIC,GACxB,kBAAC,KAAOoC,OAAR,CAAetO,MAAOkM,EAAKlM,OAAQkM,EAAKlM,QAiCnD,MAAO,CAAEyxB,GA/BE,IACA,oCACH,kBAAC,KAAD,CAAMlF,SAAUljB,GACX9K,GAAS,kBAAC,IAAD,CAAOd,MAAO,CAAE4e,aAAc,QAAUvhB,KAAK,QAAQ2E,QAASlB,IAEpE47B,GAAe,kBAAC,IAAD,CAAkBt8B,GAAG,sBAGnCs8B,GAAe,kBAAC,IAAD,CAAMpM,KAAMA,GACxB,kBAAC,IAAKvwB,KAAN,CAAWtF,KAAK,aAAakI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,iBACrD,kBAAC,KAAD,CAAQioB,YAAU,GACb0P,IAGT,kBAAC,IAAKh4B,KAAN,CAAWtF,KAAK,WAAWkI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,eACnD,kBAAC,KAAD,CAAQioB,YAAU,GACb0P,IAIT,kBAAC,IAAD,MACA,kBAAC,IAAKh4B,KAAN,CAAWtF,KAAK,cAAckI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,kBACtD,kBAAC,KAAD,CAAQN,KAAK,QACRi4B,OAQhBzH,OAAMiM,eAAcC,WAAU3B,kBAAiB6B,eDtDxDI,GALQC,EARW,EAQf/I,GACEgJ,EATa,EASnB1M,KACc2M,EAVK,EAUnBV,aACUW,EAXS,EAWnBV,SACA3B,EAZmB,EAYnBA,gBAAgB6B,EAZG,EAYHA,YAEd1J,EAAiBn0B,mBAdA,EAgCmCk0B,GAAe,CAAEC,iBAAgBh1B,YAAWi1B,SAhBrF,EAAGC,yBAAwBC,4BAA2Bn1B,gBAAiB,MAC5EoC,EAAO8yB,EAAP9yB,GAER,OADAwE,QAAQC,IAAIzE,GACL,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAAC+5B,GAAA,EAAD,MAAwBz6B,QAAS,KAC9CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,EACTpB,UAAWn4B,KAGnB+yB,OAA0B10B,IAC3BgB,IAAK,GATR,kBAYc61B,EAhCC,EAgCflC,aAAkCmC,EAhCnB,EAgCevB,GAmBtC,OAjBAl1B,oBAAU,KACNd,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAErB5N,EAAU,CACNX,KAAM0+B,GAAsB3C,KAC5B7/B,KAAM,CACFqS,SAAS,MAGlB,CAACilB,EAAWkJ,IAEfj7B,oBAAU,KACNm+B,EAAyB1E,IAC1B,CAAC0E,EAA0B1E,IAG1B,kBAAC6D,GAAkBr9B,SAAnB,CAA4BwD,MAAO,CAAEvE,cACjC,kBAAC,KAAD,CACIgB,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAC5BnB,QAAS06B,EACTz6B,SAAU,KACNlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,KAGjBqD,EAAc3C,eAElBl7B,KAAM,KACF,MAAMy7B,EAAkBoC,EAAc5C,iBACjCsC,GAAgB9B,EAAgBE,aAAiBF,EAAgBG,YAAcH,EAAgBI,UAIpGh9B,EAAU,CACNX,KAAM0+B,GAAsB1C,KAC5B9/B,KAAM,CACFg/B,YACAZ,WACAiD,kBACAC,qBAGR78B,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,KAGjBqD,EAAc3C,eAlBV6C,EAAkB,4BAoB1B79B,WAAW,SACXmY,OAAO,MACP,kBAACulB,EAAD,OAEJ,kBAAC,KAAD,CAAMlO,IAAI,aAAaC,SAAUljB,GAC5B2pB,IACD,kBAAC,IAAD,CAAOv1B,MAAO,CAAE4e,aAAc,GAAKgJ,YAAY,SAASjX,SACnDzU,IACG8B,EAAU,CACNX,KAAM0+B,GAAsBC,OAC5BziC,KAAM,CAAE+hC,YAAap/B,EAAEyhB,OAAOpb,YAI1C,kBAAC,GAAD,CAAesR,OAAQ,IACnBmd,aAAcA,EACdiE,SAAUyG,GAAcrN,EACxBsB,SAAQ,uCACJ,WAAOG,GAAP,SAAAx2B,EAAA,sDACI0E,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAErB5N,EAAU,CACNX,KAAM0+B,GAAsB3C,KAC5B7/B,KAAM,CAAEghC,OAAQzK,EAAKrwB,IAAKqwB,OAAMlkB,SAAS,KAPjD,2CADI,sDAWN8pB,aAAa,QAAQF,SAAWxE,IAC9BhzB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEy3B,mBAEb1Z,cAAe,CAAC1F,EAAKke,KACfA,EAAKlB,QAGV5wB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,EACTpB,UAAWzI,EAAKrwB,QAGzB2zB,aAAc,EAAGpc,QAAO8Y,WACnBA,EAAKlB,QACL0G,EAAe,CAAEte,QAAO8Y,c,SEvJ6B32B,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,+CAAAC,EAAA,+DACvCD,EAAOE,KAA/DqhC,EAD+F,EAC/FA,gBAAgBrC,EAD+E,EAC/EA,UAAU4E,EADqE,EACrEA,kBAAkBxF,EADmD,EACnDA,SADmD,EAEnFY,EAAU7pB,MAAM,KAFmE,mBAE/F8oB,EAF+F,KAE5FhJ,EAF4F,KAG/FqM,EAAyCD,EAAzCC,gBAAgBuC,EAAyBxC,EAAzBwC,WAAWC,EAAczC,EAAdyC,WAC5B9sB,EAAQ,IAAIrW,cAJoF,SAM7EqW,EAAM/U,IAAIpB,UAAakjC,iBAAiB,CAAC7iC,KAAK+8B,IAN+B,cAMhG+F,EANgG,OAOhGC,EAAY5Y,GAAMK,mBACpBwY,EAAa,GACd5C,IACC4C,EAAU,iCAA6B5C,EAA7B,uCACQuC,EADR,uCAEQC,EAFR,yCAGWF,EAHX,gBAOR95B,EAjBgG,kBAkBlGk6B,EAAWtiC,QAAQyiC,QAlB+E,8BAmBtFnF,EAnBsF,aAmBvEkF,EAnBuE,eAmBtDD,EAnBsD,eAqBtG7F,EAASC,WAAW,OAAQJ,EAAIhJ,EAAM,CAACmP,QAASt6B,EAAIu6B,cAAcJ,IArBoC,kBAuB/F,CACHjkC,KAAK,eACEF,EAAOE,QAzBoF,4CAAzB,uDAA3DskC,G,GAARpkC,QAA2CqkC,G,GAAPzkC,OCHlD,MAAM0kC,OACK1E,KAAO,OAElB,MAAM2E,GAAiB,2BAChBpO,IADgB,IAEnB,CAACmO,GAAqB1E,MAAMwE,KAE1BI,GAAgB,2BACfpO,IADe,IAElB,CAACkO,GAAqB1E,MAAMyE,KAGhC,SAASI,GAAiB9gC,EAAO/D,GACjC,OAAO4kC,GAAiB5kC,EAAOgE,MAAMD,EAAO/D,EAAOE,M,0BCVnD,SAAS4kC,GAAevgC,GAAQ,MAAD,EACFO,mBAASP,EAAMwgC,cAAgB,IAD7B,mBACpB77B,EADoB,KACd+G,EADc,KAuB3B,MAAO,CAAC0qB,GArBI,IACR,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAK13B,KAAM,IACT,kBAAC,KAAD,CACE+hC,IAAKzgC,EAAMygC,KAAK,GAChBC,IAAK1gC,EAAM0gC,KAAK,IAChB3tB,SAAWpO,IAAS+G,EAAS/G,IAC7BA,MAAOA,KAGX,kBAAC,KAAD,CAAKjG,KAAM,GACT,kBAAC,KAAD,CACE+hC,IAAKzgC,EAAMygC,KAAK,GAChBC,IAAK1gC,EAAM0gC,KAAK,IAChBt+B,MAAO,CAAE2P,OAAQ,UACjBpN,MAAOA,EACPoO,SAAWpO,IAAS+G,EAAS/G,QAK1BA,S,MChBR4rB,GAAiBD,KAAjBC,cACDjsB,GAAY,CACdmsB,IAAK,GACLziB,SAAQ,EACR+tB,SAAQ,EACRpB,eAAW95B,EACXqC,WAAOrC,GAGL8/B,GAAmB9gC,IAAMC,gBAE/B,SAAS8gC,KACL,MAAM7G,EAAW2E,GAAiB3E,SADjB,EAEUr1B,0BAAgB47B,GAAkBh8B,GAAW87B,IAFvD,mBAEV5gC,EAFU,KAEHY,EAFG,KAGVqwB,EAAuCjxB,EAAvCixB,IAAIziB,EAAmCxO,EAAnCwO,QAAQ+tB,EAA2Bv8B,EAA3Bu8B,QAAQpB,EAAmBn7B,EAAnBm7B,UAHV,GAG6Bn7B,EAAT0D,MClBzC,WAA8B,MAAD,EAES3C,mBAAS,IAFlB,mBAElBo6B,EAFkB,KAEPgE,EAFO,OAGKp+B,oBAAS,GAHd,mBAGlByN,EAHkB,aAIDzN,mBAAS,KAJR,mBAIlB5E,EAJkB,KAIZ+U,EAJY,OAKCnQ,wBAASM,GALV,mBAKlBqC,EALkB,KAKX07B,EALW,OAMGr+B,wBAASM,GANZ,mBAMlBkL,EANkB,KAMV80B,EANU,OAOV/J,IAAKC,UAAbrE,EAPkB,oBAQnB/f,EAAQ,IAAIrW,cARO,EAUgCikC,GAAe,CACpEC,aAAc,GACdC,IAAK,EACLC,IAAK,MAHGI,EAVa,EAUjB1K,GAA2BmJ,EAVV,EAUG56B,MAM5BzD,oBAAU,KACN,GAAIy5B,EAAW,CAAC,MAAD,EACSA,EAAU7pB,MAAM,KADzB,mBACJ8oB,EADI,KAELgG,GAFK,KAEO5Y,GAAMK,qBACb,uCAAG,4BAAA3rB,EAAA,sEACQiX,EAAM7J,UAAN,uDACJ6xB,EADI,gBACciF,EADd,oCAEVA,EAFU,sBAGhB5Y,GAAMO,aAHU,2BAGQP,GAAMiB,mBAHd,IAGgC8Y,YAAYnH,KAJpD,OAKK,OAJT18B,EADI,QAKJkG,OACJsN,EAAQxT,EAAIG,QAAQ1B,MAEnB+U,EAAQ,IARD,2CAAH,qDAWXlG,KAEL,CAACmwB,IAELz5B,oBAAU,KACN,GAAG6K,EAAO,EACG,uCAAG,oCAAArQ,EAAA,+DACUi/B,EAAU7pB,MAAM,KAD1B,mBACH8oB,EADG,KACChJ,EADD,cAGQje,EAAM/U,IAAIpB,UAAawkC,qBAAqB,CAC3DrE,OAAO/C,EAAG5sB,UAAU4jB,EAAOqQ,WAAWl1B,IAJ/B,OAMQ,OAHZ7O,EAHI,QAMHkG,QACHsvB,EAAKwO,eAAe,CACjB1B,WAAYtiC,EAAIG,QAAQojC,IACxBhB,WAAYviC,EAAIG,QAAQqjC,MATrB,2CAAH,qDAaXl2B,KAEJ,CAACuB,EAAO4uB,IAGT,MAAMR,EAAUx+B,EAAK0W,OAAOxB,GAAyB,WAAnBA,EAAKswB,WAAwBvwB,IAAIC,GACxD,kBAAC,KAAOoC,OAAR,CAAetO,MAAOkM,EAAKuwB,UAAWvwB,EAAKuwB,WAgCtD,MAAO,CAAEhL,GA9BE,IACe,IAAnB+D,EAAQxpB,OACA,oCAAE,kBAAC,IAAD,CAAkBnO,GAAG,uBAE3B,oCACH,kBAAC,KAAD,CAAM0uB,SAAUljB,GACX9K,GAAS,kBAAC,IAAD,CAAOd,MAAO,CAAE4e,aAAc,QAAUvhB,KAAK,QAAQ2E,QAASlB,IACxE,kBAAC,IAAD,CAAMwvB,KAAMA,GACR,kBAAC,IAAKvwB,KAAN,CAAWtF,KAAK,kBAAkBkI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,qBAC1D,kBAAC,KAAD,CAAQuQ,SAAapO,IACjBk8B,EAAUl8B,KAETw1B,IAGT,kBAAC,IAAKh4B,KAAN,CAAWtF,KAAK,aAAakI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,gBACrD,kBAAC,IAAD,OAGJ,kBAAC,IAAD,MACA,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,aAAakI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,gBACrD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,gBAAgBkI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,mBACvDs+B,QAMRpO,OAAMiM,eAAcC,WAASW,qBDpE4D8B,IAA5FC,EALO,EAKVlL,GAAoBgJ,EALV,EAKK1M,KAAmBiM,EALxB,EAKwBA,aAAsBW,EAL9C,EAKqCV,SAA2BW,EALhE,EAKgEA,kBAE3EnK,EAAiBn0B,mBAPN,EAwByCk0B,GAAe,CAAEC,iBAAgBh1B,YAAWi1B,SAfrF,EAAGC,yBAAwBC,4BAA2Bn1B,gBAAiB,MAC5EoC,EAAO8yB,EAAP9yB,GACR,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAAC+5B,GAAA,EAAD,MAAwBz6B,QAAS,KAC9CxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,EACTpB,UAAWn4B,KAGnB+yB,OAA0B10B,IAC3BgB,IAAK,GATR,kBAYc61B,EAxBL,EAwBTlC,aAAkCmC,EAxBzB,EAwBqBvB,GA6CtC,OA3CAl1B,oBAAU,MACK,uCAAG,gCAAAxF,EAAA,6DACV0E,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAEf2E,EAAQ,IAAIrW,cALR,SAMQqW,EAAM/U,IAAIpB,UAAa+kC,aAAc,IAN7C,OAOS,OADbrkC,EANI,QAOFkG,SACEi0B,EAAWn6B,EAAIG,QAAQ1B,KAAKiV,IAAIC,IAClCA,EAAKhP,IAAMgP,EAAKhU,KAChBgU,EAAKzP,MAAQyP,EAAKhU,KAClBgU,EAAKmgB,QAAS,EACdngB,EAAKkX,SAAWlX,EAAKisB,OAAOlsB,IAAIggB,IACrB,CACHpuB,GAAG,GAAD,OAAKqO,EAAKhU,KAAV,YAAkB+zB,GACpB/uB,IAAI,GAAD,OAAKgP,EAAKhU,KAAV,YAAkB+zB,GACrBxvB,MAAOwvB,EACPI,QAAQ,EACR1uB,KAAM,kBAACyuB,GAAA,EAAD,SAGPlgB,IAEXzQ,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAE80B,IAAK4G,MAIrBj3B,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAQ,KA/BV,2CAAH,qDAkCXxD,IACD,IAEHtJ,oBAAU,KACNy9B,EAAahE,IACf,CAACA,EAAUgE,IAIT,yBAAK/5B,UAAU,gBACf,kBAAC+7B,GAAiBx/B,SAAlB,CAA2BwD,MAAO,CAAEvE,cACpC,kBAAC,KAAD,CACQgB,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAC5BnB,QAAS06B,EACTz6B,SAAU,KACNlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,KAGjBqD,EAAc3C,eAElBl7B,KAAM,KACF,MAAMy7B,EAAkBoC,EAAc5C,iBAC/BS,EAAyCD,EAAzCC,gBAAgBuC,EAAyBxC,EAAzBwC,WAAWC,EAAczC,EAAdyC,YAC/BxC,GACKuC,IAAeC,IAAcF,IAMrCn/B,EAAU,CACNX,KAAM0gC,GAAqB1E,KAC3B9/B,KAAM,CACFg/B,YACAZ,WACAiD,kBACAuC,uBAGRn/B,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,KAGjBqD,EAAc3C,eApBN6C,EAAkB,iEAsB9B79B,WAAW,SACXmY,OAAO,MACP,kBAAC0nB,EAAD,OAEL,kBAAC,KAAD,CAAMrQ,IAAI,aAAaC,SAAUljB,GAC3B2pB,IACD,kBAAC,GAAD,CAAe1hB,OAAQ,IACnBohB,SAAU5G,EACVqH,aAAa,QACbpe,cAAe,CAAC1F,EAAKke,KACZA,EAAKlB,QAGV5wB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFogC,SAAS,EACTpB,UAAWzI,EAAKrwB,QAGzB2zB,aAAc,EAAGpc,QAAO8Y,WACnBA,EAAKlB,QACL0G,EAAe,CAAEte,QAAO8Y,e,MEhJ5C/Q,GAAYC,KAAZD,QACO,MAAMqgB,WAAiB3hC,YAClCqI,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKuyB,SAAW/5B,EAAMsR,OACtB9J,KAAKhI,MAAQ,CACTiiC,mBAAe5gC,GAIvB0Q,SACI,OAAO,gBAAC,KAAD,CAAMqQ,iBAAiB,IAAIC,WAAahgB,IAC/B,MAARA,GACI2F,KAAK0wB,kBACL1wB,KAAK0wB,iBAAiBjoB,SAGlB,MAARpO,GACI2F,KAAK2wB,mBACL3wB,KAAK2wB,kBAAkBloB,WAI/B,gBAAC,GAAD,CAAS6R,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,mBAAqBX,IAAI,KACxD,uBAAK+C,UAAU,gBACX,gBAACs3B,GAAD,CAAgBjsB,OAAQzI,KAAKhI,MAAMiiC,cAAe1H,SAAUvyB,KAAKuyB,aAIzE,gBAAC,GAAD,CAASjY,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,SAAWX,IAAI,KAC9C,uBAAK+C,UAAU,gBACX,gBAAC65B,GAAD,QAIR,gBAAC,GAAD,CAAS3c,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,eAAiBX,IAAI,KACpD,uBAAK+C,UAAU,gBACX,gBAAC,GAAD,CAAgB6M,IAAMC,GAAOlK,KAAK0wB,iBAAmBxmB,EAAIJ,OAAQ9J,SAGzE,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,gBAAkBX,IAAI,KACrD,uBAAK+C,UAAU,gBACX,gBAAC,GAAD,CAAiB6M,IAAMC,GAAOlK,KAAK2wB,kBAAoBzmB,EAAIJ,OAAQ9J,SAG3E,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,UAAYX,IAAI,KAC/C,gBAAC++B,GAAD,SCvDDt7B,EAAQ,KAAvB,MACao8B,GAAcxI,GAAe,cAAcA,EAAY,eAAD,iCAE/Dc,WAF+D,uCAElD,WAAO3kB,EAAQukB,EAAIhJ,EAAOuJ,GAA1B,SAAAz+B,EAAA,6DACT,EAAKo+B,UAAUzkB,EAAQukB,EAAIhJ,EAAOuJ,GADzB,kBAEF,GAFE,2CAFkD,iEAO/DgB,aAP+D,uCAOhD,WAAO9lB,EAAQukB,EAAIhJ,EAAOuJ,GAA1B,2BAAAz+B,EAAA,yDACPsR,EAAYga,GAAMK,mBADX,UAGOuS,EAHP,KAKNA,GACU,GAGXiG,EAAa,SACb1F,EAWmB,YAVnB0F,GAA0Bn2B,OAAOkP,KAAKuhB,GAClC9nB,OAAO8U,GACG,cAANA,GACS,YAANA,GACM,kBAANA,GAEPvW,IAAIuW,IACA,MAAMmB,EAAI6R,EAAQhT,GAClB,MAAM,GAAN,OAAUA,EAAEG,QAAQ,aAAc,KAAlC,eAA6CgB,EAA7C,SACD/d,KAAK,YAERs1B,EAAa,IAEdA,EAAa,GAGhBp6B,EA3BO,eA2BO4P,EA3BP,aA2BmBukB,EA3BnB,YA2ByBhJ,EA3BzB,aA2BoCiP,EA3BpC,eA2BqD7yB,EA3BrD,KA6BI,UAAXqI,IACA5P,EAAG,sBAAmBm0B,EAAnB,YAAyBhJ,EAAzB,aAAoCiP,EAApC,eAAqD7yB,EAArD,MAGO,SAAXqI,IACC5P,EAAM00B,EAAQ4F,SAAR,qBAAkCnG,EAAlC,YAAwChJ,EAAxC,aAAmDiP,EAAnD,eAAoE7yB,EAApE,KACNA,EAAYmtB,EAAQ6F,eAAiBhzB,GAG1B,SAAXqI,EAtCO,kCAuCWzI,GAAc+0B,UAAU/Q,GAvCnC,QAuCD1zB,EAvCC,OAwCDykC,EAAYzkC,EAAIG,QAElBoI,EADqB,MAArBk8B,EAAUv+B,OACP,uCAAoCu+B,EAAU30B,UAA9C,iBAAiE20B,EAAU30B,UAA3E,4CACa20B,EAAU30B,UADvB,eACuCA,EADvC,KAGA,UAAM20B,EAAUtkC,QAAhB,4CACaskC,EAAU30B,UADvB,eACuCA,EADvC,KA7CA,cAkDI,SAAXqI,IACA5P,EAAG,eAAWm0B,EAAX,aAAmBhJ,EAAnB,aAA8BiP,EAA9B,gBAAgD7yB,EAAhD,MAGQ,SAAXqI,IACIusB,EAAc,SACdzH,GAAWA,EAAQoD,UACnBqE,GAA4BzH,EAAQoD,UACjCqE,EAAc,GAEfC,EAAgB7a,GAAMK,mBAC5B5hB,EAAG,qBAAkBm0B,EAAlB,YAAwBhJ,EAAxB,aAAmCiP,EAAnC,eAAoDgC,EAApD,KACHp8B,GAAS,wBAAoBo8B,EAApB,YAAqCD,EAArC,eAAuD50B,EAAvD,MA9DF,kBAiEJ,CAAEvH,MAAKuH,cAjEH,4CAPgD,iEA0E/D8sB,UA1E+D,uCA0EnD,WAAOzkB,EAAQukB,EAAIhJ,EAAOuJ,GAA1B,2BAAAz+B,EAAA,6DAGR,EAAKomC,KAAO,GAHJ,SAKyB,EAAK3G,aAAa9lB,EAAQukB,EAAIhJ,EAAOuJ,GAL9D,uBAKAntB,EALA,EAKAA,UAAWvH,EALX,EAKWA,IAEnB,EAAKq8B,KAAKz3B,KAAK,CAAE2C,YAAWvH,QAC5B,EAAKnG,SAAS,CAAEyiC,cAAc,IARtB,UAUU,EAAK1lC,OAAOyM,UAC1BrD,EACAuhB,GAAMO,aACNP,GAAMiB,mBAbF,WAUF/qB,EAVE,OAcR,EAAKoC,SAAS,CAAEyiC,cAAc,IACX,MAAf7kC,EAAIkG,OAfA,wBAgBJ,EAAK4+B,cAAL,uBAAmCh1B,EAAnC,aAAiD9P,EAAIG,UAhBjD,6BAmBiBH,EAAIG,QAArB4kC,EAnBA,EAmBAA,OAAQtmC,EAnBR,EAmBQA,KAChB,EAAKumC,gBAAgB,GAAI,GAAIl1B,EAAWi1B,EAAQtmC,GAChD,EAAK6+B,UAAYxT,GAAMO,aACvB,EAAKjoB,SAAS,CAAEk7B,UAAW,EAAKA,YAtBxB,4CA1EmD,iEAmG/D0H,gBAAkB,CAAC7sB,EAAQukB,EAAIhJ,EAAOqR,EAAQtmC,KAC1C6L,KAAKmyB,aAAe,CAAEtkB,SAAQukB,KAAIhJ,QAAOqR,SAAQtmC,QACjD6L,KAAK26B,cAAcxmC,EAAMsmC,MCtGpBG,GAAmBlJ,GAAe,cAAcA,EAAY,eAAD,iCACrEmJ,kBAAoB,IACV76B,KAAKs6B,KAAKt6B,KAAKs6B,KAAKnxB,OAAS,GAF8B,KAKrE2xB,SALqE,uCAK1D,WAAO/5B,GAAP,uBAAA7M,EAAA,2DACJ,EAAKomC,KAAKnxB,OAAS,GADf,uBAEL,EAAKqxB,cAAc,yBAFd,iCAKY,EAAKF,KAAKtY,MACxBmQ,EAAe,EAAKmI,KAAKtY,MANvB,SAOU,EAAKntB,OAAOuB,IAAIpB,UAAa+lC,UAAW,CAAE1lC,KAAM88B,EAAa3sB,YAPvE,UAQW,OADb9P,EAPE,QAQAkG,OARA,0BASoBtF,KAAKO,MAAMnB,EAAIG,QAAQoT,UAAxC9U,EATH,EASGA,KAAMsmC,EATT,EASSA,OATT,UAUC,EAAKO,MAAL,2BAAgB7I,GAAhB,IAA8B8I,MAAO9mC,EAAM+mC,QAAST,KAVrD,iDAaC,EAAKO,MAAM7I,GAbZ,4CAL0D,2DAuBrEgJ,qBAvBqE,uCAuB9C,WAAOl9B,EAAI8C,GAAX,iBAAA7M,EAAA,6DACd2d,EAAO,EAAKyoB,KAAKlxB,IAAIC,GAAQA,EAAKpL,KAAK8E,KAAK,IAD9B,SAEF,EAAKlO,OAAOyM,UAAZ,UACZuQ,EADY,uBAEZ5T,GACHuhB,GAAMO,aAHS,2BAIVP,GAAMiB,mBAAsB1f,IANhB,cAEdrL,EAFc,yBAObA,GAPa,2CAvB8C,6DAoCrEslC,MApCqE,uCAoC7D,WAAOj6B,GAAP,+BAAA7M,EAAA,yDACGsR,EAAmCzE,EAAnCyE,UAAWvH,EAAwB8C,EAAxB9C,IAAKg9B,EAAmBl6B,EAAnBk6B,MAAOC,EAAYn6B,EAAZm6B,QAC/B,EAAKZ,KAAKz3B,KAAK,CAAC2C,YAAUvH,SAEtBg9B,IAASC,EAJR,uBAKF,EAAKR,gBAAgB,GAAI,GAAIl1B,EAAW01B,EAASD,GAL/C,kBAMK,KANL,cASCppB,EAAO,EAAKyoB,KAAKlxB,IAAIC,GAAQA,EAAKpL,KAAK8E,KAAK,IAT7C,kBAWgB,EAAKlO,OAAOyM,UAAUuQ,EAAM2N,GAAMO,aAAlC,2BACZP,GAAMiB,mBADM,IAEfjiB,UAAW,iCACX48B,6BAA8B51B,EAC9B61B,sBAAuB/kC,KAAKC,UAAU,EAAK+jC,SAf5C,UAiBiB,OANb5kC,EAXJ,QAiBMkG,OAjBN,wBAkBC,EAAK0+B,KAAKtY,MACV,EAAKwY,cAAc9kC,EAAIG,SAnBxB,kBAoBQ,KApBR,iBAsBuBH,EAAIG,QAArB1B,EAtBN,EAsBMA,KAAMsmC,EAtBZ,EAsBYA,OACd,EAAKC,gBAAgB,GAAI,GAAIl1B,EAAWi1B,EAAQtmC,GAvB9C,kBAwBK,KAxBL,yCA0BF,EAAKqmC,cAAc,oCA1BjB,kBA2BK,KA3BL,0DApC6D,2DAmErEc,KAnEqE,uCAmE9D,WAAO91B,EAAW+1B,GAAlB,yBAAArnC,EAAA,yDACqB,IAArB,EAAKomC,KAAKnxB,OADV,uBAED,EAAKqxB,cAAc,2CAFlB,kBAGM,KAHN,UAKEv8B,EALF,wBAKyB,EAAK48B,oBAAoBr1B,UALlD,eAKkEA,EALlE,KAMJ,EAAK80B,KAAKz3B,KAAK,CAAE2C,YAAWvH,QACtBu9B,EAAW,EAAKlB,KAAKlxB,IAAIC,GAAQA,EAAKpL,KAAK8E,KAAK,MAEhD04B,EAAiBjc,GAAMO,aACzB2b,EAAc,CAAE9/B,OAAQ,IACxB2/B,EAXA,wBAYKI,EAZL,UAYqBH,EAZrB,qCAagBh2B,EAbhB,uCAayDA,EAbzD,gBAeK,EAAK3Q,OAAOyM,UAAUq6B,EAAYF,EAAgB,CACrDA,iBACAp5B,OAAO,IAjBT,QAmBDq5B,EAAc,CAAEj6B,QAASg6B,EAAgB7/B,OAAQ,GAnBhD,yBAsBc,EAAK/G,OAAOE,KAAKC,UAAa4mC,cAAe15B,OAAOC,OAAO,CAC1EqD,YACAvH,IAAKu9B,EACLxI,UAAW,EAAKA,UAChByH,OAAQnkC,KAAKC,UAAU,EAAK47B,aAAasI,SACzCiB,IA3BC,eAsBEhmC,EAtBF,yBA6BGA,EAAIkG,QA7BP,4CAnE8D,0D,0CCCpDzD,IAAZD,QACO,MAAM2jC,WAAoBxjC,YACrCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnBkQ,MAAQ,KACJ1I,KAAKlI,SAAS,CAAEgkC,cAAc,IAC9B97B,KAAKuyB,SAASz6B,SAAS,CAACikC,cAAa,KARtB,KAUnBlzB,KAAO,KACH7I,KAAKlI,SAAS,CAAEgkC,cAAc,IAC9B97B,KAAKuyB,SAASz6B,SAAS,CAACikC,cAAa,KAZtB,KAenBC,gBAAkB,KAChBh8B,KAAKi8B,UAhBY,KAmBnBA,OAAS,KACLj8B,KAAKlI,SAAS,CAAEokC,aAAcl8B,KAAKhI,MAAMkkC,eApB1B,KAuBnBC,iBAAmB,OAvBA,KAwBnBC,aAAe,OAtBXp8B,KAAKxH,MAAQA,EACbwH,KAAKhI,MAAQ,CAAE8jC,cAAc,EAAMI,aAAY,GAC/Cl8B,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAsBjCxoB,SACI,OAAO,uBAAKnP,MAAOoF,KAAKxH,MAAMoC,MAAOwC,UAAW4C,KAAKxH,MAAM4E,WAAa,WACpE,gBAAC,KAAD,CAAOxD,MAAO,OACVC,QAASmG,KAAKhI,MAAMkkC,YACpBpiC,SAAUkG,KAAKi8B,OACfliC,KAAMiG,KAAKxH,MAAM6jC,OACjBpiC,WAAW,SACXuR,MAAM,MACN4G,OAAO,MACP,gBAAC,IAAD,CAAMhV,UAAU,cACZ,gBAAC,IAAKzC,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,YAAYhX,SAAUvL,KAAKxH,MAAM2jC,kBAAoBn8B,KAAKm8B,iBAAkB3Z,YAAY,MACtH,gBAAC,IAAK7nB,KAAN,CAAW4C,MAAM,mCAAkC,gBAAC,KAAD,CAAQgO,SAAUvL,KAAKxH,MAAM4jC,cAAgBp8B,KAAKo8B,kBAG7G,uBAAKh/B,UAAU,cAAa,gBAAC,IAAD,CAAQoJ,QAASxG,KAAKhI,MAAM8jC,aAAc1hC,QAAS4F,KAAKxH,MAAM8jC,QAASrkC,KAAK,WAA5E,UAC5B,uBAAKmF,UAAU,cAAa,gBAAC,IAAD,CAAQm/B,SAAUv8B,KAAKhI,MAAM8jC,aAAc1hC,QAAS4F,KAAKi8B,OAAQhkC,KAAK,WAAtE,YAC5B,uBAAKmF,UAAU,cAAa,gBAAC,IAAD,CAAQm/B,SAAUv8B,KAAKhI,MAAM8jC,aAAc1hC,QAAS4F,KAAKxH,MAAMgkC,YAA/D,eChDjC,MAAMC,GAAmB/K,GAAe,cAAcA,EAAY,eAAD,iCACpE2K,OADoE,sBAC3D,sBAAAnoC,EAAA,sEACgB,EAAKq+B,SAAS+I,KAAK,EAAKoB,iBAAiB,EAAKC,gBAD9D,OAEO,MAFP,SAGD,EAAKpK,SAASqK,wBACd,EAAKrK,SAASsK,wBAJb,2CAD2D,KASnEL,WATmE,sBAStD,sBAAAtoC,EAAA,6DACZ,EAAK4oC,eAAep0B,QADR,SAES,EAAK6pB,SAASuI,WAFvB,OAGA,MAHA,SAIR,EAAKvI,SAASqK,wBACd,EAAKrK,SAASsK,wBAElB,EAAKC,eAAej0B,OAPR,2CATsD,KAmBnEszB,iBAAoB32B,IACjBxF,KAAK08B,iBAAmBl3B,EAAU+S,OAAOpb,OApBuB,KAsBnEi/B,aAAcxW,IACX5lB,KAAK28B,eAAiB/W,K,aCpBtBna,GAAWC,KAAXD,OACO,MAAMsxB,WAAwB1kC,YACzCqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAWnBiQ,OAXmB,sBAWV,8BAAAvU,EAAA,6DACC8oC,EAAqB,EAAKC,YAAYC,SAAS/K,aAAasI,OAD7D,SAEmBr1B,GAAc+0B,UAAU,EAAKgD,WAFhD,OAGoB,OADnBA,EAFD,QAGSvhC,QACV,EAAK9D,SAAS,CACVslC,mBAAoBJ,EAAmBK,OACvCC,gBAAiBhnC,KAAKO,MAAMsmC,EAAUtnC,QAAQ0nC,aAAaF,SAN9D,2CAXU,KAqBnB5yB,kBArBmB,sBAqBC,sBAAAvW,EAAA,sEACV,EAAKuU,SADK,2CArBD,KAyBnB+0B,KAAQlgC,IACJ0C,KAAKi9B,YAAYC,SAAWh7B,OAAOC,OAAOnC,KAAKi9B,YAAYC,SAAU5/B,GACrE0C,KAAKi9B,YAAYO,QA3BF,KA6BnBzzB,OAAS,IACE,gBAAC,IAAD,CAAM3M,UAAU,aAAaC,SAAU2C,KAAKw9B,MAC/C,gBAAC,IAAK7iC,KAAN,CAAWtF,KAAK,YAAYmI,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAC3D,gBAAC,KAAD,CACIW,MAAM,gBACN0lB,YAAU,EACVroB,MAAO,CAAE4Q,MAAO,KAChBgX,YAAaxiB,KAAKmyB,aAClBjP,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvEtjB,KAAKhI,MAAMolC,mBAAmBh0B,IAAIC,GACxB,gBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAInE,gBAAC,IAAKsF,KAAN,CAAWtF,KAAK,aAAamI,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAC5D,gBAAC,KAAD,CACIW,MAAM,aACN0lB,YAAU,EACVroB,MAAO,CAAE4Q,MAAO,KAChBgX,YAAaxiB,KAAKm9B,UAClBja,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvEtjB,KAAKhI,MAAMslC,gBAAgBl0B,IAAIC,GACrB,gBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,SAInE,gBAAC,IAAKsF,KAAN,KACI,gBAAC,IAAD,CAAQ1C,KAAK,UAAU0F,SAAS,UAAhC,UA9DRqC,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKi9B,YAAczkC,EAAMsR,OACzB9J,KAAKmyB,aAAenyB,KAAKi9B,YAAYC,SAAS/K,aAAa/I,MAC3DppB,KAAKm9B,UAAYn9B,KAAKi9B,YAAYC,SAASC,UAC3Cn9B,KAAKhI,MAAQ,CACTolC,mBAAoB,GACpBE,gBAAiB,K,eCXd,MAAMG,WAAqBplC,YACxCqI,YAAYlI,GACVqM,MAAMrM,GADW,KA0BnB2qB,aAAe,CAACua,EAAYra,IAAWA,EAAOzpB,MAAMkoB,QAAQ4b,IAAe,EA1BxD,KA4BnBC,aAAeC,IACb59B,KAAKlI,SAAS,CAAE8lC,eACb59B,KAAKxH,MAAMmlC,cACZ39B,KAAKxH,MAAMmlC,aAAa,CAAEC,gBA/BX,KAmCnBC,gBAAkB,IACT79B,KAAKhI,MAAM4lC,YAAc,GAlChC59B,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,GAIxB2I,IAAI3I,GASF,MAAO,CAACrE,KARaqE,EAAMslC,aAAa10B,IAAIC,IACnC,CACLzP,MAAMyP,EAAKhU,KACXgF,IAAKgP,EAAKhU,QAKDuoC,WAFM,IAKrBG,mBAAmBC,GAEbh+B,KAAKxH,MAAMslC,eAAiBE,EAAUF,cACtC99B,KAAKlI,SAAL,eAAkBkI,KAAKmB,IAAInB,KAAKxH,SAkBtCuR,SACE,OAAO,uBAAKnP,MAAO,CAAC4e,aAAa,SAC/B,gBAAC,KAAD,CACFykB,UAAW,CACTzyB,MAAO,IACPiD,OAAQ,KAEV0D,WAAYnS,KAAKhI,MAAM7D,KACvB8uB,YAAU,EACVE,aAAcnjB,KAAKmjB,aACnBya,WAAY59B,KAAKhI,MAAM4lC,WACvBryB,SAAUvL,KAAK29B,aAEf5zB,OAAQV,GAAQA,EAAKzP,UCnDV,MAAMskC,WAA6B7lC,YAC9CqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAYnBiQ,OAZmB,sBAYV,8BAAAvU,EAAA,6DACC8oC,EAAqB,EAAKC,YAAYC,SAAS/K,aAAasI,OAD7D,SAEmBr1B,GAAc+0B,UAAU,EAAKgD,WAFhD,OAGoB,OADnBA,EAFD,QAGSvhC,QACV,EAAK9D,SAAS,CACVslC,mBAAoBJ,EAAmBK,OACvCC,gBAAiBhnC,KAAKO,MAAMsmC,EAAUtnC,QAAQ0nC,aAAaF,SAN9D,2CAZU,KAuBnB5yB,kBAvBmB,sBAuBC,sBAAAvW,EAAA,sEACV,EAAKuU,SADK,2CAvBD,KA2BnB01B,WAAcP,IACV59B,KAAKi9B,YAAYC,SAAWh7B,OAAOC,OAAOnC,KAAKi9B,YAAYC,SAAU,CACjEkB,kBAAmBR,EAAWA,cA7BnB,KAiCnBS,YAAeT,IACX59B,KAAKi9B,YAAYC,SAAWh7B,OAAOC,OAAOnC,KAAKi9B,YAAYC,SAAU,CACjEoB,mBAAmBV,EAAWA,cAnCnB,KAuCnBW,MAAQ,KACJv+B,KAAKi9B,YAAYnzB,OAAOrB,UAxCT,KA2CnBsB,OAAS,IACE,gBAAC,IAAD,CAAO/S,SAAW,CAAEE,KAAM,IAC7B,gBAAC,IAAKyD,KAAN,CAAWtF,KAAK,oBAAoBkI,MAAM,gBAC1C,gBAAC,GAAD,CAAcogC,aAAc39B,KAAKm+B,WAAYL,aAAc99B,KAAKhI,MAAMolC,mBAAoBnzB,IAAMC,GAAOlK,KAAKo+B,kBAAoBl0B,EAAIJ,OAAQ9J,QAG5I,gBAAC,IAAKrF,KAAN,CAAWtF,KAAK,qBAAqBkI,MAAOyC,KAAKm9B,UAAU,IAC3D,gBAAC,GAAD,CAAeQ,aAAc39B,KAAKq+B,YAAcP,aAAc99B,KAAKhI,MAAMslC,gBAAiBrzB,IAAMC,GAAOlK,KAAKs+B,mBAAqBp0B,EAAIJ,OAAQ9J,QAG7I,gBAAC,IAAKrF,KAAN,KACA,gBAAC,IAAKA,KAAN,SAAY,gBAAC,IAAD,CAAQ6jC,QAAM,GAAd,YApDhBx+B,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKi9B,YAAczkC,EAAMsR,OACzB9J,KAAKmyB,aAAenyB,KAAKi9B,YAAYC,SAAS/K,aAAa/I,MAC3DppB,KAAKm9B,UAAYn9B,KAAKi9B,YAAYC,SAASC,UAC3Cn9B,KAAKhI,MAAQ,CACTolC,mBAAmB,GACnBE,gBAAgB,K,MCVpB7xB,GAAWC,KAAXD,OACO,MAAMgzB,WAAwBpmC,YACzCqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YASnBiQ,OATmB,sBASV,8BAAAvU,EAAA,sEACakR,GAAc2tB,mBAD3B,OACCr9B,EADD,OAED4/B,EAAS,GACM,MAAf5/B,EAAIkG,SACJ05B,EAAS5/B,EAAIG,QAAQuT,IAAIC,IACd,CACHhU,KAAMgU,EAAK7D,UACXrI,MAAOkM,EAAK7D,cAIxB,EAAK1N,SAAS,CAAEw9B,WAXX,2CATU,KAuBnB7qB,kBAvBmB,sBAuBC,sBAAAvW,EAAA,sEACV,EAAKuU,SADK,2CAvBD,KA2BnB+0B,KAAQlgC,IAEJ0C,KAAKi9B,YAAYC,SAAWh7B,OAAOC,OAAOnC,KAAKi9B,YAAYC,SAAS5/B,GACpE0C,KAAKi9B,YAAYO,QA9BF,KAkCnBzzB,OAAS,IACG,gBAAC,IAAD,CAAM3M,UAAU,aAAaC,SAAU2C,KAAKw9B,MAChD,gBAAC,IAAK7iC,KAAN,CAAWtF,KAAK,WAAWmI,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BAC1D,gBAAC,KAAD,CACIqmB,YAAU,EACVroB,MAAO,CAAE4Q,MAAO,KAChBgX,YAAY,mBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGxE,gBAAC,GAAD,CAAQjpB,IAAI,QAAQ8C,MAAM,cAA1B,cACA,gBAAC,GAAD,CAAQ9C,IAAI,OAAO8C,MAAM,aAAzB,aACA,gBAAC,GAAD,CAAQ9C,IAAI,QAAQ8C,MAAM,cAA1B,cACA,gBAAC,GAAD,CAAQ9C,IAAI,OAAO8C,MAAM,aAAzB,eAIR,gBAAC,IAAKxC,KAAN,CAAWtF,KAAK,YAAYmI,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BAC3D,gBAAC,KAAD,CACIqmB,YAAU,EACVroB,MAAO,CAAE4Q,MAAO,KAChBgX,YAAY,oBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO7qB,MAAM+nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvEtjB,KAAKhI,MAAMs9B,OAAOlsB,IAAKC,GACb,gBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKlM,OAAQkM,EAAKhU,SAKpE,gBAAC,IAAKsF,KAAN,KACI,gBAAC,IAAD,CAAQ1C,KAAK,UAAU0F,SAAS,UAAhC,UApERqC,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKi9B,YAAczkC,EAAMsR,OACzB9J,KAAKhI,MAAQ,CACTs9B,OAAQ,K,2OCGZoJ,GAASC,KAATD,KACFE,GAAcpiC,KAAOC,IAAV,MAUjB,MAAMoiC,WAAoB9M,GAAI15B,aAAiBs5B,KAC3C8K,KAEA/7B,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAanB8jC,QAbmB,sBAaT,8DAAApoC,EAAA,yDACAm+B,EAAmB,EAAKE,SAASJ,aAAa/I,MAD9C,EAEwF,EAAK8T,SAA3FC,EAFF,EAEEA,UAAW2B,EAFb,EAEaA,SAAUC,EAFvB,EAEuBA,UAAWC,EAFlC,EAEkCA,WAAYZ,EAF9C,EAE8CA,kBAAmBE,EAFjE,EAEiEA,mBAEnEF,GAAsBE,EAJpB,uBAKF,EAAK/L,SAASiI,cAAc,4BAL1B,iCASN,EAAKsC,eAAep0B,QATd,SAUiBtD,GAAc+0B,UAAUgD,GAVzC,cAUA8B,EAVA,OAWAC,EAAgBD,EAASppC,QACzBspC,EAAuBf,GAAqBA,EAAkBh1B,IAAIC,GAAI,UAAOgpB,EAAP,aAA6BhpB,EAA7B,MAAuCtG,KAAK,KAClHq8B,EAAwBd,GAAsBA,EAAmBl1B,IAAIC,GAAI,UAAO8zB,EAAP,aAAsB9zB,EAAtB,MAAgCtG,KAAK,KAE9Gs8B,EAfA,UAekBhN,EAflB,aAewC0M,EAfxC,KAgBAO,EAhBA,UAgBmBnC,EAhBnB,aAgBkC6B,EAhBlC,KAkBAO,EAlBA,UAkBaT,EAlBb,YAkByB3B,EAlBzB,eAkByCkC,EAlBzC,cAkB2DC,GAG7DE,EAAa,GACbL,GAAwBC,IACxBI,EAAaL,EAAuB,IAAMC,GAG1CD,IAAyBC,IACzBI,EAAaL,IAGZA,GAAwBC,IACzBI,EAAaJ,GAGX55B,EAAYga,GAAMK,mBAElB5hB,EApCA,UAoCSihC,EAAcrpC,QApCvB,sBAoC4C2pC,EApC5C,iBAoC+DnN,EApC/D,YAoCmFkN,EApCnF,eAoCiG/5B,EApCjG,KAqCNhG,QAAQC,IAAIxB,GArCN,UAsCA,EAAKs0B,SAASyI,MAAM,CAAEx1B,YAAWvH,QAtCjC,QAuCN,EAAK6+B,eAAej0B,OACpB,EAAK0pB,SAASqK,wBAxCR,4CAbS,KAwDnBY,KAAO,KACHx9B,KAAKlI,SAAS,CAAE2nC,YAAaz/B,KAAKhI,MAAMynC,YAAc,KAzDvC,KA2DnBC,QAAU,KACN1/B,KAAKlI,SAAS,CAAE2nC,YAAaz/B,KAAKhI,MAAMynC,YAAc,KA1DtDz/B,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKk9B,SAAW,CAAE/K,aAAcnyB,KAAKuyB,SAASJ,cAC9CnyB,KAAKhI,MAAQ,CACTynC,YAAa,EACbE,MAAO,CACH,gBAAC,GAAD,CAAiB71B,OAAQ9J,OACzB,gBAAC,GAAD,CAAiB8J,OAAQ9J,OACzB,gBAAC,GAAD,CAAqB8J,OAAQ9J,SAsDzC+J,SACI,OAAO,uBAAK3M,UAAU,YAClB,uBAAKA,UAAW,gBACZ,gBAAC,GAAD,CAAa0M,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WACxCL,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAOlK,KAAK88B,eAAiB5yB,EAC5EmyB,OAAQr8B,KAAKq8B,OACbC,QAASt8B,KAAKs8B,QACd1hC,MAAO,CAAE4e,aAAc,WAE/B,2BACI,gBAAC,KAAD,CAAOxgB,QAASgH,KAAKhI,MAAMynC,aACvB,gBAACf,GAAD,CAAMrkC,IAAK,EAAGT,MAAM,QAAQO,YAAY,kDACxC,gBAACukC,GAAD,CAAMrkC,IAAK,EAAGT,MAAM,kBAAkBO,YAAY,6CAClD,gBAACukC,GAAD,CAAMrkC,IAAK,EAAGT,MAAM,SAASO,YAAY,kDAGjD,uBAAKiD,UAAU,iBAAf,IAAgC,gBAACwhC,GAAD,KAC3B5+B,KAAKhI,MAAM2nC,MAAM3/B,KAAKhI,MAAMynC,iBAM7BZ,UC9GhB,MAAMhuB,GAAgB/S,EAAQ,KAEf,MAAM8hC,WAAsBvnC,YACvCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAQnBuY,UAAY,CAACC,EAAW7c,KAEpB,MAAMgJ,EAAQhJ,EAAK,GAAG6c,EAAU3W,KAEhC,GAAI2F,KAAKiR,QAAUjR,KAAKiR,OAAL,OACf/O,OAAOkP,KAAKpR,KAAKiR,QAAQ7H,IAAIuW,IACzB,MAAMmB,EAAI9gB,KAAKiR,OAAO0O,GAAG3O,EAAU3W,KAChCymB,IACC9P,EAAU2O,GAAKmB,SAJ3B,CAUA,IACI,GAAIzoB,YAAgB6Y,cAAc/T,EAAMlF,MAEpC,YADA+Y,EAAS,OAAa7T,GAAS,4BAAOA,IAI9C,MAAOrG,IAGc,QAAjBka,EAAU3W,IAKS,kBAAX8C,EAIW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjB6T,EAAU3W,KAAwC,WAAjB2W,EAAU3W,KAAqC,QAAjB2W,EAAU3W,MACzE2W,EAAS,OAAa7T,GAAS,2BAAMA,EAAMkE,aAJ3C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAMkE,YAJ5C2P,EAAS,OAAa7T,GAAS,4BAAOA,EAAM4F,KAAK,KAAKoO,UAAU,EAAG,MAJnEH,EAAS,OAAa7T,GAAS,4BAAO7G,KAAKC,UAAU4G,GAAOgU,UAAU,EAAG,MALzEH,EAAS,OAAa7T,GAAS,2BAAMA,EAAMgU,UAAU,EAAE,QAhC5C,KAwDnBzJ,OAAS,CAACvT,EAAM8c,KAEZjR,KAAKiR,OAAOA,EACZ,IAAIG,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAM5P,EAAO1B,KAEb7L,EAAKuc,SAAQ,SAAUrH,GACnB,IAAK,IAAIhP,KAAOgP,EACZ,IAAKgI,EAAOhX,GAAM,CACd,MAAM2W,EAAY,CACdpX,MAAOS,EACPkX,UAAWlX,EACXA,IAAKA,GAETqH,EAAKqP,UAAUC,EAAW7c,GAC1Bid,EAAKvO,KAAKmO,GACVK,EAAOhX,IAAO,MAM1BlG,EAAKuc,SAAQ,SAAUrH,EAAMmI,GACzB,IAAIC,EAAW,GACfL,EAAKV,SAAQ,SAAUrW,GACnBoX,EAASpX,EAAIA,KAAOgP,EAAKhP,EAAIA,QAEjCoX,EAAQ,IAAUD,EAClBF,EAAKzO,KAAK4O,MAGdzR,KAAKlI,SAAS,CAAC4Z,QAASN,EAAMjd,KAAMmd,KAzFrB,KA4FnBK,eAAiB,CAACtN,EAAKmN,EAAOI,KACT,gBAAbvN,EAAIhP,MAAuC,QAAbgP,EAAIhP,MAClC2K,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,EACTjc,QAASwO,EAAIlH,UAjGV,KAuGnB4U,eAAiB,KACb/R,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,MAxGjB9R,KAAKgS,WAAaxZ,EAAMoC,OAAS,GACjCoF,KAAKhI,MAAQ,CAAC0Z,QAAS,GAAIJ,KAAM,GAAIO,KAAM,CAACC,SAAS,IACrD9R,KAAKiR,OAAS,GACdjR,KAAKuyB,SAAW/5B,EAAMsR,OA0G1BC,SAEI,OAAQ,uBAAKnP,MAAOoF,KAAKgS,YACjB,gBAAC,KAAD,CACI6tB,WAAY,CAACC,SAAS,GACtBvsB,KAAM,UACN7B,QAAS1R,KAAKhI,MAAM0Z,QACpBS,WAAYnS,KAAKhI,MAAM7D,KACvBq6B,OAAU,CAAC/Z,GAAE,KAEjB,gBAAC,KAAD,CACI7a,MAAO,OACPC,QAASmG,KAAKhI,MAAM6Z,KAAKC,QACzBhY,SAAUkG,KAAK+R,eACfhY,KAAMiG,KAAK+R,eACX9X,WAAW,SACXmY,OAAO,MAEP,gBAAC,GAAD,CAAeC,OAAQrS,KAAKhI,MAAM6Z,KAAKhc,SAAW,QCtI/D,MAAMkqC,GAAgBrO,GAAe,cAAcA,EAAY,eAAD,iCACjEsO,mBAAqB,CAACpa,EAASvN,KAC3B,MAAM4nB,EAAY5nB,EAAOM,MACrBiN,EACA5lB,KAAKkgC,cAAcr9B,KAAKo9B,GAExBjgC,KAAKkgC,cAAgBlgC,KAAKkgC,cAAcr1B,OAAQxB,GACrCA,EAAKhU,OAAS4qC,IAPgC,KAWjEE,qBAAuB,CAAC9qC,EAAK+qC,KAC1BpgC,KAAKqgC,UAAUx9B,KAAK,CAACxN,OAAK+qC,aAZoC,KAcjE9D,QAdiE,sBAcvD,oCAAApoC,EAAA,6DACL,EAAK4oC,eAAep0B,QACdlD,EAAYga,GAAMK,mBAEpBygB,EAAY,EAAKD,UAAUj3B,IAAIC,GAC1B,GAAN,OAAUA,EAAKhU,KAAf,gBAA4BgU,EAAK+2B,QAAjC,MAGCF,EAAgB,GAEY,IAA7B,EAAKA,cAAc/2B,SACnB+2B,EAAa,mBAAe,EAAKA,cAAc92B,IAAIC,GAAM,IAAF,OAAOA,EAAP,MAAiBtG,KAAK,MAC7Eu9B,EAAY,EAAKJ,cAAc92B,IAAIC,GAAM,IAAF,OAAOA,EAAP,MAAiBk3B,OAAOD,IAG5DriC,EAfD,iBAeiBqiC,EAAUv9B,KAAK,KAfhC,iBAe6C,EAAKwvB,SAASsI,oBAAoBr1B,UAf/E,YAe4F06B,EAf5F,eAegH16B,EAfhH,cAgBgB,EAAK+sB,SAASyI,MAAM,CAACx1B,YAAUvH,QAhB/C,OAgBCrC,EAhBD,OAiBL,EAAKkhC,eAAej0B,OACN,MAAXjN,GACA,EAAK22B,SAASqK,wBAnBZ,8C,eCdKlxB,KAAXD,OAEO,MAAM+0B,WAAiBnoC,YAClCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAInB6wB,KAAQ5J,IACJzf,KAAKlI,SAAS,CAAE2nB,UALD,KAQnBghB,UAAY,IACD,gBAAC,KAAK9lC,KAAN,CAAWN,IAAI,QAClB,gBAAC,KAAKM,KAAK+lC,KAAX,CAAgB9mC,MAAM,OAAOO,YAAa6F,KAAKhI,MAAMynB,KAAKghB,UAAUxyB,MAAM0yB,SAV/D,KAenBC,YAAc,IACH,gBAAC,KAAKjmC,KAAN,CAAWN,IAAI,gBAClB,gBAAC,KAAKM,KAAK+lC,KAAX,CAAgB9mC,MAAM,eAAeO,YAAa6F,KAAKhI,MAAMynB,KAAKmhB,YAAY3yB,MAAM0yB,SAjBzE,KAsBnBE,WAAa,IACF7gC,KAAKhI,MAAMynB,KAAK1e,OAAOqI,IAAIC,GACvB,gBAAC,KAAK1O,KAAN,CAAWN,IAAKgP,EAAKhU,MACxB,gBAAC,KAAKsF,KAAK+lC,KAAX,CAAgB9mC,MAAOyP,EAAKhU,KAAM8E,YAAakP,EAAK4E,MAAM0yB,UAvBlE3gC,KAAKhI,MAAL,eAAiBQ,GA6BrBuR,SACI,OAAI/J,KAAKhI,MAAMynB,KACJ,gBAAC,KAAD,CACHlM,KAAK,QACL4G,OAAQ,+CAAmBna,KAAKhI,MAAMynB,KAAKtiB,MAAnC,WACR2jC,OAAQ,4BACRC,UAAQ,GAEP/gC,KAAKygC,YACLzgC,KAAK4gC,cACL5gC,KAAK6gC,cAGH,6B,MC3CXp1B,GAAWC,KAAXD,OAEO,MAAMu1B,WAAyB3oC,YAC1CqI,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAcnByoC,aAdmB,uCAcJ,WAAM9jC,GAAN,iBAAAjJ,EAAA,0DACPiJ,EADO,gCAEWiI,GAAc87B,gBAFzB,OAEDxrC,EAFC,OAGDvB,EAAOuB,EAAIG,QAAQuT,IAAKC,IACnB,CACHlM,MAAOkM,EAAKhP,IAAI+uB,MAChBlmB,KAAMmG,EAAKhP,IAAI+uB,MACfqX,UAAWp3B,EAAKqI,QAAQ,GACxBkvB,YAAav3B,EAAKqI,QAAQ,GAC1B3Q,OAAQsI,EAAKqI,QAAQoL,MAAM,EAAGzT,EAAKqI,QAAQvI,WAGnD,EAAKrR,SAAS,CAAE3D,SAZT,sBAcP,EAAK2D,SAAS,CAAE3D,KAAM,KAdf,2CAdI,2DA+BnBwpC,aAAexgC,IACX,MAAMgkC,EAAcnhC,KAAKhI,MAAM7D,KAAK0W,OAAOxB,GAAQA,EAAKlM,QAAUA,GAAO,GACzE6C,KAAKlI,SAAS,CAAEqpC,gBAChBnhC,KAAKohC,YAAY/X,KAAK8X,IAlCP,KAqCnBE,mBAAqB70B,IACjBxM,KAAKshC,kBAAoB90B,EAAI+L,OAAOpb,OAtCrB,KAyCnBokC,aAAe3b,IACX5lB,KAAKwhC,cAAgB5b,GA1CN,KA6CnB6b,cAAgBj1B,IACZxM,KAAK0hC,YAAcl1B,EAAI+L,OAAOpb,OA9Cf,KAiDnBwkC,YAAen1B,IACX,MAAMnX,EAAOmX,EAAI+L,OAAO4J,aAAa,QACrCniB,KAAK4hC,WAAWvsC,GAAQmX,EAAI+L,OAAOpb,OAnDpB,KAsDnB0kC,WAAcx4B,IACVrJ,KAAK4hC,WAAWv4B,EAAKhU,MAAQ2K,KAAK8hC,aACR,QAAtBz4B,EAAK4E,MAAM1J,OACJvE,KAAK8hC,aACF,IA1DC,KA6DnBC,aAAe,KACX,GAAG/hC,KAAKshC,kBACJ,MAAO,CACH3oB,MAAM3Y,KAAK8hC,aACXE,MAAMhiC,KAAKwhC,cACXS,cAAejiC,KAAKshC,kBACpB7H,WAAYz5B,KAAK0hC,aAGzB,MAAM3gC,EAAS,GACff,KAAKhI,MAAMmpC,YAAYpgC,OAAO2P,QAAQrH,IAClC,MAAMyX,EAAI9gB,KAAK4hC,WAAWv4B,EAAKhU,MAC3ByrB,IAC0B,QAAtBzX,EAAK4E,MAAM1J,OACXxD,EAAO8B,KAAK2c,GAAMqB,SAASC,IACL,UAAjBzX,EAAKuL,UAAwC,WAAjBvL,EAAKuL,SACtC7T,EAAO8B,KAAKie,GAGZ/f,EAAO8B,KAAP,WAAgBie,EAAhB,SAMZ,MAAO,CAACnI,MAFM3Y,KAAK8hC,aAELE,MAD+C,QAA/ChiC,KAAKhI,MAAMmpC,YAAYV,UAAUxyB,MAAMi0B,IAChCD,cAAc,GAAD,OAAKjiC,KAAKhI,MAAMmpC,YAAYhkC,MAA5B,YAAqC4D,EAAOgC,KAAK,KAAjD,KAA0D02B,WAAYz5B,KAAK0hC,cAtF9F,KAwFnBj5B,OAAS,KACLzI,KAAKlI,SAAS,CACVuC,IAAK8nC,KAAKC,SACVjuC,KAAM,GACNgJ,WAAO9D,EACPgpC,WAAW,EACXlB,iBAAa9nC,IAEjB2G,KAAKsiC,QAAU,IA9FftiC,KAAK8J,OAAStR,EAAMsR,OACpB9J,KAAK8hC,aAAetpC,EAAMspC,aAC1B9hC,KAAK4hC,WAAa,GAClB5hC,KAAKhI,MAAQ,CACT7D,KAAM,GACNgJ,WAAO9D,EACPgpC,WAAW,EACX5iB,KAAM,GACNplB,IAAK8nC,KAAKC,UAyFlBr4B,SACI,MAAM4oB,EAAU3yB,KAAKhI,MAAM7D,KAAKiV,IAAIm5B,GAAK,gBAAC,GAAD,CAAQloC,IAAKkoC,EAAEplC,OAAQolC,EAAEr/B,OAClE,OAAO,gBAAC,IAAD,CAAM9F,UAAU,aAAa/C,IAAK2F,KAAKhI,MAAMqC,KAChD,gBAAC,IAAKM,KAAN,KACI,gBAAC,KAAD,CACIsoB,YAAU,EACV9lB,MAAO6C,KAAKhI,MAAMmF,MAClBqlB,YAAa,kBACbggB,0BAA0B,EAC1BC,WAAW,EACX7nC,MAAO,CAAE4Q,MAAO,SAChB2X,cAAc,EACduf,SAAU1iC,KAAKihC,aACf11B,SAAUvL,KAAK29B,aACfgF,gBAAiB,sBAEhBhQ,IAIT,gBAAC,IAAKh4B,KAAN,KAAW,gBAAC,GAAD,CAAUsP,IAAMC,GAAOlK,KAAKohC,YAAcl3B,KAEjDlK,KAAKhI,MAAMmpC,YAAcnhC,KAAKhI,MAAMmpC,YAAYpgC,OAAOqI,IAAIC,GAChD,gBAAC,IAAK1O,KAAN,CAAWN,IAAKgP,EAAKhU,MAAM,gBAAC,IAAD,CAAOA,KAAMgU,EAAKhU,KAAMkW,SAAUvL,KAAK2hC,YAAapf,YAAalZ,EAAKhU,KAAMutC,aAAc5iC,KAAK6hC,WAAWx4B,OAE3I,4BAET,gBAAC,IAAK1O,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,oBAAoBhX,SAAUvL,KAAKqhC,mBAAoB7e,YAAY,MACjG,gBAAC,IAAK7nB,KAAN,CAAW4C,MAAM,mBAAkB,gBAAC,KAAD,CAASgO,SAAUvL,KAAKuhC,gBAC3D,gBAAC,IAAK5mC,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,gBAAgBhX,SAAUvL,KAAKyhC,cAAejf,YAAY,QChIhFrqB,IAAZD,QAGO,MAAM2qC,WAAmB9Q,GAAI15B,aAAiBs5B,KAAK8K,GAAgBsD,KAC9Er/B,YAAYlI,GACRqM,MAAMrM,GADS,KASnBsqC,qBAAwBzqB,IACpBrY,KAAK8hC,aAAezpB,EAAOM,MAC3B3Y,KAAKlI,SAAS,CAAEuqC,WAAW,KAXZ,KAcnB55B,OAAS,KACL,MACMs6B,EADS/iC,KAAKuyB,SAASJ,aAAasI,OAAO4C,OAC3Bj0B,IAAIC,IACf,CAAEsP,MAAOtP,EAAKhU,KAAM2tC,QAAS,GAAId,IAAK,MAE3CjxB,EAAS,CACXlH,OAAQ,CACJi5B,QAAS,CAAC7lC,EAAOkb,IACN,gBAAC,KAAD,CAAQhe,IAAKge,EAAOM,MAAOsqB,eAAgB5qB,EAAO6qB,SAAU33B,SAAWqa,IAC1E5lB,KAAKggC,mBAAmBpa,EAAQvN,GAChCA,EAAO6qB,SAAWtd,GACnBud,QAAS9qB,IAEhB6pB,IAAK,CAAC/kC,EAAOkb,IACF,gCACP,gBAAC,IAAD,CAAQhe,IAAKge,EAAOM,MAAO/d,MAAO,CAACoP,YAAY,QAASm5B,QAAS9qB,EAAQje,QAAS,KAC9E4F,KAAK8iC,qBAAqBzqB,KAD9B,mBAE2B,4BAAOA,EAAO+qB,MAAP,WAAmB/qB,EAAO+qB,KAA1B,MAAmC,OAIjFpjC,KAAKqjC,WAAW37B,OAAOq7B,EAAQ9xB,IAnChB,KA0CnBqyB,WAAa,KACXtjC,KAAKujC,oBAAoBzB,aAAe9hC,KAAK8hC,aAD9B,QAE8B9hC,KAAKujC,oBAAoBxB,eAA9DppB,EAFO,EAEPA,MAAOspB,EAFA,EAEAA,cAAexI,EAFf,EAEeA,WACfz5B,KAAKqjC,WAAWrrC,MAAM7D,KAAK0W,OAAOxB,GAAMA,EAAKsP,QAAUA,GAAO,GACtEyqB,KAAP,UAAiBnB,EAAjB,eAAqCxI,GACrCz5B,KAAKmgC,qBAAqB8B,EAAcxI,GACxCz5B,KAAKlI,SAAS,CAAEuqC,WAAW,IAC3BriC,KAAKujC,oBAAoB96B,UA/CvBzI,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQ,CAAEqqC,WAAW,GAC1BriC,KAAKkgC,cAAgB,GAErBlgC,KAAKqgC,UAAY,GAgCrB51B,oBACIzK,KAAKyI,SAaTsB,SACI,OAAO,2BACH,2BACI,gBAAC,KAAD,CACInQ,MAAK,6BAAwBoG,KAAK8hC,aAA7B,KACLjoC,QAASmG,KAAKhI,MAAMqqC,UACpBvoC,SAAU,KACNkG,KAAKlI,SAAS,CAAEuqC,WAAW,IAC3BriC,KAAKujC,oBAAoBzrC,SAAS,CAACuC,IAAI8nC,KAAKC,YAEhDroC,KACIiG,KAAKsjC,WAETrpC,WAAW,SACXuR,MAAM,MACN4G,OAAO,MACP,gBAAC,GAAD,CAAkBtI,OAAQ9J,KAAMiK,IAAMC,GAAKlK,KAAKujC,oBAAoBr5B,EAAI43B,aAAc9hC,KAAK8hC,gBAG/F,uBAAK1kC,UAAU,gBACZ,gBAAC,GAAD,CAAa0M,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WAAYJ,aAAcp8B,KAAKo8B,aAAcD,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAKlK,KAAK88B,eAAe5yB,EAAImyB,OAAQr8B,KAAKq8B,OAAQC,QAASt8B,KAAKs8B,QAAS1hC,MAAO,CAAC4e,aAAa,YAG7O,2BACI,gBAAC,GAAD,CAAe1P,OAAQ9J,KAAMiK,IAAKC,GAAMlK,KAAKqjC,WAAan5B,O,OCvF3D,MAAMs5B,WAAqBnrC,YACxCqI,YAAYlI,GACVqM,MAAMrM,GADW,KAKnBqlC,gBAAkB,IACT79B,KAAKyjC,QAAQrY,gBAJpBprB,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,GAKxB2I,IAAI3I,GASF,MAAO,CAAErE,KARYqE,EAAMslC,aAAa10B,IAAIC,IACnC,CACLzP,MAAOyP,EAAKhU,KACZgF,IAAKgP,EAAKhU,QAKCuoC,WAFI,IAKrBG,mBAAmBC,GAEbh+B,KAAKxH,MAAMslC,eAAiBE,EAAUF,cACxC99B,KAAKlI,SAAL,eAAmBkI,KAAKmB,IAAInB,KAAKxH,SAIrCuR,SACE,OAAO,gBAAC,IAAD,CAAM/S,SAAU,CAAEE,KAAM,GAAK+S,IAAMC,IAASlK,KAAKyjC,QAAUv5B,IAC/DlK,KAAKhI,MAAM7D,KAAKiV,IAAIC,GACZ,gBAAC,IAAK1O,KAAN,CAAWN,IAAKgP,EAAKhP,IAAKhF,KAAMgU,EAAKhP,IAAKkD,MAAO8L,EAAKhP,IAAK8C,MAAOkM,EAAKhP,KAC5E,gBAAC,IAAD,CAAOmoB,YAAa,gCC7Bf,MAAMkhB,WAAsBrrC,YACvCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAejB2I,IAAO3I,IAsBE,CAAE6pC,WAAW,EAAOluC,KArBZqE,EAAMslC,aAED10B,IAAIC,IACb,CAAEsP,MAAOtP,EAAKhU,KAAMoqB,KAAM,GAAIwiB,cAAe,GAAI,WAAc,MAkBzChxB,OAflB,CACXlH,OAAQ,CACJ0V,KAAM,CAACtiB,EAAOkb,IACH,gBAAC,IAAD,CAAQhe,IAAKge,EAAOM,MAAOwqB,QAAS9qB,EAAQje,QAAS,KACxD4F,KAAK8iC,qBAAqBzqB,KADvB,mBAIX4pB,cAAe,CAAC9kC,EAAOkb,IACZlb,EAEXs8B,WAAY,CAACt8B,EAAOkb,IACTlb,MAjCJ,KAwCnB2lC,qBAAwBzqB,IACpBrY,KAAK8hC,aAAezpB,EAAOM,MAC3B3Y,KAAKlI,SAAS,CAAEuqC,WAAW,KA1CZ,KA6CnB55B,OAAS,KACLzI,KAAKqjC,WAAW37B,OAAO1H,KAAKhI,MAAM7D,KAAM6L,KAAKhI,MAAMiZ,SA9CpC,KAqDnBqyB,WAAa,KACTtjC,KAAKujC,oBAAoBzB,aAAe9hC,KAAK8hC,aAD9B,QAEoC9hC,KAAKujC,oBAAoBxB,eAApEppB,EAFO,EAEPA,MAAOspB,EAFA,EAEAA,cAAexI,EAFf,EAEeA,WAAWuI,EAF1B,EAE0BA,MACzC,IAAIvI,EAED,YADAz5B,KAAKlI,SAAS,CAAC,MAAQ,+BAG1B,MAAM3D,EAAO6L,KAAKhI,MAAM7D,KAAKiV,IAAIC,GACzBA,EAAKsP,QAAUA,EACR,CAAEA,QAAO8G,KAAM,GAAIwiB,gBAAexI,aAAWuI,SAEjD34B,GAEXrJ,KAAKlI,SAAS,CAAEuqC,WAAW,EAAOluC,OAAKuH,WAAMrC,GAAa,KAAQ2G,KAAKyI,WACvEzI,KAAKujC,oBAAoB96B,UAnEV,KAsEnBo1B,gBAAkB,IACP79B,KAAKhI,MAAM7D,KAvEH,KA0EnB4V,OAAS,IACE,2BAEH,gBAAC,KAAD,CACInQ,MAAK,6BAAwBoG,KAAK8hC,aAA7B,KACLjoC,QAASmG,KAAKhI,MAAMqqC,UACpBvoC,SAAU,KACNkG,KAAKujC,oBAAoB96B,SACzBzI,KAAKlI,SAAS,CAAEuqC,WAAW,EAAM3mC,WAAMrC,KAE3CU,KACIiG,KAAKsjC,WAETrpC,WAAW,SACXuR,MAAM,MACN4G,OAAO,MACNpS,KAAKhI,MAAM0D,OAAS,gBAAC,GAAD,CAAUkB,QAASoD,KAAKhI,MAAM0D,QACnD,gBAAC,GAAD,CAAkBoO,OAAQ9J,KAAMiK,IAAMC,GAAOlK,KAAKujC,oBAAsBr5B,EAAI43B,aAAc9hC,KAAK8hC,gBAEnG,gBAAC,GAAD,CAAe73B,IAAKC,GAAMlK,KAAKqjC,WAAan5B,KA3FhDlK,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,GAG1BulC,mBAAmBC,GAEXh+B,KAAKxH,MAAMslC,eAAiBE,EAAUF,cACxC99B,KAAKlI,SAAL,eAAmBkI,KAAKmB,IAAInB,KAAKxH,QAAS,KACxCwH,KAAKyI,WAuCbgC,oBACIzK,KAAKyI,UCvDN,MAAMk7B,GAAsBjS,GAAc,cAAcA,EAAa,eAAD,iCACvEkS,cADuE,sBACvD,gCAAA1vC,EAAA,yDACZ,EAAK4oC,eAAep0B,QAIC,KAHf20B,EAAS,EAAKwG,gBAAgBhG,kBAAkBz0B,IAAIC,GAChD,IAAN,OAAYA,EAAZ,OAEMF,OALE,uBAMR,EAAKopB,SAASuR,SAAS,2BACvB,EAAKhH,eAAej0B,OAPZ,iCAUNrD,EAAYga,GAAMK,mBAElB5hB,EAZM,iBAYUo/B,EAAOt6B,KAAK,KAZtB,iBAYmC,EAAKwvB,SAASsI,oBAAoBr1B,UAZrE,eAYqFA,EAZrF,eAaN,EAAK+sB,SAASyI,MAAM,CAACx1B,YAAUvH,QAbzB,QAcZ,EAAK6+B,eAAej0B,OACpB,EAAK0pB,SAASqK,wBAfF,4CADuD,KAmBtEmH,YAnBsE,sBAmBxD,oCAAA7vC,EAAA,yDACV,EAAK4oC,eAAep0B,QAEC,KADf20B,EAAS,EAAK2G,iBAAiBnG,mBAC3B10B,OAHA,uBAIN,EAAKopB,SAASiI,cAAc,0BAC5B,EAAKsC,eAAej0B,OALd,iCASNo7B,EAAc5G,EAAOxyB,OAAOxB,GAAMA,EAAK24B,OAAO74B,OAAS,EACvDm3B,EAAY,GAUbA,EARC2D,EAQW5G,EAAOxyB,OAAOxB,GAAMA,EAAK24B,OAAO54B,IAAIC,GAAM,GAAF,OAAKA,EAAI,cAAT,gBAAmCA,EAAI,WAAvC,MAPxCg0B,EAAOj0B,IAAIC,GAChBA,EAAI,cACG,GAAN,OAAUA,EAAI,cAAd,gBAAwCA,EAAI,WAA5C,KACG,WAAYA,EAAI,MAAhB,iBAAoCA,EAAI,MAAxC,MASR7D,EAAYga,GAAMK,mBAClB5hB,EA1BI,iBA0BYqiC,EAAUv9B,KAAK,KA1B3B,iBA0BwC,EAAKwvB,SAASsI,oBAAoBr1B,UA1B1E,eA0B0FA,EA1B1F,eA2BJ,EAAK+sB,SAASyI,MAAM,CAACx1B,YAAUvH,QA3B3B,QA4BV,EAAK6+B,eAAej0B,OACpB,EAAK0pB,SAASqK,wBA7BJ,4CAnBwD,KAmDrEsH,cAnDqE,sBAmDrD,oCAAAhwC,EAAA,yDACb,EAAK4oC,eAAep0B,QACd20B,EAAS,EAAK8G,gBAAgBtG,kBAC9BuG,EAAgB,EAAK7R,SAASJ,aAAasI,OAAO4C,OAAOj0B,IAAIC,GAAM,IAAF,OAAOA,EAAKhU,KAAZ,MAElD,IAAlBgoC,EAAOl0B,OALG,uBAMT,EAAKopB,SAASiI,cAAc,0BAC5B,EAAKsC,eAAej0B,OAPX,iCAUPy3B,EAAYp+B,OAAOkP,KAAKisB,GAAQj0B,IAAIC,GAChC,IAAN,OAAYA,EAAZ,iBAA2Bg0B,EAAOh0B,GAAlC,MAKE7D,EAAYga,GAAMK,mBAClB5hB,EAjBO,iBAiBSmmC,EAAc7D,OAAOD,GAAWv9B,KAAK,KAjB9C,iBAiB2D,EAAKwvB,SAASsI,oBAAoBr1B,UAjB7F,eAiB6GA,EAjB7G,eAkBP,EAAK+sB,SAASyI,MAAM,CAACx1B,YAAUvH,QAlBxB,QAmBb,EAAK6+B,eAAej0B,OACpB,EAAK0pB,SAASqK,wBApBD,8C,GClD0D7oC,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,iBAAAC,EAAA,6DAC/FmpC,EAASppC,EAAOE,KAAKkpC,OACrBgH,EAAgBpwC,EAAOsD,QAAQ8sC,cAAcx5B,OAAOxB,GAAQg0B,IAAWh0B,EAAKsP,OAFmB,kBAG9F,CACHxkB,KAAM,CACFkwC,mBAL6F,2CAAzB,uDAAxDC,G,GAATjwC,QAA2CkwC,G,GAARtwC,O,GCCwBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DACzFmwC,EAAgBpwC,EAAOE,KAAKkpC,OAAOj0B,IAAIuP,IAClC,CAACA,WAFmF,kBAKxF,CACHxkB,KAAM,CACFkwC,mBAPuF,2CAAzB,uDAAlDG,G,GAATnwC,QAAwCowC,G,GAARxwC,OC4ChCywC,OA7Cf,MACK,aAAmBzwC,EAAQ0wC,EAAeC,GAAS,OAAD,6HAClB3wC,EAAOE,KAA5Bo+B,EADuC,EACvCA,SAAUj1B,EAD6B,EAC7BA,OACVunC,EAA+B5wC,EAAOsD,QAAtCstC,6BACFhpC,EAAM8oC,EAAcrnC,IAHqB,uBAK3CunC,EAA2B,CACvB5sC,KAAM,WACN9D,KAAM,CACFqS,SAAS,KAR0B,kBAWpC,CACHrS,KAAK,2BACEF,EAAOE,MADV,IAEAuH,MAAOG,EACP2K,SAAS,MAf0B,gBAoBpBo+B,EAAOrS,EAAUj1B,GAApCkI,EApBuC,EAoBvCA,UAAWvH,EApB4B,EAoB5BA,IApB4B,SAsB1Bs0B,EAASyI,MAAM,CAChCx1B,YACAvH,QAxB2C,cA0BhC,MA1BgC,QA2B3Cs0B,EAASqK,wBAEbiI,EAA2B,CACvB5sC,KAAM,WACN9D,KAAM,CACFqS,SAAS,KAhC8B,kBAmCxC,CACHrS,KAAK,2BACEF,EAAOE,MADV,IAEAqS,SAAS,MAtC8B,gD,SCCMzS,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EAC3EwwC,GAAiB1J,MAAM/mC,EACzBqJ,IACG,GAAmC,IAA/B4E,OAAOkP,KAAK9T,GAAQ6L,OACpB,MAAO,iDAKf,CAACopB,EAAUj1B,KACP,MAAMkI,EAAYga,GAAMK,mBAClBilB,EAAgB5iC,OAAOkP,KAAK9T,GAAQ8L,IAAI/O,GACpC,QAAN,OAAemlB,GAAMqB,SAASxmB,GAA9B,eAAyCiD,EAAOjD,GAAhD,gBAA4DmlB,GAAMqB,SAASxmB,KAGzEimC,EAAYp+B,OAAOkP,KAAK9T,GAExBynC,EADSxS,EAASJ,aAAasI,OAAO4C,OACfxyB,OAAOxB,IACxBi3B,EAAUpoB,SAAS7O,EAAKhU,OACjC+T,IAAIC,GACImW,GAAMqB,SAASxX,EAAKhU,OAGzB2vC,EAAaF,EAAcvE,OAAOwE,GAAgBhiC,KAAK,KAI7D,MAAO,CAAEyC,YAAWvH,IAFX,iBAAa+mC,EAAb,iBAA+BzS,EAASsI,oBAAoBr1B,UAA5D,wCACJA,EADI,SAzBiE,2CAAzB,uDAAvCy/B,G,GAAR5wC,QAAiC6wC,G,GAAPjxC,OCCxC,MAAMkxC,OACKC,UAAY,WADjBD,GAEKE,aAAe,cAE1B,MAAMC,GAAkB,2BACjB9a,IADiB,IAEpB,CAAC2a,GAAsBC,WAAYZ,GACnC,CAACW,GAAsBE,cAAef,GACtCtJ,MAAOiK,KAELM,GAAiB,2BAChB9a,IADgB,IAEnB,CAAC0a,GAAsBC,WAAYX,GACnC,CAACU,GAAsBE,cAAed,GACtCvJ,MAAOkK,KAGX,SAASM,GAAkBxtC,EAAO/D,GAClC,OAAOsxC,GAAkBtxC,EAAOgE,MAAMD,EAAO/D,EAAOE,M,SCrBiBJ,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DACnFq+B,EAAYt+B,EAAOE,KAAnBo+B,SADmF,SAEpFA,EAASuI,WAF2E,gCAGnF,CACH3mC,KAAMF,EAAOE,OAJyE,2CAAzB,uDAA/CsxC,G,GAARpxC,QAAqCqxC,G,GAAPzxC,O,GCAiBF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,qBAAAC,EAAA,yDAC3Eq+B,EAAYt+B,EAAOE,KAAnBo+B,SAD2E,EAEvCt+B,EAAOsD,QAA3CouC,EAF2E,EAE3EA,mBAAmBC,EAFwD,EAExDA,cAFwD,yCAGxD,CACtBzxC,KAAK,CAACuH,MAAM,4BAJkE,uBAM5E62B,EAAS+I,KAAKsK,EAAcD,GANgD,cAOlFpT,EAASsK,uBAPyE,kBAQ3E,CACH1oC,KAAK,2BAAKF,EAAOE,MAAb,IAAkBqS,SAAQ,MATgD,2CAAzB,uDAAvCq/B,G,GAARxxC,QAAiCyxC,G,GAAP7xC,OCGxC,MAAM8xC,GAA4B,CAC9BjuC,SAAU1D,wBACV0mC,SAAU2K,GACVnK,KAAMuK,IAGV,SAASG,GAAyBhuC,EAAO/D,GACrC,OAAQA,EAAOgE,MACX,IAAK,WACD,OAAO3D,yBAAe0D,EAAO/D,EAAOE,MACxC,IAAK,WACD,OAAOuxC,GAAe1tC,EAAO/D,EAAOE,MACxC,IAAK,OACD,OAAO2xC,GAAW9tC,EAAO/D,EAAOE,MACpC,QACI,OAAO6D,GCXnB,MAAM8E,GAAY,CACdo/B,aAAa,EACbyJ,oBAAoB,EACpBn/B,SAAS,EACTo/B,mBAAevsC,EACfqC,WAAOrC,GAGL4sC,GAA2B5tC,IAAMC,gBAEvC,SAAS4tC,GAAkB1tC,GAEvB,MAAM+5B,EAAW/5B,EAAM+5B,UAAY2E,GAAiB3E,SACjC4T,EAAoBttC,qBAAWL,EAAM4tC,SAAhDxtC,UAHsB,EAIHsE,0BAAgB8oC,GAA0BlpC,GAAWipC,IAJlD,mBAIvB/tC,EAJuB,KAIhBY,EAJgB,KAKtBsjC,EAAmDlkC,EAAnDkkC,YAAiC11B,GAAkBxO,EAAtC2tC,mBAAsC3tC,EAAlBwO,SAAQ9K,EAAU1D,EAAV0D,MACjD,OACI,kBAACuqC,GAAyBtsC,SAA1B,CAAmCwD,MAAO,CAAEvE,cAEpC8C,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAEhC,kBAAC,KAAD,CAAO9B,MAAO,OACVC,QAASqiC,EACTpiC,SACI,KACIlB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAE+nC,aAAa,MAIjCniC,KAAM,KACFnB,EAAU,CACNX,KAAM,OACN9D,KAAM,CACF+nC,aAAa,EACb3J,eAIZt4B,WAAW,SACXuR,MAAM,MACN4G,OAAO,MACP,kBAAC,IAAD,CAAMhV,UAAU,cACZ,kBAAC,IAAKzC,KAAN,KAAW,kBAAC,IAAD,CAAO4nB,YAAY,YAAYhX,SAAWpO,IACjDvE,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEyxC,cAAezoC,EAAMob,OAAOpb,UAEzCqlB,YAAY,MACf,kBAAC,IAAK7nB,KAAN,CAAW4C,MAAM,mCAAkC,kBAAC,KAAD,CAAQgO,SACtDqa,IACGhtB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEwxC,mBAAoB/f,WAMhD,kBAAC,IAAD,CAAQpf,QAASA,EAASvO,KAAK,UAAUmC,QACrC,KACIxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACFqS,SAAS,KAGjB2/B,EAAgB,CACZluC,KAAM,WACN9D,KAAM,CAAE0wC,2BAA4BjsC,EAAUytC,WAAW7mB,GAAMO,kBAV3E,SAcA,kBAAC,IAAD,CAAS9nB,KAAK,aACd,kBAAC,IAAD,CAAQskC,SAAU/1B,EAASpM,QAAS,KAChCxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CACF+nC,aAAa,OAJzB,WAQA,kBAAC,IAAD,CAASjkC,KAAK,aACd,kBAAC,IAAD,CAAQskC,SAAU/1B,EAASpM,QAAS,KAChCxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAErB5N,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAEo+B,WAAU/rB,SAAS,OAPnC,a,MCvFJiF,GAAWC,KAAXD,OAGF3O,GAAY,CACdpB,WAAOrC,EAEPwrC,gCAA4BxrC,EAC5BgrC,cAAc,IAGZiC,GAAoBjuC,IAAMC,gBAEhC,SAASiuC,GAAW/tC,GAAQ,MACjB+5B,EAAY/5B,EAAZ+5B,SADgB,EAERjD,IAAKC,UAAbrE,EAFgB,oBAGjBmS,EAAS9K,EAASJ,aAAasI,OAAO4C,OAHrB,EAIIngC,0BAAgBsoC,GAAmB1oC,GAAWwoC,IAJlD,mBAIhBttC,EAJgB,KAITY,EAJS,KAKfyrC,EAAmDrsC,EAAnDqsC,cAAe3oC,EAAoC1D,EAApC0D,MAAMmpC,EAA8B7sC,EAA9B6sC,2BACvBtkB,EAAW8c,EAAOj0B,IAAIC,GACjB,kBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,MAAOgU,EAAKhU,OASzC,OANAqE,oBAAU,KACHmrC,GACC3Z,EAAKsb,UAEX,CAAC3B,IAGC,kBAACyB,GAAkB3sC,SAAnB,CAA4BwD,MAAO,CAAEvE,cACjC,yBAAKgC,MAAO,CAAE6rC,UAAW,OAAQ,MAAS,UAElC/qC,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAEhC,kBAAC,IAAD,CAAMwvB,KAAMA,EAAM7tB,SAAWC,IACzB1E,EAAU,CACNX,KAAM,QACN9D,KAAM,CACFo+B,WACAj1B,aAGTF,UAAU,cACT,kBAAC,IAAKzC,KAAN,KACI,kBAACurC,GAAD,CAAmBE,QAASE,GAAmB/T,SAAUA,KAE7D,kBAAC,IAAK53B,KAAN,CAAW4C,MAAM,iBACb,kBAAC,KAAD,CACI7C,KAAK,WACLgsC,WAAYvpC,IACRvE,EAAU,CACNX,KAAMktC,GAAsBE,aAC5BlxC,KAAM,CAAEkpC,OAAQlgC,MAGxBoO,SAAWpO,IACPvE,EAAU,CACNX,KAAMktC,GAAsBC,UAC5BjxC,KAAM,CAAEkpC,OAAQlgC,OAIvBojB,IAIR8jB,EAAcj7B,IAAIC,GACR,kBAAC,IAAK1O,KAAN,CAAWN,IAAKgP,EAAKsP,MAAOpb,MAAK,eAAU8L,EAAKsP,MAAf,OAA2BtjB,KAAMgU,EAAKsP,OAC1E,kBAAC,KAAD,KACI,kBAAC,KAAOlN,OAAR,CAAetO,MAAM,OAArB,OACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,QAArB,QACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,UAArB,UACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,UAArB,gBC9EhC,MAAMwpC,OACKvB,UAAY,WADjBuB,GAEKtB,aAAe,cAFpBsB,GAGKC,MAAQ,QAHbD,GAIK7uC,SAAW,W,oBCCd2T,GAAWC,KAAXD,OAGR,SAASo7B,GAAaruC,GAAQ,MAAD,EACV82B,IAAKC,UAAbrE,EADkB,oBAElBkb,EAAoB5tC,EAApB4tC,QAAQU,EAAYtuC,EAAZsuC,SACRluC,EAAaC,qBAAWutC,GAAxBxtC,UAIP,OAHAc,oBAAU,KACNlB,EAAMuuC,MAAMlkC,KAAKqoB,IACnB,IAEE,kBAAC,IAAD,CAAM8b,OAAO,SAAS9b,KAAMA,EAAMtwB,MAAO,CAAC4e,aAAa,SACvD,kBAAC,IAAK7e,KAAN,KACI,kBAAC,IAAD,CAAQ6jC,QAAM,EAAC1jC,KAAM,kBAACmsC,GAAA,EAAD,MAAmB7sC,QAAS,KAC7CxB,EAAU,CACNX,KAAM0uC,GAAkBtB,aACxBlxC,KAAM,CAAC+2B,cAInB,kBAAC,IAAKvwB,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,QAAS3F,KAAM,OAAQuF,MAAO,CAAE4Q,MAAO,UAC1E,kBAAC,KAAD,KACKs7B,EAAS19B,IAAIC,GAAQ,kBAAC,GAAD,CAAQhP,IAAKgP,GAAOA,MAGlD,kBAAC,IAAK1O,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,OAAQ3F,KAAM,SAAUuF,MAAO,CAAE4Q,MAAO,UAC3E,kBAAC,IAAD,Q,SCzByDzX,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,qBAAAC,EAAA,+DACvDD,EAAOsD,QAAnC2vC,EADmF,EACnFA,UAAUJ,EADyE,EACzEA,SAASC,EADgE,EAChEA,MAC1BG,EAAUrkC,KAAK,kBAACgkC,GAAD,CAAcxsC,IAAKmlB,GAAMO,aAAcqmB,QAASe,GAAmBL,SAAUA,EAAUC,MAAOA,KAFnB,kBAGnF,CACH5yC,KAAM,CACF+yC,eALkF,2CAAzB,uDAA/C1C,G,GAARnwC,QAAqCowC,G,GAAPxwC,O,GCJoCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,uBAAAC,EAAA,6DAC7Fg3B,EAASj3B,EAAOE,KAAhB+2B,KAD6F,EAExEj3B,EAAOsD,QAA5BwvC,EAF6F,EAE7FA,MAAOG,EAFsF,EAEtFA,UACTE,EAAaL,EAAMjlB,QAAQoJ,GACjC6b,EAAMM,OAAOD,EAAY,GACzBF,EAAUG,OAAOD,EAAY,GALwE,kBAM9F,CACHjzC,KAAM,CACF4yC,QACAG,eAT6F,2CAAzB,uDAAxD5C,G,GAATjwC,QAA2CkwC,G,GAARtwC,O,GCGiCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EACjGwwC,GAAiB1J,MAAM/mC,EACzBqJ,IAAY,MACFgqC,EAA2BhqC,EAA3BgqC,WACP,IADkChqC,EAAhBiqC,cACyB,IAAtBD,EAAWn+B,OAC5B,MAAO,4CAIf,CAACopB,EAAUj1B,KACP,MAAMkI,EAAYga,GAAMK,mBAEjBynB,EAA2BhqC,EAA3BgqC,WAAWC,EAAgBjqC,EAAhBiqC,aACZC,EAAUF,EAAWl+B,IAAIC,GACrB,mBAAN,OAA0BmW,GAAMqB,SAAS0mB,GAAzC,aAA2Dl+B,EAAK3S,KAAhE,iBAA6E8oB,GAAMqB,SAASxX,EAAK9E,UAClGxB,KAAK,KAIR,MAAO,CAAEyC,YAAWvH,IAFX,mBAAeupC,EAAf,iBAA+BjV,EAASsI,oBAAoBr1B,UAA5D,wCACJA,EADI,SAjBuF,2CAAzB,uDAA7DiiC,G,GAARpzC,QAA4CqzC,G,GAAPzzC,OCKnD,MAAM0zC,GAAkB,2BACjBnd,IADiB,IAEpB,CAACmc,GAAkBvB,WAAYZ,GAC/B,CAACmC,GAAkBtB,cAAef,GAClC,CAACqC,GAAkBC,OAAQa,KAEzBG,GAAiB,2BAChBnd,IADgB,IAEnB,CAACkc,GAAkBvB,WAAYX,GAC/B,CAACkC,GAAkBtB,cAAed,GAClC,CAACoC,GAAkBC,OAAQc,KAG/B,SAASG,GAAkB7vC,EAAO/D,GAClC,OAAO2zC,GAAkB3zC,EAAOgE,MAAMD,EAAO/D,EAAOE,M,oBCZ5CsX,GAAWC,KAAXD,OAGF3O,GAAY,CACdpB,WAAOrC,EAEPwrC,gCAA4BxrC,EAC5BkuC,kBAAcluC,EACdytC,SAAU,GACVC,MAAO,GACPG,UAAW,IAGTC,GAAoB9uC,IAAMC,gBAEhC,SAASwvC,GAAWtvC,GAChB,MAAM+5B,EAAW2E,GAAiB3E,SADX,EAERjD,IAAKC,UAAbrE,EAFgB,oBAGjBmS,EAAS9K,EAASJ,aAAasI,OAAO4C,OACtClpC,EAAOo+B,EAASJ,aAAah+B,KAAK2oB,MAAM,EAAG,IAJ1B,EAMI5f,0BAAgB2qC,GAAmB/qC,GAAW6qC,IANlD,mBAMhB3vC,EANgB,KAMTY,EANS,KAOf2uC,EAMJvvC,EANIuvC,aAEJ7rC,GAIA1D,EALA8uC,SAKA9uC,EAJA0D,OACAmpC,EAGA7sC,EAHA6sC,2BACAkC,EAEA/uC,EAFA+uC,MACAG,EACAlvC,EADAkvC,UAEE3mB,EAAW8c,EAAOj0B,IAAIC,GACjB,kBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,MAAOgU,EAAKhU,OAGzCqE,oBAAU,KACN,GAAI6tC,EAAc,CACd3uC,EAAU,CACNX,KAAM0uC,GAAkB7uC,SACxB3D,KAAK,CACD+yC,UAAU,GACVH,MAAO,MAIf,MAAMnjB,EAAO,IAAI3C,IACX8mB,EAAW5zC,EAAKiV,IAAIC,IACtB,IACI,OAAO/S,KAAKO,MAAMwS,EAAKk+B,IAC1B,MAAMzwC,GACH,UAEL+T,OAAOxB,QAAiBhQ,IAATgQ,IACI,kBAAVA,GAAuC,iBAAVA,IAEzC7J,QAAQC,IAAIsoC,GAEZA,EAASr3B,QAAQs3B,IACbxoB,GAAMI,QAAQ,IAAKooB,EAAM3tC,IACrBupB,EAAKlF,IAAIrkB,OAIjBzB,EAAU,CACNX,KAAM0uC,GAAkB7uC,SACxB3D,KAAM,CAAE2yC,SAAU,IAAIljB,QAG/B,CAAC2jB,IAEJ7tC,oBAAU,KACFmrC,GACA3Z,EAAKsb,UAEV,CAAC3B,IAEU5W,sBAAY,EAAEsE,WAASj1B,SAAOypC,YACvCvnC,QAAQC,IAAInC,GACZkC,QAAQC,IAAIsnC,EAAM39B,IAAIC,GACXA,EAAK2rB,mBAEhB6P,EAA2BjsC,UAAU,CACjCX,KAAK,WACL9D,KAAK,CAACqS,SAAQ,MAErB,CAACq+B,IAEH,OACI,kBAACsC,GAAkBxtC,SAAnB,CAA4BwD,MAAO,CAAEvE,cACjC,yBAAKgC,MAAO,CAAE6rC,UAAW,OAAQ,MAAS,UAElC/qC,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAEhC,kBAAC,IAAD,CAAMwvB,KAAMA,EAAM7tB,SAAWC,IACzB,MAAMgqC,EAAaP,EAAM39B,IAAIC,GAAMA,EAAK2rB,kBACxCp8B,EAAU,CACNX,KAAM,QACN9D,KAAM,CACFo+B,WACAj1B,OAAQ,CAACgqC,aAAWC,oBAG7BnqC,UAAU,cACT,kBAAC,IAAKzC,KAAN,KACI,kBAACurC,GAAD,CAAmBE,QAASe,GAAmB5U,SAAUA,KAE7D,kBAAC,IAAK53B,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,sBAAuBJ,MAAO,CAAE4Q,MAAO,UAC1E,kBAAC,KAAD,CACID,SAAWpO,IACPvE,EAAU,CACNX,KAAM0uC,GAAkB7uC,SACxB3D,KAAM,CAAEozC,aAAcpqC,OAI7BojB,KAKTgnB,GAAgB,kBAAC,IAAD,CAAM3tC,MAAO,kBAAC,IAAD,CAAQkB,KAAM,kBAACmtC,GAAA,EAAD,MAAkB7tC,QAAS,KAClExB,EAAU,CACNX,KAAM0uC,GAAkBvB,UACxBjxC,KAAM,SAIN+yC,K,MC3HpBvtB,GAAYC,KAAZD,QAEO,MAAMuuB,WAAuBnW,GAAI15B,aAAiBs5B,KAAK8K,GAAgBkH,KAClFjjC,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAIjCxoB,SACI,OAAQ,uBAAK3M,UAAW,gBAChB,gBAAC,KAAD,CAAMgd,iBAAiB,IAAIhd,UAAW,gBAClC,gBAAC,GAAD,CAASkd,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,mBAAoBX,IAAI,KAC3D,gBAAC,GAAD,CAAayP,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WAAYJ,aAAcp8B,KAAKo8B,aAAcD,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAKlK,KAAK88B,eAAe5yB,EAAImyB,OAAQr8B,KAAKq8B,OAAQC,QAASt8B,KAAK4jC,cAAehpC,MAAO,CAAC4e,aAAa,UACxO,gBAAC,GAAD,CAAcskB,aAAc99B,KAAKuyB,SAASJ,aAAasI,OAAO4C,OAAQpzB,IAAMC,GAAKlK,KAAK6jC,gBAAgB35B,EAAIJ,OAAQ9J,QAEtH,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,mBAAoBX,IAAI,KAC3D,gBAAC,GAAD,CAAayP,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WAAaJ,aAAcp8B,KAAKo8B,aAAcD,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAKlK,KAAK88B,eAAe5yB,EAAImyB,OAAQr8B,KAAKq8B,OAAQC,QAASt8B,KAAKkkC,cAAetpC,MAAO,CAAC4e,aAAa,UACzO,gBAAC,GAAD,CAAcskB,aAAc99B,KAAKuyB,SAASJ,aAAasI,OAAO4C,OAAQpzB,IAAMC,GAAKlK,KAAKmkC,gBAAgBj6B,EAAIJ,OAAQ9J,QAEtH,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,sBAAuBX,IAAI,KAC3D,gBAAC,GAAD,CAAayP,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WAAaJ,aAAcp8B,KAAKo8B,aAAcD,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAKlK,KAAK88B,eAAe5yB,EAAImyB,OAAQr8B,KAAKq8B,OAAQC,QAASt8B,KAAK+jC,YAAanpC,MAAO,CAAC4e,aAAa,UAC3O,gBAAC,GAAD,CAAgBskB,aAAc99B,KAAKuyB,SAASJ,aAAasI,OAAO4C,OAAQpzB,IAAMC,GAAKlK,KAAKgkC,iBAAiB95B,EAAIJ,OAAQ9J,QAExH,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,sBAAuBX,IAAI,KAC3D,gBAACksC,GAAD,CAAYhU,SAAUvyB,KAAKuyB,YAE9B,gBAAC,GAAD,CAASjY,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,gBAAiBX,IAAI,KACrD,gBAACytC,GAAD,UCrCvB,MAAMK,GAAkB,CACpBC,MAAO,IACPC,UAAW,KACXC,GAAI,KACJC,SAAU,WACVC,YAAa,aACbC,UAAW,WACXC,KAAM,OACNC,QAAS,UACTC,YAAa,cACbC,SAAU,WACVC,aAAc,gBA0DlB,SAASC,GAAgBvwC,GAAQ,MACrB6f,EAAqB7f,EAArB6f,OAAQka,EAAa/5B,EAAb+5B,SADY,EAEEx5B,wBAASM,GAFX,mBAErB2vC,EAFqB,KAEZC,EAFY,KAGVtwB,GAAUN,EAApBzD,SAAoByD,EAAVM,OAHU,EAIU5f,mBAAS,IAJnB,mBAIrBmwC,EAJqB,KAIRC,EAJQ,OAKwBpwC,oBAAS,GALjC,mBAKrBqwC,EALqB,KAKDC,EALC,OAMb/Z,IAAKC,UAAbrE,EANqB,oBAO5B1yB,EAAMuuC,MAAMpuB,GAASuS,EAErB,MAAMloB,EAAK,uCAAG,4BAAA9O,EAAA,yDACiB,IAAvBg1C,EAAY//B,QAA4B,OAAZ6/B,EADtB,uBAENK,GAAsB,GAFhB,SAIa9W,EAAS4I,qBAAT,0BAAiD3b,GAAMqB,SAASlI,GAAhE,wCACZ4Z,EAASsI,oBAAoBr1B,UADjB,6BAEdga,GAAMK,mBAFQ,KAEc,CAACypB,WAAY,IAAMrmC,QAAS,MANvD,OAQa,OAJbvN,EAJA,QAQEkG,QACJutC,EAAezzC,EAAIG,QAAQ1B,MAE/Bk1C,GAAsB,GAXhB,2CAAH,qDAeX3vC,oBAAU,KACNsJ,KACD,CAACgmC,IA0DJ,OAlCW,kBAAC,IAAD,CAAM9d,KAAMA,EAAM8b,OAAQ,UAC7B,kBAAC,IAAKrsC,KAAN,CAAWtF,KAAK,UAAU2jC,aAAc3gB,EAAO2wB,SAC3C,kBAAC,KAAD,CAAQhQ,aAAc,IAClBztB,SAAWpO,IACP8rC,EAAW9rC,GACXkb,EAAO2wB,QAAU7rC,GAErBqlB,YAAY,UAAU5nB,MAAO,CAAC4Q,MAAM,UACpC,kBAAC,KAAOC,OAAR,CAAetO,MAAM,KAArB,KACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,KAAK,KAC1B,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,KAAK,KAC1B,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,MAAM,MAC3B,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,MAAM,MAC3B,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,MAAM,MAC3B,kBAAC,KAAOsO,OAAR,CAAetO,MAAOgrC,GAAgBO,MAAO,QAC7C,kBAAC,KAAOj9B,OAAR,CAAetO,MAAOgrC,GAAgBK,aAAc,cACpD,kBAAC,KAAO/8B,OAAR,CAAetO,MAAOgrC,GAAgBM,WAAY,YAClD,kBAAC,KAAOh9B,OAAR,CAAetO,MAAOgrC,GAAgBG,IAAK,MAC3C,kBAAC,KAAO78B,OAAR,CAAetO,MAAOgrC,GAAgBQ,SAAU,WAChD,kBAAC,KAAOl9B,OAAR,CAAetO,MAAOgrC,GAAgBS,aAAc,eACpD,kBAAC,KAAOn9B,OAAR,CAAetO,MAAOgrC,GAAgBU,UAAW,YACjD,kBAAC,KAAOp9B,OAAR,CAAetO,MAAOgrC,GAAgBW,cAAe,kBAG7D,kBAAC,IAAKnuC,KAAN,CAAWtF,KAAK,YAAY2jC,aAAc3gB,EAAOpI,UAAW1E,SAAWpO,IAE/Dkb,EAAOpI,UADS,kBAAV9S,EACaA,EAAMob,OAAOpb,MACXA,IAjDnB,MACd,OAAQ6rC,GACJ,KAAKb,GAAgBQ,QAErB,KAAKR,GAAgBS,YACjB,OAAO,qCACX,KAAKT,GAAgBG,GACjB,OAAO,kBAAC,KAAD,CAAQ9hC,QAAS4iC,EAAoB1uC,KAAK,OAAOE,MAAO,CAAE4Q,MAAO,UACnE09B,EAAY9/B,IAAIC,GACN,kBAAC,KAAOoC,OAAR,CAAepR,IAAKgP,EAAKhU,KAAM8H,MAAOkM,EAAKhU,MAAOgU,EAAKhU,QAI1E,KAAK8yC,GAAgBO,KACjB,OAAO,oCAAE,kBAAC,IAAD,MAAQ,2GAErB,QACI,OAAO,kBAAC,IAAD,QAmCNz4B,KCtJF,MAAMs5B,WAAgBlxC,YACjCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAQnBiQ,OAAUtU,IACN6L,KAAKlI,SAAL,eAAmBkI,KAAKmB,IAAIhN,MATb,KAYnBgN,IAAO28B,IAiCI,CAAEuE,WAAW,EAAOluC,KAhCZ2pC,EACK10B,IAAIC,IACb,CAAEhP,IAAKgP,EAAKhU,KAAMsjB,MAAOtP,EAAKhU,KAAMuf,SAAUvL,EAAKpR,KAAM+wC,QAAS,IAAK/4B,UAAW,GAAIu5B,QAAS,MA8BzE93B,QA3BjB,CACZ,CACI9X,MAAO,QACP2X,UAAW,SAEf,CACI3X,MAAO,WACP2X,UAAW,WACXxH,OAAQ,CAAC5M,EAAOkb,KAEZ,cAAgBlb,GACZ,IAAK,SACD,OAAO,4BAAOA,EAAMlF,MACxB,QACI,OAAO,4BAAOkF,MAI9B,CACIvD,MAAO,GACP2X,UAAW,UACXxH,OAAQ,CAAC5M,EAAOkb,IACL,gBAAC0wB,GAAD,CAAiBhC,MAAO/mC,KAAK+mC,MAAO1uB,OAAQA,EAAQka,SAAWvyB,KAAKuyB,eAxCxE,KAgDnBkX,kBAAoB,KAChB,MAAMC,EAAkB,GACxB1pC,KAAKhI,MAAM7D,KAAKuc,QAAQrH,IACpBqgC,EAAgBrgC,EAAKsP,OAAStP,EAAKuL,WAGvC,MAAM7T,EAASmB,OAAOonB,QAAQtpB,KAAK+mC,OAAO39B,IAAI,EAAE/O,EAAI8C,MAAU,MAAD,EAC7BA,EAAM63B,iBAA3BgU,EADkD,EAClDA,QAAQ/4B,EAD0C,EAC1CA,UACf,OAAG+4B,EACQ,CAACrwB,MAAMte,EAAI2uC,UAAQ/4B,YAAU2E,SAAS80B,EAAgBrvC,IAE1D,KAEX,OAAI2F,KAAK2pC,gBAGF5oC,EAAO8J,OAAOxB,GAAQrJ,KAAK2pC,gBAAgBzxB,SAAS7O,EAAKsP,QAFrD,IA9DI,KAmEnBixB,SAAYtsC,IAAY,MACZusC,EAAyBvsC,EAAzBusC,UAAWC,EAAcxsC,EAAdwsC,UACnB,IAAKD,IAAcC,EAEf,YADA9pC,KAAKuyB,SAASuR,SAAS,+CAG3B,IAAI9jC,KAAK2pC,gBAEL,YADA3pC,KAAKuyB,SAASuR,SAAS,wBAI3B,MAAMiG,EAAe/pC,KAAKypC,oBAE1BzpC,KAAKgqC,cAAcC,UAAUJ,GAAa,CAAEA,YAAWC,YAAWpX,GAAI,QAASv+B,KAAM41C,GACjF/pC,KAAKgqC,cAAcE,YACnBlqC,KAAKgqC,cAAcE,WAAWzhC,OAAO,CAAEtU,KAAM6L,KAAKgqC,cAAcC,YAEhEjqC,KAAKgqC,cAAcG,YACnBnqC,KAAKgqC,cAAcG,WAAW1hC,OAAO,CAAEtU,KAAM6L,KAAKgqC,cAAcC,YAEpEjqC,KAAKuyB,SAASuR,SAAS,qBAvFR,KA2FnB/5B,OAAS,KACL,MAAMqgC,EAAe,CACjB7+B,SAAU,CAACo+B,EAAiBI,KACxB/pC,KAAK2pC,gBAAkBA,GAE3BU,iBAAkBhyB,IAAM,CACpBhjB,KAAMgjB,EAAOM,SAGrB,OAAO,uBAAKvb,UAAU,yDAClB,uBAAKxC,MAAO,CAACoP,YAAY,SACzB,gBAAC,GAAD,CAAaF,OAAQ9J,KAAMw8B,WAAYx8B,KAAKgqC,cAAcxN,WAAYJ,aAAcp8B,KAAKgqC,cAAc5N,aAAcD,iBAAkBn8B,KAAKgqC,cAAc7N,iBAAkBlyB,IAAMC,GAAOlK,KAAKgqC,cAAclN,eAAiB5yB,EAAImyB,OAAQr8B,KAAKgqC,cAAc3N,OAAQC,QAAS,KACzQ,MAAMyN,EAAe/pC,KAAKypC,oBAC1BzpC,KAAKgqC,cAAcM,sBAAsBP,IAC1CnvC,MAAO,CAAE4e,aAAc,UAC1B,gBAAC,KAAD,CAAOqmB,WAAY,CAACC,SAAS,EAAEyK,kBAAiB,GAChDH,aAAY,aACRnyC,KAAM,YACHmyC,GACJ14B,QAAS1R,KAAKhI,MAAM0Z,QACnBS,WAAYnS,KAAKhI,MAAM7D,QAI3B,gBAAC,IAAD,CAAMkJ,SAAU2C,KAAK4pC,UACjB,gBAAC,IAAKjvC,KAAN,CAAWtF,KAAM,YAAakI,MAAM,cAAa,gBAAC,IAAD,OACjD,gBAAC,IAAK5C,KAAN,CAAWtF,KAAM,YAAakI,MAAM,aAAaqlC,aAAc,OAAO,gBAAC,KAAD,KAClE,gBAAC,KAAOn3B,OAAR,CAAetO,MAAM,OAArB,OACA,gBAAC,KAAOsO,OAAR,CAAetO,MAAM,MAArB,QAEJ,gBAAC,IAAKxC,KAAN,KACI,gBAAC,IAAD,CAAQ1C,KAAK,UAAU0F,SAAS,UAAhC,wCAxHZqC,KAAKgqC,cAAgBxxC,EAAMsR,OAC3B9J,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,EAAMslC,cAC5B99B,KAAK+mC,MAAQ,ICPN,MAAMyD,WAAmBnyC,YACpCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAOnBiQ,OAAUtU,IACN6L,KAAKlI,SAAL,eAAmBkI,KAAKmB,IAAIhN,MARb,KAWnBgN,IAAO3I,IAaI,CAAE6pC,WAAW,EAAOluC,KAZZ+N,OAAOkP,KAAK5Y,EAAMrE,MAAMiV,IAAIC,IAAiB,CAAEwgC,UAAWxgC,KAErDD,IAAIC,IACb,CAAEhP,IAAKgP,EAAKwgC,UAAWA,UAAWxgC,EAAKwgC,aASjBn4B,QANjB,CACZ,CACI9X,MAAO,YACP2X,UAAW,gBArBJ,KA2BnBq4B,SAAYtsC,IAAY,MACZusC,EAAyBvsC,EAAzBusC,UAAWC,EAAcxsC,EAAdwsC,UACnB,IAAKD,IAAcC,EAEf,YADA9pC,KAAKuyB,SAASuR,SAAS,+CAG3B,MAAMiG,EAAe/pC,KAAK2pC,gBAAgBvgC,IAAIygC,GACnC7pC,KAAKgqC,cAAcC,UAAUJ,IAExC7pC,KAAKgqC,cAAcC,UAAUJ,GAAa,CAAEA,YAAWC,YAAWpX,GAAI,QAASv+B,KAAM41C,GACjF/pC,KAAKgqC,cAAcE,YACnBlqC,KAAKgqC,cAAcE,WAAWzhC,OAAO,CAAEtU,KAAM6L,KAAKgqC,cAAcC,YAEhEjqC,KAAKgqC,cAAcG,YACnBnqC,KAAKgqC,cAAcG,WAAW1hC,OAAO,CAAEtU,KAAM6L,KAAKgqC,cAAcC,YAEpEjqC,KAAKuyB,SAASuR,SAAS,qBA3CR,KA+CnB/5B,OAAS,KACL,MAAMqgC,EAAe,CACjB7+B,SAAU,CAACo+B,EAAiBI,KACxB/pC,KAAK2pC,gBAAkBA,GAE3BU,iBAAkBhyB,IAAM,CACpBhjB,KAAMgjB,EAAOze,SAGrB,OAAO,2BACH,gBAAC,IAAD,CAAMyD,SAAU2C,KAAK4pC,UACjB,gBAAC,IAAKjvC,KAAN,CAAWtF,KAAM,YAAakI,MAAM,cAAa,gBAAC,IAAD,OACjD,gBAAC,IAAK5C,KAAN,CAAWtF,KAAM,YAAakI,MAAM,aAAaqlC,aAAc,OAAO,gBAAC,KAAD,KAClE,gBAAC,KAAOn3B,OAAR,CAAetO,MAAM,OAArB,OACA,gBAAC,KAAOsO,OAAR,CAAetO,MAAM,MAArB,QAEJ,gBAAC,IAAKxC,KAAN,KACI,gBAAC,IAAD,CAAQ1C,KAAK,UAAU0F,SAAS,UAAhC,kBAGR,gBAAC,KAAD,CAAOysC,aAAY,aACfnyC,KAAM,YACHmyC,GACJ14B,QAAS1R,KAAKhI,MAAM0Z,QACnBS,WAAYnS,KAAKhI,MAAM7D,SArE/B6L,KAAKgqC,cAAgBxxC,EAAMsR,OAC3B9J,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,ICLf,MAAMiyC,WAAmBpyC,YACpCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAOnBiQ,OAAUtU,IACP6L,KAAKlI,SAAL,eAAkBkI,KAAKmB,IAAIhN,MARX,KAWnBgN,IAAO3I,IAMI,CAAErE,KALM+N,OAAOkP,KAAK5Y,EAAMrE,MAAMiV,IAAIC,IAAiB,CAAEwgC,UAAWxgC,KAErDD,IAAIC,IACb,CAAEhP,IAAKgP,EAAKwgC,UAAWA,UAAWxgC,EAAKwgC,aAEpCxyB,QAAQ8qB,KAAKC,WAjBZ,KAoBnB72B,SAAYpO,IACR6C,KAAK6pC,UAAY1sC,GArBF,KAwBnB4M,OAAS,IAEE,2BACH,gBAAC,IAAD,CAAM1P,IAAK2F,KAAKhI,MAAMqf,SAClB,gBAAC,IAAK1c,KAAN,CAAW4C,MAAM,+BACb,gBAAC,KAAD,CAAQgO,SAAUvL,KAAKuL,UAClBvL,KAAKhI,MAAM7D,KAAKiV,IAAIC,GACV,gBAAC,KAAOoC,OAAR,CAAepR,IAAKgP,EAAKhP,IAAK8C,MAAOkM,EAAKwgC,WAC5CxgC,EAAKwgC,gBA9B9B7pC,KAAKgqC,cAAgBxxC,EAAMsR,OAC3B9J,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKhI,MAAQgI,KAAKmB,IAAI3I,I,MCItBmhB,GAAYC,KAAZD,QAGO,MAAM+wB,WAAsB3Y,GAAI15B,aAAiBs5B,KAAK8K,KACjE/7B,YAAYlI,GAAQ,IAAD,EACfqM,MAAMrM,GADS,YAanB8xC,sBAbmB,uCAaK,WAAOP,GAAP,mBAAA71C,EAAA,yDACQ,IAAxB61C,EAAa5gC,OADG,uBAEhB,EAAKopB,SAASuR,SAAS,wBAFP,iCAKd6G,EAAYZ,EAAa7U,QAAQ7rB,GAC5BqhC,GAAcE,eAAe,CAACvhC,KACtCtG,KAAK,SAER,EAAK+5B,eAAep0B,QACdlD,EAAYga,GAAMK,mBAClB5hB,EAXc,wBAWS,EAAKs0B,SAASsI,oBAAoBr1B,UAX3C,4BAYZmlC,EAZY,wBAafnlC,EAbe,cAed,EAAK+sB,SAASyI,MAAM,CAAEx1B,YAAWvH,QAfnB,OAgBpB,EAAK6+B,eAAej0B,OAhBA,4CAbL,2DAgCnBgiC,cAhCmB,sBAgCH,qBAQHC,EARG,eAAA52C,EAAA,yDAQH42C,EARG,SAQSC,GACjB,GAAiB,UAAbA,EAAMrY,GACN,MAAwB,QAApBqY,EAAMjB,UACA,IAAN,OAAWY,GAAcE,eAAeG,EAAM52C,MAAM4O,KAAK,SAAzD,KACG,WAAW2nC,GAAcE,eAAeG,EAAM52C,MAAM4O,KAAK,QAAzD,KAEP,GAAwB,QAApBgoC,EAAMjB,UAAqB,CAC3B,MAAMlmB,EAAOmnB,EAAM52C,KAAK+gC,QAAQ7rB,GACrByhC,EAAYzhC,IACpBtG,KAAK,SACR,MAAM,IAAN,OAAW6gB,EAAX,KACG,CACH,MAAMA,EAAOmnB,EAAM52C,KAAK+gC,QAAQ7rB,GACrByhC,EAAYzhC,IAEvB,MAAM,IAAN,OAAWua,EAAK7gB,KAAK,QAArB,OAtBN8mC,EAAY,EAAKK,WAAWL,UADtB,uBAGR,EAAKtX,SAASuR,SAAS,mCAHf,iCAMNiH,EAAQ,EAAKd,UAAUJ,GAuBvBc,EAAYG,EAAYC,GAE9B,EAAKjO,eAAep0B,QACdlD,EAAYga,GAAMK,mBAClB5hB,EAjCM,wBAiCiB,EAAKs0B,SAASsI,oBAAoBr1B,UAjCnD,4BAkCJmlC,EAlCI,wBAmCPnlC,EAnCO,eAqCN,EAAK+sB,SAASyI,MAAM,CAAEx1B,YAAWvH,QArC3B,QAsCZ,EAAK6+B,eAAej0B,OAtCR,4CA9BZ7I,KAAKuyB,SAAW/5B,EAAMsR,OAAOyoB,SAC7BvyB,KAAKiqC,UAAY,GACjBjqC,KAAKgrC,kBAAoB,GAsE7BjhC,SACI,OAAO,2BACH,uBAAK3M,UAAW,gBACZ,gBAAC,KAAD,CAAMgd,iBAAiB,IAAIhd,UAAW,gBAElC,gBAAC,GAAD,CAASkd,IAAI,0BAA0BjgB,IAAI,KACvC,gBAAC,GAAD,CAAS4P,IAAMC,GAAOlK,KAAKgpC,QAAU9+B,EAAIJ,OAAQ9J,KAAM89B,aAAc99B,KAAKuyB,SAASJ,aAAasI,OAAO4C,UAE3G,gBAAC,GAAD,CAAS/iB,IAAI,cAAcjgB,IAAI,KAC3B,gBAAC,GAAD,CAAayP,OAAQ9J,KAAMw8B,WAAYx8B,KAAKw8B,WAAYJ,aAAcp8B,KAAKo8B,aAAcD,iBAAkBn8B,KAAKm8B,iBAAkBlyB,IAAMC,GAAOlK,KAAK88B,eAAiB5yB,EAAImyB,OAAQr8B,KAAKq8B,OAAQC,QAASt8B,KAAK6qC,cAAejwC,MAAO,CAAE4e,aAAc,UAClP,gBAAC,IAAD,MACA,gBAAC,GAAD,CAAYvP,IAAMC,GAAOlK,KAAKkqC,WAAahgC,EAAIJ,OAAQ9J,KAAM7L,KAAM6L,KAAKiqC,aAE5E,gBAAC,GAAD,CAAS3vB,IAAI,sBAAsBjgB,IAAI,KACnC,gBAAC,GAAD,CAAY4P,IAAMC,GAAOlK,KAAKmqC,WAAajgC,EAAIJ,OAAQ9J,KAAM7L,KAAM6L,KAAKiqC,eAKpF,8BA9FSS,GAQVE,eAAkBK,GACdA,EAAM7hC,IAAIC,GJJAA,KAAU,MACvBsP,EAAwCtP,EAAxCsP,MAAO/D,EAAiCvL,EAAjCuL,SAAUo0B,EAAuB3/B,EAAvB2/B,QAAS/4B,EAAc5G,EAAd4G,UAClC,GAAI+4B,IAAYb,GAAgBG,GAAI,CAEhC,IAAI4C,EAAU,GAEd,OAAQt2B,GACJ,IAAK,UAAW,IAAK,OAAQ,IAAK,QAAS,IAAK,SAC5Cs2B,EAAUj7B,EAAU7G,IAAI+hC,GACbA,GACRpoC,KAAK,KACR,MACJ,QACImoC,EAAUj7B,EAAU7G,IAAI+hC,GACd,IAAN,OAAW3rB,GAAMQ,YAAYmrB,GAA7B,MACDpoC,KAAK,KAEhB,MAAMizB,EAAG,WAAOkV,EAAP,KACT,MAAM,GAAN,OAAU1rB,GAAMqB,SAASlI,GAAzB,YAAmCqwB,EAAnC,YAA8ChT,GAGlD,GAAIgT,IAAYb,GAAgBS,aAAeI,IAAYb,GAAgBQ,QACvE,MAAM,GAAN,OAAUnpB,GAAMqB,SAASlI,GAAzB,YAAmCqwB,GAGvC,GAAIA,IAAYb,GAAgBU,SAC5B,MAAM,GAAN,OAAUrpB,GAAMqB,SAASlI,GAAzB,SAGJ,GAAIqwB,IAAYb,GAAgBiD,YAC5B,MAAM,GAAN,OAAU5rB,GAAMqB,SAASlI,GAAzB,UAGJ,GAAIqwB,IAAYb,GAAgBO,KAC5B,MAAM,GAAN,OAAUlpB,GAAMqB,SAASlI,GAAzB,kBAAyC6G,GAAMQ,YAAY/P,GAA3D,KAGJ,GAAI+4B,IAAYb,GAAgBK,YAC5B,MAAM,GAAN,OAAUhpB,GAAMqB,SAASlI,GAAzB,kBAAyC6G,GAAMQ,YAAY/P,GAA3D,MAGJ,GAAI+4B,IAAYb,GAAgBM,UAC5B,MAAM,GAAN,OAAUjpB,GAAMqB,SAASlI,GAAzB,mBAA0C6G,GAAMQ,YAAY/P,GAA5D,KAGJ,IAAI+lB,EAAM,GACV,OAAQphB,GACJ,IAAK,SACDohB,EAAG,WAAOxW,GAAMQ,YAAY/P,GAAzB,KACH,MACJ,QAAS+lB,EAAM/lB,EAEnB,MAAM,GAAN,OAAUuP,GAAMqB,SAASlI,GAAzB,YAAmCqwB,EAAnC,YAA8ChT,II/C/BqV,CAAgBhiC,I,SCrB2CtV,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EAC5FwwC,GAAiB1J,MAAM/mC,EACzBqJ,IACG,GAAmC,IAA/B4E,OAAOkP,KAAK9T,GAAQ6L,OACpB,MAAO,kDAIf,CAACopB,EAAUj1B,KACP,MAAMkI,EAAYga,GAAMK,mBAClByrB,EAAWppC,OAAOkP,KAAK9T,GAAQ8L,IAAI/O,GAC/B,IAAN,OAAWmlB,GAAMqB,SAASxmB,GAA1B,YAAkCiD,EAAOjD,GAAzC,MACD0I,KAAK,KAKR,MAAO,CAAEyC,YAAWvH,IAHX,wBAAoBs0B,EAASsI,oBAAoBr1B,UAAjD,mCACG8lC,EADH,4BAEJ9lC,EAFI,SAdkF,2CAAzB,uDAAtD+lC,G,GAATl3C,QAA0Cm3C,G,GAARv3C,OCCjD,MAAMw3C,OACKrG,UAAY,WADjBqG,GAEKpG,aAAe,cAG1B,MAAMqG,GAAuB,CACzB,CAACD,GAAwBrG,WAAYZ,GACrC,CAACiH,GAAwBpG,cAAef,GACxCxsC,SAAU1D,wBACV4mC,MAAOuQ,IAGLI,GAAsB,CACxB,CAACF,GAAwBrG,WAAYX,GACrC,CAACgH,GAAwBpG,cAAed,GACxCzsC,SAAUxD,iBACV0mC,MAAOwQ,IAGX,SAASI,GAAoB5zC,EAAO/D,GAChC,OAAO03C,GAAoB13C,EAAOgE,MAAMD,EAAO/D,EAAOE,MChB1D,MAAM2I,GAAY,CACdunC,cAAe,GACf3oC,WAAOrC,EAEPwrC,gCAA2BxrC,GAGzBwyC,GAAsBxzC,IAAMC,gBAC1BmT,GAAWC,KAAXD,OACR,SAASqgC,GAAatzC,GAClB,MAAM+5B,EAAW/5B,EAAMsR,OAAOyoB,SACxB8K,EAAS9K,EAASJ,aAAasI,OAAO4C,OAFnB,EAGEngC,0BAAgB0uC,GAAqB9uC,GAAW4uC,IAHlD,mBAGlB1zC,EAHkB,KAGXY,EAHW,KAIjByrC,EAAmDrsC,EAAnDqsC,cAAe3oC,EAAoC1D,EAApC0D,MAAMmpC,EAA8B7sC,EAA9B6sC,2BAJJ,EAKVvV,IAAKC,UAAbrE,EALkB,oBAOnB3K,EAAW8c,EAAOj0B,IAAIC,GACjB,kBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,MAAOgU,EAAKhU,OASzC,OANAqE,oBAAU,KACHmrC,GACC3Z,EAAKsb,UAEX,CAAC3B,IAGC,kBAACgH,GAAoBlyC,SAArB,CAA8BwD,MAAO,CAAEvE,cACnC,yBAAKgC,MAAO,CAAE6rC,UAAW,OAAQ,MAAS,UAElC/qC,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAEhC,kBAAC,IAAD,CAAMwvB,KAAMA,EAAM7tB,SAAWC,IACzB1E,EAAU,CACNX,KAAM,QACN9D,KAAM,CACFo+B,WACAj1B,aAGTF,UAAU,cACT,kBAAC,IAAKzC,KAAN,KACI,kBAACurC,GAAD,CAAmBE,QAASyF,GAAqBtZ,SAAUA,KAE/D,kBAAC,IAAK53B,KAAN,CAAW4C,MAAM,iBACb,kBAAC,KAAD,CACI7C,KAAK,WACLgsC,WAAYvpC,IACRvE,EAAU,CACNX,KAAMwzC,GAAwBpG,aAC9BlxC,KAAM,CAAEkpC,OAAQlgC,MAGxBoO,SAAWjO,IACP1E,EAAU,CACNX,KAAMwzC,GAAwBrG,UAC9BjxC,KAAM,CAAEkpC,OAAQ//B,OAIvBijB,IAIR8jB,EAAcj7B,IAAIC,GACR,kBAAC,IAAK1O,KAAN,CAAWq+B,aAAc,OAAQ3+B,IAAKgP,EAAKsP,MAAOpb,MAAO8L,EAAKsP,MAAOtjB,KAAMgU,EAAKsP,OACnF,kBAAC,KAAD,KACI,kBAAC,KAAOlN,OAAR,CAAetO,MAAM,QAArB,QACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,OAArB,a,SCzEyCpJ,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EACvFwwC,GAAiB1J,MAAM/mC,EACzBqJ,GACoC,GAA9B4E,OAAOkP,KAAK9T,GAAQ6L,OACZ,gDAEP7L,EAAOyuC,eAAX,EACW,gDAIf,CAACxZ,EAASj1B,KACN,MAAMkI,EAAYga,GAAMK,mBAClBmsB,EAAW1uC,EAAOyuC,UAKxB,MAAO,CAACvmC,YAAUvH,IAHT,wBAAoBs0B,EAASsI,oBAAoBr1B,UAAjD,gCACAwmC,EADA,4BAEJxmC,EAFI,SAf6E,2CAAzB,uDAAnDymC,G,GAAR53C,QAAuC63C,G,GAAPj4C,OCA9C,MAAMk4C,GAAoB,2BACnB3hB,IADmB,IACJwQ,MAAMiR,KAEtBG,GAAmB,2BAClB3hB,IADkB,IACJuQ,MAAMkR,KAG3B,SAASG,GAAoBr0C,EAAO/D,GAChC,OAAOm4C,GAAoBn4C,EAAOgE,MAAMD,EAAO/D,EAAOE,MCJ1D,MAAM2I,GAAY,CACdivC,eAAW1yC,EACXqC,WAAOrC,EAEPwrC,gCAA4BxrC,GAG1BizC,GAAsBj0C,IAAMC,gBAElC,SAASi0C,GAAa/zC,GAClB,MAAM+5B,EAAW/5B,EAAMsR,OAAOyoB,SADL,EAEEr1B,0BAAgBmvC,GAAqBvvC,GAAWqvC,IAFlD,mBAElBn0C,EAFkB,KAEXY,EAFW,KAGN8C,GAAsC1D,EAAjD+zC,UAAiD/zC,EAAtC0D,OAAOmpC,EAA+B7sC,EAA/B6sC,2BAHD,EAIVvV,IAAKC,UAAbrE,EAJkB,oBAYzB,OANAxxB,oBAAU,KACHmrC,GACC3Z,EAAKsb,UAEX,CAAC3B,IAGC,kBAACyH,GAAoB3yC,SAArB,CAA8BwD,MAAO,CAAEvE,cACnC,yBAAKgC,MAAO,CAAE6rC,UAAW,OAAQ,MAAS,UAElC/qC,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAEhC,kBAAC,IAAD,CAAMwvB,KAAMA,EAAM7tB,SAAWC,IACzB1E,EAAU,CACNX,KAAM,QACN9D,KAAM,CACFo+B,WACAj1B,aAGTF,UAAU,cACT,kBAAC,IAAKzC,KAAN,KACI,kBAACurC,GAAD,CAAmBE,QAASkG,GAAqB/Z,SAAUA,KAE/D,kBAAC,IAAK53B,KAAN,CAAWtF,KAAK,aACZ,kBAAC,IAAD,U,SC9CiDtB,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DACxF6uC,EAAS9uC,EAAOsD,QAAQwrC,QACvByJ,YAAcv4C,EAAOE,KAAKq4C,YAF6D,kBAGvF,CACHr4C,KAAM,CACF6E,QAAS/E,EAAOsD,QAAQyB,QAAU,EAClC+pC,YANsF,2CAAzB,uDAAnD0J,G,GAARp4C,QAAuCq4C,G,GAAPz4C,O,GCA2BF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DACxF6uC,EAAS9uC,EAAOsD,QAAQwrC,QACvB4J,YAAc14C,EAAOE,KAAKw4C,YAF6D,kBAGvF,CACHx4C,KAAM,CACF6E,QAAS/E,EAAOsD,QAAQyB,QAAU,EAClC+pC,YANsF,2CAAzB,uDAAnD6J,G,GAARv4C,QAAuCw4C,G,GAAP54C,O,GCAqCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,6DAClG6uC,EAAS9uC,EAAOsD,QAAQwrC,QACvB+J,WAAa74C,EAAOE,KAAK24C,WAFwE,kBAGjG,CACH34C,KAAM,CACF6E,QAAS/E,EAAOsD,QAAQyB,QAAU,EAClC+pC,YANgG,2CAAzB,uDAA7DgK,G,GAAR14C,QAA4C24C,G,GAAP/4C,O,GCC6BF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,qDAAAC,EAAA,2DAI5FD,EAAOsD,QAAQwrC,OAHhByJ,EAD6F,EAC7FA,YACJG,EAFiG,EAEjGA,YACAG,EAHiG,EAGjGA,WAHiG,EAKxE74C,EAAOE,KAA7Bo+B,EAL8F,EAK9FA,SAAS0a,EALqF,EAKrFA,UAEV7oB,EAAiBooB,EAAYpjC,IAAIC,GAC5BmW,GAAMqB,SAASxX,EAAKsP,QAC5B5V,KAAK,KAEFmqC,EAAUP,EAAYvjC,IAAIC,GACtB,GAAN,OAAUmW,GAAMqB,SAASxX,EAAKsP,OAA9B,YAAwCtP,EAAKlM,QAG7CgwC,EAAa,GACbD,EAAQ/jC,OAAS,IACjBgkC,EAAU,mBAAeD,EAAQnqC,KAAK,OAGlCqqC,EAAqCN,EAArCM,WAAYC,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UAC3BC,EAAY,GAGZC,EAAgBH,GAAS,UAAQA,EAAR,eAAkC,sBAC3DI,EAAgBH,GAAS,UAAOA,EAAP,eAAiC,sBAE1C,wBAAjBE,GAAyD,wBAAfC,IACzCA,EAAe,gBAGfL,EA/BiG,sBAgCzFA,EAhCyF,OAiCxF,eAjCwF,QAoCxF,iBApCwF,gCAkCzFG,EAAS,uBAAmBC,EAAnB,iBAAwCC,EAAxC,KAlCgF,oCAqCzFF,EAAS,wBAAoBC,EAApB,iBAAyCC,EAAzC,KArCgF,oCA0C/FzI,EAAYiI,EAAU7jC,IAAIC,IACwBA,EAA5CsP,MAA4CtP,EAArC24B,MADoB,MACbC,EAA8B54B,EAA9B44B,cAAexI,EAAepwB,EAAfowB,WACrC,MAAM,GAAN,OAAUwI,EAAV,sBAAqCxI,KACtC12B,KAAK,KAEF2qC,EAAYnb,EAASJ,aAAasI,OAAO4C,OAAOj0B,IAAIC,GAAMmW,GAAMqB,SAASxX,EAAKhU,OAAO0N,KAAK,KAC1FyC,EAAYga,GAAMK,mBAClB5hB,EAjD+F,wBAkD3FyvC,EAlD2F,YAkD9E1I,EAlD8E,uBAmD7FzS,EAASsI,oBAAoBr1B,UAnDgE,wDAqDjF4e,EArDiF,YAqD/D+oB,EArD+D,YAqDjDI,EArDiD,uBAsD7F/nC,EAtD6F,qBA0D/F+sB,EAASyI,MAAM,CAACx1B,YAAUvH,QA1DqE,eA4DrGs0B,EAASqK,wBA5D4F,kBA6D9F,CACHzoC,KAAM,KA9D2F,4CAAzB,uDAAxDw5C,G,GAATt5C,QAA2Cu5C,G,GAAR35C,OCElD,MAAM45C,OACKC,WAAa,aADlBD,GAEKE,WAAa,aAFlBF,GAGKG,gBAAkB,kBAHvBH,GAIK7S,MAAQ,QAEnB,MAAMiT,GAAqB,2BACpBzjB,IADoB,IAEvB,CAACqjB,GAAyBC,YAAarB,GACvC,CAACoB,GAAyBE,YAAanB,GACvC,CAACiB,GAAyBG,iBAAkBjB,GAC5C/R,MAAO2S,KAELO,GAAoB,2BACnBzjB,IADmB,IAEtB,CAACojB,GAAyBC,YAAapB,GACvC,CAACmB,GAAyBE,YAAalB,GACvC,CAACgB,GAAyBG,iBAAkBhB,GAC5ChS,MAAO4S,KAGX,SAASO,GAAqBn2C,EAAO/D,GACjC,OAAOi6C,GAAqBj6C,EAAOgE,MAAMD,EAAO/D,EAAOE,M,MCvBnDsX,GAAWC,KAAXD,OA+DO2iC,OA9Df,SAAyB51C,GAAQ,MACrB+5B,EAOJ/5B,EAPI+5B,SAEJ6T,GAKA5tC,EANAI,UAMAJ,EALA4tC,SAHwB,EAQxB5tC,EAJA61C,mBAJwB,SAKxBC,EAGA91C,EAHA81C,aAAa9H,EAGbhuC,EAHaguC,OAAO+H,EAGpB/1C,EAHoB+1C,aALI,EAQxB/1C,EAFAg2C,yBANwB,MAMN,gBANM,IAQxBh2C,EADAi2C,wBAPwB,MAOP,WAPO,EAStBpR,EAASkR,GAAgBhc,EAASJ,aAAasI,OAAO4C,OAThC,EAUctkC,mBAAS,IAVvB,mBAUrB21C,EAVqB,KAUNC,EAVM,OAWF51C,wBAASM,GAXP,mBAWrBqC,EAXqB,KAWd07B,EAXc,OAYb9H,IAAKC,UAAbrE,EAZqB,oBActB3K,EAAW8c,EAAOj0B,IAAIC,GACjB,kBAAC,GAAD,CAAQhP,IAAKgP,EAAKhU,MAAOgU,EAAKhU,OA2CzC,MAAO,CAAEu5B,GAxCGggB,GACD,kBAAC,IAAD,CAAM1jB,KAAMA,EAAM9tB,UAAU,aAAaC,SAAUmpC,GAEhD9qC,GAAS,kBAAC,GAAD,CAAUmzC,QAAS,KAAKzX,OAAS/9B,IAAauD,QAASlB,IAEjE2yC,GAAe,kBAAC,IAAK1zC,KAAN,KACZ,kBAACurC,GAAD,CAAmBE,QAASA,EAAS7T,SAAUA,KAGnD,kBAAC,IAAK53B,KAAN,CAAW4C,MAAOixC,EAAmBn5C,KAAK,oBACtC,kBAAC,KAAD,CACIuF,MAAO,CAAC,SAAW,SACnBF,KAAM+zC,EACN/H,WAAYvpC,IACRwxC,EAAiBD,EAAc7jC,OAAOxB,GAAQlM,IAAUkM,EAAKsP,SAEjEpN,SAAWjO,IAEHqxC,EADkB,aAAnBF,EACkBnxC,EAAO8L,IAAIuP,IACjB,CAAEA,WAGI,CAAC,CAAEA,MAAMrb,OAKjCijB,IAIRmuB,EAActlC,IAAIC,GACRilC,EAAajlC,IAGvBulC,GAKAF,gBAAexjB,OAAMkM,aCxDtC,SAAS0X,GAAWt2C,GAAQ,MACjBI,EAAaC,qBAAWk2C,IAAxBn2C,UADgB,EAEaw1C,GAAgB,CAChD7b,SAAS/5B,EAAM+5B,SACf+b,aAAcjlC,GAAe,uCAF1BulB,EAFgB,EAEhBA,GAAG8f,EAFa,EAEbA,cAActX,EAFD,EAECA,SAIxB,OACIxI,EAAG,CAAC,kBAAC,IAAKj0B,KAAN,CAAWN,IAAK,UAChB,kBAAC,IAAD,CAAQpC,KAAK,UAAUmC,QACnB,KAC8B,IAAvBs0C,EAAcvlC,OAIjBvQ,EAAU,CACNX,KAAM41C,GAAyBC,WAC/B35C,KAAM,CAACq4C,YAAYkC,KALnBtX,EAAS,0BAHrB,WCTZ,SAAS4X,GAAmBx2C,GAAQ,MACzBI,EAAaC,qBAAWk2C,IAAxBn2C,UADwB,EAEUw1C,GAAgB,CACrD7b,SAAS/5B,EAAM+5B,SACf+b,aAAcjlC,GAAe,kBAAC,IAAK1O,KAAN,CAAWq+B,aAAc,OAAQ3+B,IAAKgP,EAAKsP,MAAOpb,MAAO8L,EAAKsP,MAAOtjB,KAAMgU,EAAKsP,OAC7G,kBAAC,KAAD,KACI,kBAAC,KAAOlN,OAAR,CAAetO,MAAM,QAArB,QACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,OAArB,WALDyxB,EAFwB,EAExBA,GAAG8f,EAFqB,EAErBA,cAAuBxjB,GAFF,EAEPkM,SAFO,EAEElM,MASjC,OACI0D,EAAG,CAAC,kBAAC,IAAKj0B,KAAN,KACA,kBAAC,IAAD,CAAQ1C,KAAK,UAAUmC,QACnB,KACI,MAAM60C,EAAiB/jB,EAAKE,gBACtBuhB,EAAc+B,EAActlC,IAAIC,IAC3B,CAACsP,MAAMtP,EAAKsP,MAAOxb,MAAM8xC,EAAe5lC,EAAKsP,UAExD/f,EAAU,CACNX,KAAM41C,GAAyBE,WAC/B55C,KAAM,CAACw4C,YAAYA,OAR/B,QAcA,kBAAC,IAAD,CAAS10C,KAAK,aACd,kBAAC,IAAD,CAASmC,QACL,KAEIxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAC6E,QAAQ,OAL3B,eC3BZ,SAASk2C,GAAmB12C,GAAQ,MACxBI,EAAcC,qBAAWk2C,IAAzBn2C,UADuB,EAEew1C,GAAgB,CAC1D7b,SAAU/5B,EAAM+5B,SAChB+b,aAAejlC,IACX,OAAQA,EAAKsP,OACT,IAAK,aASL,IAAK,eACD,OAAO,oCACH,kBAAC,IAAKhe,KAAN,CAAW4C,MAAM,YAAYlI,KAAK,aAC9B,kBAAC,IAAD,CAAOmtB,YAAa,YAExB,kBAAC,IAAK7nB,KAAN,CAAW4C,MAAM,YAAYlI,KAAK,aAC9B,kBAAC,IAAD,CAAOmtB,YAAa,eAKxC+rB,aAAc,CAAC,CAAEl5C,KAAM,cAAgB,CAAEA,KAAM,iBAC/Cm5C,kBAAmB,cAAeC,iBAAkB,WAzBhD7f,EAFuB,EAEvBA,GAA6B1D,GAFN,EAEnBwjB,cAFmB,EAEJtX,SAFI,EAEMlM,MA2BrC,OACI0D,EAAG,CAAC,kBAAC,IAAKj0B,KAAN,KACA,kBAAC,IAAD,CAAQ1C,KAAK,UAAUmC,QACnB,KAAO,MACK+0C,EAAqBjkB,EAAKE,gBAA1B+jB,iBACFrC,EAAU,2BAAQ5hB,EAAKE,iBAAb,IAA8BgiB,WAAY+B,IAC1Dv2C,EAAU,CACNX,KAAM41C,GAAyBG,gBAC/B75C,KAAM,CAAE24C,kBANpB,QAWS,kBAAC,IAAD,CAAS70C,KAAK,aACvB,kBAAC,IAAD,CAASmC,QACL,KAEIxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAC6E,QAAQ,OAL3B,e,MC3CJygB,GAAUC,KAAVD,M,eCFUC,KAAVD,MAGR,SAAS21B,GAAc52C,GAAQ,MACnB+5B,EAAa/5B,EAAb+5B,SACA35B,EAAcC,qBAAWk2C,IAAzBn2C,UAFkB,EDC9B,SAA2BJ,GAAQ,MACvBspC,EAAiBtpC,EAAjBspC,aADsB,EAEJ/oC,mBAAS,IAFL,mBAEvBs2C,EAFuB,KAEhBC,EAFgB,OAGQv2C,wBAASM,GAHjB,mBAGvB8nC,EAHuB,KAGVoO,EAHU,OAIfjgB,IAAKC,UAAbrE,EAJuB,sBAKJnyB,wBAASM,GALL,mBAKvBqC,EALuB,KAKhB07B,EALgB,KAOxBoY,EAAU,uCAAG,8BAAAt7C,EAAA,sEACGkR,GAAc87B,gBADjB,OACTxrC,EADS,OAETvB,EAAOuB,EAAIG,QAAQuT,IAAKC,IACnB,CACHlM,MAAOkM,EAAKhP,IAAI+uB,MAChBlmB,KAAMmG,EAAKhP,IAAI+uB,MACfqX,UAAWp3B,EAAKqI,QAAQ,GACxBkvB,YAAav3B,EAAKqI,QAAQ,GAC1B3Q,OAAQsI,EAAKqI,QAAQoL,MAAM,EAAGzT,EAAKqI,QAAQvI,WAGnDmmC,EAASn7C,GAXM,2CAAH,qDAahBuF,oBAAU,KACN81C,KACD,IAEH,MAAM7R,EAAe1P,sBAAW,uCAAC,WAAO9wB,GAAP,eAAAjJ,EAAA,sDACvBitC,EAAckO,EAAMxkC,OAAOxB,GAAQA,EAAKlM,QAAUA,GAAO,GAC/DoyC,EAAepO,GAFc,2CAAD,sDAG7B,CAACkO,IAEExN,EAAcx4B,GACU,QAAtBA,EAAK4E,MAAM1J,OACJu9B,EACG,GAmFlB,MAAO,CACHlT,GA5CO,CAACggB,EAAS3gC,IACV,kBAAC,IAAD,CAAMid,KAAMA,EAAM9tB,UAAU,cAE3B1B,GAAS,kBAAC,GAAD,CAAUmzC,QAAS,KAAQzX,OAAS/9B,IAAcuD,QAASlB,IAExE,kBAAC,IAAKf,KAAN,CAAW4C,MAAO,mBACd,kBAAC,KAAD,CACI0lB,YAAU,EACVuf,0BAA0B,EAC1BC,WAAW,EACX7nC,MAAO,CAAE4Q,MAAO,SAChB2X,cAAc,EACd5X,SAAUoyB,EACVgF,gBAAiB,sBAEhB0M,EAAMjmC,IAAIm5B,GAAK,kBAAC,KAAO92B,OAAR,CAAepR,IAAKkoC,EAAEplC,OAAQolC,EAAEr/B,SAKpDi+B,GAAe,kBAAC,IAAKxmC,KAAN,CAAWN,IAAK8mC,EAAYhkC,OAAO,kBAAC,GAAD,CAAUsiB,KAAM0hB,KAGlEA,GAAeA,EAAYpgC,OAAOqI,IAAIC,GAC3B,kBAAC,IAAK1O,KAAN,CAAWq+B,aAAc6I,EAAWx4B,GAAOhP,IAAKgP,EAAKhU,KAAMA,KAAMgU,EAAKhU,KAAMkI,MAAO8L,EAAKhU,MAAM,kBAAC,IAAD,QAI7G,kBAAC,IAAKsF,KAAN,KACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CAAOwf,OAAO,4BACd,kBAAC,IAAD,CAASliB,KAAK,eACd,kBAAC,IAAK0C,KAAN,CAAWtF,KAAK,mBAAmBkI,MAAM,qBAAoB,kBAAC,IAAD,OAC7D,kBAAC,IAAK5C,KAAN,CAAWtF,KAAK,eAAekI,MAAM,mBAAkB,kBAAC,KAAD,UAI9D0Q,EACD,kBAAC,IAAKtT,KAAN,CAAWtF,KAAK,eAAekI,MAAM,iBAAiBE,UAAQ,GAAC,kBAAC,IAAD,OAC9DmxC,GAKD1jB,OAAM6W,aAjFO,KAAO,MAAD,EACkC7W,EAAKE,gBAAtDqkB,EADe,EACfA,iBAAkBC,EADH,EACGA,aAAcC,EADjB,EACiBA,aACxC,GAAIF,EACA,MAAO,CACH92B,MAAOmpB,EACPE,MAAO0N,IAAgB,EACvBzN,cAAewN,EACfhW,WAAYkW,GAGpB,IAAIxO,EAEA,OADA/J,EAAS,wBACF,GAEX,MAAMr2B,EAAS,GACfogC,EAAYpgC,OAAO2P,QAAQrH,IACvB,IAAIyX,EAAIoK,EAAKE,gBAAgB/hB,EAAKhU,MAC7ByrB,GAA2B,QAAtBzX,EAAK4E,MAAM1J,SACjBuc,EAAIghB,GAEJhhB,IAC0B,QAAtBzX,EAAK4E,MAAM1J,OACXxD,EAAO8B,KAAK2c,GAAMqB,SAASC,IACH,UAAjBzX,EAAKuL,UAAyC,WAAjBvL,EAAKuL,SACzC7T,EAAO8B,KAAKie,GAGZ/f,EAAO8B,KAAP,WAAgBie,EAAhB,SAMZ,MAAO,CAAEnI,MAFKmpB,EAEEE,MADkC,QAApCb,EAAYV,UAAUxyB,MAAMi0B,IACnBD,cAAc,GAAD,OAAKd,EAAYhkC,MAAjB,YAA0B4D,EAAOgC,KAAK,KAAtC,KAA+C02B,WAAYkW,IAgDvEvY,YClHiBwY,CAAkB,CAC3D9N,aAAc,KADVlT,EAHkB,EAGlBA,GAAI1D,EAHc,EAGdA,KAAM6W,EAHQ,EAGRA,aAAc3K,EAHN,EAGMA,SAHN,EAMIr+B,oBAAS,GANb,mBAMnByN,EANmB,KAMVwE,EANU,OAOAjS,mBAAS,IAPT,mBAOnBs2C,EAPmB,KAOZC,EAPY,KAS1B,OAAO,oCAEC1gB,EAAG,CACC,kBAAC,IAAKj0B,KAAN,KACI,kBAAC,IAAD,CAAQ1C,KAAK,UAAUuO,QAASA,EAASpM,QACrC,KACI,IAAI6yC,EAAY,GAChB,GAAoB,IAAjBoC,EAAMlmC,OAAa,CAAC,MAAD,EACkC44B,IAA5CppB,EADU,EACVA,MAAOqpB,EADG,EACHA,MAAOC,EADJ,EACIA,cAAexI,EADnB,EACmBA,WAErC,GADAwT,EAAUpqC,KAAK,CAAE8V,QAAOqpB,QAAOC,gBAAexI,gBACzCA,EAED,YADArC,EAAS,oCAIb6V,EAAYoC,EAEhBrkC,GAAW,GACXpS,EAAU,CACNX,KAAM41C,GAAyB7S,MAC/B7mC,KAAM,CACF6W,aACAunB,WACA0a,iBAnBhB,SAyBK,kBAAC,IAAD,CAASh1C,KAAK,aACvB,kBAAC,IAAD,CAAQuO,QAASA,EAASpM,QAClB,KAAO,MAAD,EACkD2nC,IAA5CppB,EADN,EACMA,MAAOqpB,EADb,EACaA,MAAOC,EADpB,EACoBA,cAAexI,EADnC,EACmCA,WAChCA,GAIL6V,EAASD,EAAM9O,OAAO,CAAC,CAAE5nB,QAAOqpB,QAAOC,gBAAexI,iBACtDvO,EAAK+J,eAJDmC,EAAS,iCAJzB,OAYS,kBAAC,IAAD,CAASn/B,KAAK,aAC3B,kBAAC,IAAD,CAASmC,QACL,KAEIxB,EAAU,CACNX,KAAM,WACN9D,KAAM,CAAC6E,QAAQ,OAL3B,eAeAq2C,EAAMlmC,OAAQ,GAAM,kBAAC,KAAD,CAAMvO,MAAO,CAAC4Q,MAAM,SACxC2O,OAAQ,gDACR4mB,UAAQ,EACR5uB,WAAYk9B,EAAMjmC,IAAIC,GAAM,GAAF,OAAKA,EAAK44B,cAAV,eAA8B54B,EAAKowB,aAC7DoW,WAAYxmC,GACV,kBAAC,KAAK1O,KAAN,KACE,kBAAC,KAAWm1C,KAAZ,CAAiBlgC,MAAI,GAArB,QADF,IACgDvG,M,6SCvEtDq1B,GAASC,KAATD,KAEFE,GAAcpiC,KAAOC,IAAV,MAcXsyC,GAAuB12C,IAAMC,gBAEnC,SAASy3C,GAAcv3C,GACnB,MAAM+5B,EAAW/5B,EAAMsR,OAAOyoB,SACxBz1B,EAAY,CACd6iC,MAAO,CAAC,kBAACmP,GAAD,CAAYvc,SAAUA,IAC9B,kBAACyc,GAAD,CAAoBzc,SAAUA,IAC9B,kBAAC2c,GAAD,CAAoB3c,SAAUA,IAC9B,kBAAC6c,GAAD,CAAe7c,SAAUA,KAEzBv5B,QAAS,EACT+pC,OAAO,CACHyJ,YAAa,GACbG,YAAa,GACbG,WAAY,KAZM,EAeC5vC,0BAAgBixC,GAAsBrxC,EAAWmxC,IAflD,mBAenBj2C,EAfmB,KAeZY,EAfY,KAgBlB+mC,EAAmB3nC,EAAnB2nC,MAAO3mC,EAAYhB,EAAZgB,QACf,OACI,kBAAC+1C,GAAqBp1C,SAAtB,CAA+BwD,MAAO,CAAEvE,cACpC,yBAAKwE,UAAU,YACX,yBAAKxC,MAAO,CAAC6rC,UAAU,SACnB,kBAAC,KAAD,CAAOztC,QAASA,GACZ,kBAAC,GAAD,CAAMqB,IAAK,EAAGT,MAAM,cAAcO,YAAY,gCAC9C,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,wBAAwBO,YAAY,6CACxD,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,eAAeO,YAAY,6CAC/C,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,iBAAiBO,YAAY,qDAGzD,yBAAKiD,UAAU,iBACX,kBAAC,GAAD,KAAcuiC,EAAM3mC,GAApB,QCvDpB,MAAMg3C,GAAmB,eAClBxlB,IAEDylB,GAAkB,eACjBxlB,IAGP,SAASylB,GAAmBl4C,EAAO/D,GACnC,OAAOg8C,GAAmBh8C,EAAOgE,MAAMD,EAAO/D,EAAOE,M,yCCGrD,MAAM2I,GAAY,CACd+nC,gCAA4BxrC,EAC5B8xB,mBAAc9xB,EACdgtC,WAAY7mB,GAAMO,cAGhBowB,GAAqB93C,IAAMC,gBAEjC,SAAS83C,GAAY53C,GACjB,MAAM+5B,EAAW/5B,EAAMsR,OAAOyoB,SADN,EAEGr1B,0BAAgBgzC,GAAoBpzC,GAAWkzC,IAFlD,mBAEjBh4C,EAFiB,KAEVY,EAFU,OClB5B,SAAuBJ,GACnB,MACM6kC,EADW7kC,EAAMsR,OAAOyoB,SACNJ,aAAasI,OAAO4C,OAAOj0B,IAAIC,GAAQA,EAAKhU,MAF1C,EAGXi6B,IAAKC,UAAbrE,EAHmB,sBAIAnyB,qBAJA,mBAInBs3C,EAJmB,KAIZC,EAJY,OAKIv3C,mBAAS,IALb,mBAKnBw3C,EALmB,KAKVC,EALU,KAOpB9+B,EAAU2rB,EAAOj0B,IAAIC,GAChB,kBAAC,KAAOoC,OAAR,CAAetO,MAAOkM,GAAOA,IAIlConC,EAAiBxiB,sBAAayiB,IAChCA,EAAahgC,QAAQrH,IACI,UAAjBA,EAAKhU,KAAK,IACVi7C,EAASjnC,EAAKlM,UAGvB,IA6BH,MAAO,CAAEyxB,GA3BE,IACA,kBAAC,IAAD,CAAMh1B,MAAM,WACf,kBAAC,IAAD,CAAMsxB,KAAMA,EAAMulB,eAAgBA,GAC9B,kBAAC,IAAK91C,KAAN,CAAW4C,MAAM,sBAAsBlI,KAAK,SACxC,kBAAC,KAAD,KAEQk7C,EAAQnnC,IAAIC,GACD,kBAAC,KAAOoC,OAAR,CAAetO,MAAOkM,GAAOA,MAMpD,kBAAC,IAAK1O,KAAN,CAAW4C,MAAM,WAAWlI,KAAK,WAC7B,kBAAC,KAAD,KACKqc,IAIT,kBAAC,IAAK/W,KAAN,CAAW4C,MAAM,WAAWlI,KAAK,WAC7B,kBAAC,KAAD,KACKqc,MAMRwZ,OAAMmlB,QAAOG,cD1BgCG,CAAcn4C,GAA5Do4C,EAHY,EAGhBhiB,GAAkBiiB,EAHF,EAGJ3lB,KAAgBmlB,EAHZ,EAGYA,MAAOG,EAHnB,EAGmBA,WAHnB,EEd5B,SAAuBh4C,GAAQ,MAAD,EACX82B,IAAKC,UAAbrE,EADmB,sBAEgBnyB,mBAAS,IAFzB,mBAEnB+3C,EAFmB,KAEJC,EAFI,OAGch4C,qBAHd,mBAGnBi4C,EAHmB,KAGLC,EAHK,KAmB1B,MAAO,CAAEriB,GAdE,IACA,kBAAC,IAAD,CAAMh1B,MAAM,qBACdo3C,GAAgB,yBAAK5zC,UAAU,gBAAgBxC,MAAO,CAAC4Q,MAAM,UACzD,kBAAC,KAAD,CAAc0lC,IAAKF,KAExB,kBAAC,IAAD,CAAM9lB,KAAMA,GACP4lB,EAAc1nC,IAAIC,GACR,kBAAC,IAAK1O,KAAN,CAAWN,IAAKgP,EAAKhP,IAAKhF,KAAMgU,EAAKhP,IAAKkD,MAAO8L,EAAKga,OAAO9lB,OAAS8L,EAAKhP,IAAK2+B,aAAcxZ,GAAMU,QAAQ7W,EAAKmgC,UACpH,kBAAC,IAAD,UAMPte,OAAM6lB,mBAAkBD,gBAAcG,mBFDsBE,GAA7DC,EAJY,EAIhBxiB,GAAkByiB,EAJF,EAIJnmB,KAAgB6lB,EAJZ,EAIYA,iBAAiBE,EAJ7B,EAI6BA,gBAC/C9lC,EAAQ,IAAIrW,cACV+vC,EAAwD7sC,EAAxD6sC,2BAA2B1Z,EAA6BnzB,EAA7BmzB,cAAekb,EAAcruC,EAAdquC,WAG5CiL,EAAgB,uCAAG,8BAAAp9C,EAAA,sEAEHiX,EAAM/U,IAAIpB,UAAau8C,YAAa,IAFjC,UAGF,OADb77C,EAFe,QAGbkG,OAHa,iDAMf41C,EAAc97C,EAAIG,QAAQuT,IAAIC,GAAQA,EAAKhU,MACjDm7C,EAAWgB,GAPU,2CAAH,qDAUhBC,EAAW,uCAAG,kCAAAv9C,EAAA,0DACZm8C,EADY,iCAEMllC,EAAM/U,IAAIpB,UAAa08C,WAAY,CAAEC,WAAYtB,IAFvD,cAEN36C,EAFM,OAGNy1B,EAAgBz1B,EAAIG,QAAQA,QAHtB,SAKwBsV,EAAM7J,UAAU6pB,EAAe3L,GAAMO,aAAc,CAAEzhB,YAAa,YAL1F,UAMyB,OAD/BszC,EALM,QAMch2C,OANd,mDASNk1C,EAAgBc,EAAsB/7C,QAAQgV,OAAO5M,GAChDA,EAAIvD,MAAsB,iBAAbuD,EAAIvD,MAE5B9B,EAAU,CACNX,KAAK,WACL9D,KAAK,CAACg3B,mBAGV8lB,EAAgBv7C,EAAIG,QAAQg8C,OAC5Bd,EAAiBD,GAlBL,4CAAH,qDAqBjBp3C,oBAAU,KACN+3C,KACD,CAACpB,IAEJ32C,oBAAU,KACN43C,KACD,IAEH,MAAMtW,EAAK,uCAAG,kCAAA9mC,EAAA,0DACN2wC,EADM,uBAEAiN,EAAajB,EAASzlB,gBACtB2mB,EAAaV,EAASjmB,gBAEtB5lB,EAAYusC,EAAWvsC,WAAaga,GAAMK,mBAC1C5hB,EANA,gCAOIuhB,GAAMqB,SAASixB,EAAWE,SAP9B,iBAO+CxyB,GAAMqB,SAASixB,EAAWG,SAPzE,qCAQE1f,EAASsI,oBAAoBr1B,UAR/B,eAQ+CA,EAR/C,2BASH2lB,EATG,2BAWAoH,EAASyI,MAAM,CAACx1B,YAAUvH,QAX1B,OAaN4mC,EAA2B,CACvB5sC,KAAM,WACN9D,KAAM,CAAEqS,SAAS,KAff,2CAAH,qDAuBX,OAJA9M,oBAAU,KACNshC,KACD,CAACqL,IAGA,kBAAC8J,GAAmBx2C,SAApB,CAA6BwD,MAAO,CAAEvE,cAClC,kBAACstC,GAAD,CAAmB3T,SAAUA,EAAU6T,QAAS+J,KAChD,yBAAK/yC,UAAU,gBACX,yBAAKA,UAAU,0BACVwzC,KAEL,kBAAC,IAAD,CAAS34C,KAAK,WAAW2C,MAAO,CAAE6T,OAAQ,WAC1C,yBAAKrR,UAAU,0BACVg0C,O,MGrFbz3B,GAAYC,KAAZD,QAEO,MAAMu4B,WAAuB75C,YACxCqI,YAAYlI,GACRqM,MAAMrM,GADS,KAMnBiQ,OAAS,KACLzI,KAAKlI,SAAS,CAAEuC,IAAKmlB,GAAMO,gBAL3B/f,KAAKuyB,SAAW2E,GAAiB3E,SACjCvyB,KAAKhI,MAAQ,CAAEqC,IAAKmlB,GAAMO,cAO9BhW,SACI,OAAO,uBAAK3M,UAAU,UAAUxC,MAAO,CAAEgY,gBAAiB,UACtD,uBAAKxV,UAAU,WACX,gBAAC,aAAD,CAAWxC,MAAO,CAAEu3C,aAAc,QAAS3mC,MAAO,OAAQ8N,SAAU,WAChE,gBAAC,KAAD,CAAMc,iBAAiB,IAAIg4B,YAAY,OAAO/3C,IAAK2F,KAAKhI,MAAMqC,KAC1D,gBAAC,GAAD,CAASigB,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,YAAcX,IAAK,GAClD,gBAAC,GAAD,CAAgByP,OAAQ9J,QAE5B,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,WAAaX,IAAK,GACjD,gBAAC,GAAD,CAAeyP,OAAQ9J,QAE3B,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,QAAUX,IAAK,GAC9C,gBAAC,GAAD,CAAYyP,OAAQ9J,QAExB,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,UAAYX,IAAK,GAChD,gBAACyxC,GAAD,CAAchiC,OAAQ9J,QAE1B,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,SAAWX,IAAK,KAC/C,gBAAC,KAAD,CAAM+3C,YAAY,QACd,gBAAC,GAAD,CAAS93B,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,SAAWX,IAAK,GAC/C,gBAAC,GAAD,CAAayP,OAAQ9J,QAEzB,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,UAAYX,IAAK,GAChD,gBAACkyC,GAAD,CAAcziC,OAAQ9J,QAE1B,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,WAAaX,IAAK,GACjD,gBAAC01C,GAAD,CAAejmC,OAAQ9J,QAE3B,gBAAC,GAAD,CAASsa,IAAK,gBAAC,IAAD,CAAkBtf,GAAG,SAAWX,IAAK,GAC/C,gBAAC,GAAD,CAAayP,OAAQ9J,eCzDlD,MAAMqyC,GAAqB3gB,GAAe,cAAcA,EAAY,eAAD,oBACtE8I,cAAkB3+B,IACMmE,KAAKhI,MAAMs6C,YAE3BtyC,KAAKlI,SAAS,CAACw6C,aAAatyC,KAAKhI,MAAMs6C,cAEvCtyC,KAAKlI,SAAS,CAACw6C,aAAatyC,KAAKhI,MAAMs6C,YAAYC,eAAe12C,KANJ,KAWtEioC,SAAYjoC,IACRmE,KAAKlI,SAAS,CAAC06C,iBAAgB,EAAKC,YAAY52C,OCZ3C62C,GAAgBhhB,GAAe,cAAcA,EAAY,eAAD,iCACjEiJ,cADiE,uCACjD,WAAOxmC,EAAKsmC,GAAZ,SAAAvmC,EAAA,sDACZ,EAAK4D,SAAS,CAACikC,cAAa,IAC5B,EAAK70B,WAAWQ,OAAOvT,EAAKsmC,EAAO4C,QACnC,EAAKvlC,SAAS,CAACikC,cAAa,IAHhB,2CADiD,6DAOjEa,sBAAwB,KACpB58B,KAAK2yC,WAAW76C,SAAS,CAAEuC,IAAK8nC,KAAKC,YARwB,KAWjEvF,qBAAuB,KACnB78B,KAAKwxB,gBAAgB15B,SAAS,CAACmiC,cAAcza,GAAMO,kB,8CCRpD,MAAM6yB,GAAYlhB,GAAe,cAAcA,EAAY,eAAD,iCAC7DmhB,qBAAuBthC,IAAS,CAC5BuhC,eAAgB,EAAGC,kBAAiBt4C,eAAc85B,UAASye,kBACvD,uBAAKp4C,MAAO,CAAEqtB,QAAS,IACnB,gBAAC,IAAD,CACIhe,IAAKygB,IACD1qB,KAAKizC,YAAcvoB,GAEvBlI,YAAW,iBAAYjR,GACvBpU,MAAO1C,EAAa,GACpB8Q,SAAUzU,GAAKi8C,EAAgBj8C,EAAEyhB,OAAOpb,MAAQ,CAACrG,EAAEyhB,OAAOpb,OAAS,IACnE+1C,aAAc,IAAMlzC,KAAKihC,aAAaxmC,EAAc85B,EAAShjB,GAC7D3W,MAAO,CAAE4Q,MAAO,IAAKgO,aAAc,EAAGpS,QAAS,WAEnD,gBAAC,KAAD,KACI,gBAAC,IAAD,CACInP,KAAK,UACLmC,QAAS,IAAM4F,KAAKihC,aAAaxmC,EAAc85B,EAAShjB,GACxDzW,KAAM,gBAACq4C,GAAA,EAAD,MACN5/B,KAAK,QACL3Y,MAAO,CAAE4Q,MAAO,KALpB,UASA,gBAAC,IAAD,CAAQpR,QAAS,IAAM4F,KAAKozC,YAAYJ,GAAez/B,KAAK,QAAQ3Y,MAAO,CAAE4Q,MAAO,KAApF,WAMZ6nC,WAAYC,GAAY,gBAACH,GAAA,EAAD,CAAgBv4C,MAAO,CAAEwZ,MAAOk/B,EAAW,eAAYj6C,KAC/Ek6C,SAAU,CAACp2C,EAAOkb,KAAW,EAC7Bm7B,8BAA+B35C,IACvBA,GACAgW,WAAW,IAAM7P,KAAKizC,YAAY11B,WAG1CxT,OAAQ7G,GACJlD,KAAKhI,MAAMy7C,iBAAmBliC,EAC1B,gBAAC,KAAD,CACImiC,eAAgB,CAAE9gC,gBAAiB,UAAWqV,QAAS,GACvD0rB,YAAa,CAAC3zC,KAAKhI,MAAM47C,YACzBC,YAAU,EACVC,gBAAiB5wC,EAAOA,EAAK7B,WAAa,KAG1C6B,IA9C6C,KAkD7D+9B,aAlD6D,uCAkD9C,WAAOxmC,EAAc85B,EAAShjB,GAA9B,qBAAArd,EAAA,6DACLsR,EAAYga,GAAMK,mBAClB+zB,EAAan5C,EAAa,GAC1Bg5C,EAAiBj0B,GAAMqB,SAAStP,GAChCxQ,EAAS,CACXyE,YACAvH,IAAI,iBAAD,OAAmB,EAAKs0B,SAASsI,oBAAoBr1B,UAArD,gCACKiuC,EADL,mBAC8BG,EAD9B,iBACiDpuC,EADjD,MAGP+uB,IACA,EAAKz8B,SAAS,CACV0O,SAAS,IAXF,SAaL,EAAK+rB,SAASyI,MAAMj6B,GAbf,OAcX,EAAKjJ,SAAS,CACV0O,SAAS,EACTotC,WAAYn5C,EAAa,GACzBg5C,eAAgBliC,IAjBT,2CAlD8C,+DAuE7D6hC,YAAcJ,IACVA,IACAhzC,KAAKlI,SAAS,CAAE87C,WAAY,Q,wBCzE7B,MAAMG,GAAkBriB,GAAe,cAAcA,EAAY,eAAD,iCACnEsiB,aADmE,uCACpD,WAAO/7C,EAAKwhC,GAAZ,eAAAvlC,EAAA,sDACX,EAAK4D,SAAS,CACV0O,SAAS,IAEPhB,EAAYga,GAAMK,mBAJb,KAKJ5nB,EALI,OAMF,UANE,OAmBF,oBAnBE,uCAOG,EAAKs6B,SAASyI,MAAM,CACtBx1B,UAAWA,EACXvH,IAAI,gBAAD,OAAkBuhB,GAAMqB,SAAS4Y,GAAjC,wCACI,EAAKlH,SAASsI,oBAAoBr1B,UADtC,oCAEEA,EAFF,6BATJ,cAcH,EAAK1N,SAAS,CACV0O,SAAS,IAfV,2CAoBG,EAAK+rB,SAASyI,MAAM,CACtBx1B,UAAWA,EACXvH,IAAI,yBAAD,OAA2BuhB,GAAMqB,SAAS4Y,GAA1C,wCACI,EAAKlH,SAASsI,oBAAoBr1B,UADtC,oCAEEA,EAFF,6BAtBJ,eA2BH,EAAK1N,SAAS,CACV0O,SAAS,IA5BV,2BAiCX,EAAK1O,SAAS,CACV0O,SAAS,IAlCF,4CADoD,6DAuClEytC,SAAY5qC,IACT,MAAM6qC,EACF,gBAAC,IAAD,CAAM95C,QAAUoS,IACZxM,KAAKg0C,aAAaxnC,EAAInS,IAAIgP,EAAKhU,QAEjC,gBAAC,IAAKsF,KAAN,CAAWN,IAAI,QAAQS,KAAM,gBAACq5C,GAAA,EAAD,OAA7B,SAGA,gBAAC,IAAKx5C,KAAN,CAAWN,IAAI,kBAAkBS,KAAM,gBAACq5C,GAAA,EAAD,OAAvC,mBAKJ,OAAO,gBAAC,KAAD,CAAUC,QAASF,GAC1B,4BAAO7qC,EAAKhU,KAAK,gBAAC,IAAD,CAAS4C,KAAK,aAAY,gBAACu4B,GAAA,EAAD,WCjD/C3f,GAAgB/S,EAAQ,KAEf,MAAMu2C,WAA0BtiB,GAAI15B,aAAiBs5B,KAChEihB,GACAmB,KAEArzC,YAAYlI,GACRqM,MAAMrM,GADS,KAgBnB87C,iBAAmBjrC,IACQA,EAAfhU,KADgB,MACV4C,EAASoR,EAATpR,KAEd,GAAsB,kBAAVA,EACR,MAAO,CAACkF,EAAOkb,IACJ/hB,KAAKC,UAAU4G,GAI9B,OAAQlF,GACJ,IAAK,SAGL,QACI,MAAO,CAACkF,EAAOkb,IAAoBlb,IA9B5B,KAmCnBo3C,iBAAmBlrC,IAAS,MAChBhU,EAAegU,EAAfhU,KACR,OADuBgU,EAATpR,MAEV,IAAK,SAAU,OAAO+H,KAAK6yC,qBAAqBx9C,GAChD,IAAK,QACL,IAAK,MACL,QACI,MAAO,KA1CA,KA8CnBm/C,sBAAwBnrC,GACbrJ,KAAKi0C,SAAS5qC,GA/CN,KAkDnB3B,OAAS,CAAC4J,EAAMI,KACZ,IAAI+iC,GAAS,EACT/iC,EAAQ,IAA0B,SAApBA,EAAQ,GAAGrc,MAAmBqc,EAAQ,IAA0B,SAApBA,EAAQ,GAAGrc,OACrEo/C,GAAS,GAEb,MAAMC,EAAahjC,EAAQtI,IAAIC,GACpB,2BACAA,GADP,IAEIkI,UAAWlI,EAAKhU,KAChBuE,MAAOoG,KAAKw0C,sBAAsBnrC,GAClCU,OAAQ/J,KAAKs0C,iBAAiBjrC,IAC3BrJ,KAAKu0C,iBAAiBlrC,KAIjCrJ,KAAKlI,SAAS,CAAE4Z,QAASgjC,EAAYvgD,KAAMmd,EAAMmjC,YAjElC,KAoEnB1iC,eAAiB,KACb/R,KAAKlI,SAAS,CACV+Z,KAAM,CACFC,SAAS,MArEjB9R,KAAKgS,WAAaxZ,EAAMoC,OAAS,GACjCoF,KAAKhI,MAAQ,CACT0Z,QAAS,GACTJ,KAAM,GACNO,KAAM,CAAEC,SAAS,GACjB8hC,WAAY,GACZH,eAAgB,GAChBjtC,SAAS,EACTiuC,QAAQ,GAEZz0C,KAAKiR,OAAS,GACdjR,KAAKuyB,SAAW2E,GAAiB3E,SA+DrCxoB,SAEI,OAAI/J,KAAKhI,MAAMy8C,OACJt9B,GAAUpN,OAAO/J,KAAKhI,MAAM7D,MAE/B,uBAAKyG,MAAOoF,KAAKgS,YACrB,gBAAC,KAAD,CACIxL,QAASxG,KAAKhI,MAAMwO,QACpB+M,KAAK,UACL7B,QAAS1R,KAAKhI,MAAM0Z,QACpBS,WAAYnS,KAAKhI,MAAM7D,KACvBq6B,OAAQ,CAAE/Z,GAAG,KAEjB,gBAAC,KAAD,CACI7a,MAAO,OACPC,QAASmG,KAAKhI,MAAM6Z,KAAKC,QACzBhY,SAAUkG,KAAK+R,eACfhY,KAAMiG,KAAK+R,eACX9X,WAAW,SACXmY,OAAO,MAEP,gBAAC,GAAD,CAAeC,OAAQrS,KAAKhI,MAAM6Z,KAAKhc,SAAW,Q,2JCvGlE,SAAS8+C,GAAsBn8C,GACPgE,KAAOC,IAAV,MAAjB,MAIMm4C,EAASC,eACf,OACI,yBAAKz3C,UAAU,oCACX,kBAAC,KAAD,CAAUxC,MAAO,CAAC4e,aAAa,SAC3B,kBAAC,KAASC,MAAV,CAAgBU,OAAQ,oCACpB,kBAAC,IAAD,CAAQrf,KAAM,kBAACg6C,GAAA,EAAD,MAAwB16C,QAAUoS,IACpDA,EAAIjS,iBACJiS,EAAIhS,kBACJo6C,EAAOlsC,MAAM8D,MAEb,kBAAC,IAAD,CAASvU,KAAK,aACd,kBAAC,IAAD,CAAkB+C,GAAG,oBAQjB,kBAAC,KAAD,CAAY45C,OAAQA,GAChB,kBAAC,GAAD,CAAgB3qC,IAAMC,GAAOgtB,GAAiB3E,SAASogB,WAAazoC,QC1B5F,SAAS6qC,GAAqBv8C,GAC1B,MAAMo8C,EAASC,eACf,OACI,kBAAC,KAAD,CAAUz6B,iBAAkB,IAAKxf,MAAO,CAAE4e,aAAc,OAAOhO,MAAO,SAClE,kBAAC,KAASiO,MAAV,CAAgBpf,IAAI,IAAI8f,OAAQ,oCAC/B+c,GAAiB3E,SAASS,WAAa,oCACxC,kBAAC,IAAD,CAAQl4B,KAAM,kBAACg6C,GAAA,EAAD,MAAwB16C,QAAUoS,IAC5CA,EAAIjS,iBACJiS,EAAIhS,kBACJo6C,EAAOlsC,MAAM8D,MAEjB,kBAAC,IAAD,CAASvU,KAAK,cAEd,kBAAC,IAAD,CAAkB+C,GAAG,iBACjB,kBAAC,KAAD,CAAY45C,OAAQA,GAChB,kBAAC,GAAD,CAAmB5iC,WAAY,CAAExG,MAAO,OAASvB,IAAMC,GAAOgtB,GAAiB3E,SAASrrB,WAAagD,OCJzH,MAAMgtB,WAAyBnF,GAAI15B,aAC/Bs5B,KAAKuI,GACDU,GACAyX,GACAK,KAEJhyC,YAAYlI,GACRqM,MAAMrM,GACNwH,KAAKnL,OAAS,IAAIC,cAClBkL,KAAKhI,MAAQ,CAAE+jC,cAAc,GAE7B/7B,KAAKs6B,KAAO,GACZpD,GAAiB3E,SAAWvyB,KAGhCyK,qBAKAuqC,qBACI,OAAIh1C,KAAKhI,MAAMuiC,aACJ,gBAAC,GAAD,MAEPv6B,KAAKgzB,UAEE,gBAAC2hB,GAAD,MAEA,gBAAC,KAAD,CAAQ/5C,MAAO,CAAE4Q,MAAO,QAC3B5R,MAAM,iCACNq7C,SAAS,yFAKrBlrC,SACI,OAAO,uBAAK3M,UAAU,UAClB,uBAAKA,UAAU,gBACX,gBAAC,aAAD,CAAWxC,MAAO,CAAE02B,aAAc,OAAQC,YAAa,UACnD,gBAAC,GAAD,CAAUtnB,IAAMC,GAAOlK,KAAKwxB,gBAAkBtnB,EAAIJ,OAAQ9J,SAGlE,uBAAK5C,UAAU,iBACX,gBAAC,KAAD,CACIxD,MAAO,UACPC,QAASmG,KAAKhI,MAAMs6C,cAAe,EACnCx4C,SAAUkG,KAAKw6B,cACfzgC,KAAMiG,KAAKw6B,cACXvgC,WAAW,SACXuR,MAAM,MACN4G,OAAO,MAGP,gBAAC,KAAD,CACI3D,OAAQ,QACRjD,MAAO,OACP9Q,KAAK,OACLkU,MAAM,SACNvZ,KAAK,aACL8H,MAAO6C,KAAKhI,MAAMu6C,gBAAkB,MAG5C,gBAAC,KAAD,CACI34C,MAAO,UACPC,QAASmG,KAAKhI,MAAMw6C,kBAAmB,EACvC14C,SAAU,KAAQkG,KAAKlI,SAAS,CAAE06C,iBAAiB,KACnDz4C,KAAM,KAAQiG,KAAKlI,SAAS,CAAE06C,iBAAiB,KAC/Cv4C,WAAW,SACXmY,OAAO,MAENpS,KAAKhI,MAAMy6C,aAEhB,uBAAKr1C,UAAU,mBACV4C,KAAKg1C,sBAEV,uBAAK53C,UAAU,iBACX,gBAAC23C,GAAD,UA5Ed7d,GAKK3E,cAAWl5B,EA6EP69B,U,SCjG+CnjC,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,2BAAAC,EAAA,+DAE5BD,EAAOE,KAAtD+gD,EAF2E,EAE3EA,eAAgBC,EAF2D,EAE3DA,YAAaj6C,EAF8C,EAE9CA,cAC/B6F,EAAS,QACO1H,IAAnB67C,IACCn0C,EAAOZ,SAAW+0C,QAEH77C,IAAhB87C,IACCp0C,EAAOlB,MAAQs1C,QAEE97C,IAAlB6B,IACC6F,EAAOvB,QAAUtE,GAGfrG,EAAS,IAAIC,cAdgE,SAejED,EAAOE,KAAKC,UAAaogD,SAAUr0C,GAf8B,UAiBhE,OAFbrL,EAf6E,QAiB3EkG,OAjB2E,0CAkBxE,CACHzH,KAAM,CACFkhD,cAAc,KApByD,iCAwB5E,CACHlhD,KAAM,CACFuH,MAAOhG,EAAIG,WA1BgE,4CAAzB,uDAAtCy/C,G,GAATjhD,QAAkCkhD,G,GAARthD,O,GCF4BF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EACnF,CACHC,KAAK,eACEF,EAAOE,QAHwE,2CAAzB,uDAA/CC,G,GAARC,QAAqCC,G,GAAPL,OCE5C,MAAMuhD,OACKC,WAAa,YADlBD,GAEKE,UAAY,WAEvB,MAAMC,GAAuB,CACzB,CAACH,GAAwBC,YAAaH,GACtC,CAACE,GAAwBE,WAAYthD,IAGzC,SAASwhD,GAAoB59C,EAAO/D,GAChC,OAAQA,EAAOgE,MACX,KAAKu9C,GAAwBC,WACzB,OAAOF,GAASv9C,EAAO/D,EAAOE,MAClC,KAAKqhD,GAAwBE,UACzB,OAAOphD,GAAe0D,EAAO/D,EAAOE,MACxC,QACI,OAAO6D,G,qBCVnB,MAAM8E,GAAY,CACdq4C,aAAa,EACbD,gBAAgB,EAChBh6C,eAAe,EACfm6C,cAAc,EACd35C,WAAOrC,EACPmN,SAAS,GAGPqvC,GAAoBx9C,IAAMC,gBAEhC,SAASw9C,KAAc,MAAD,EACS54C,0BAAgB04C,GAAqB94C,GAAW64C,IADzD,mBACX39C,EADW,KACJY,EADI,OAEqBnD,EAAQwH,cAAvClG,EAFU,EAEVA,eAAgBM,EAFN,EAEMA,WAEhB89C,EAE0Bn9C,EAF1Bm9C,YAAaD,EAEal9C,EAFbk9C,eACjBh6C,EAC8BlD,EAD9BkD,cACAm6C,EAA8Br9C,EAA9Bq9C,aAAa35C,EAAiB1D,EAAjB0D,MAAM8K,EAAWxO,EAAXwO,QANL,4CAQlB,8BAAAtS,EAAA,6DACUW,EAAS,IAAIC,cADvB,SAE0BD,EAAOuB,IAAIpB,UAAa+gD,SAAU,IAF5D,OAG2B,OADjBp9C,EAFV,QAGgBiD,QACRhD,EAAU,CACNX,KAAMu9C,GAAwBE,UAC9BvhD,KAAM,CACFghD,YAAa5gD,QAAQoE,EAAQ9C,QAAQgK,OACrCq1C,eAAgB3gD,QAAQoE,EAAQ9C,QAAQsK,UACxCjF,cAAe3G,QAAQoE,EAAQ9C,QAAQ2J,SACvCgH,SAAS,KAVzB,4CARkB,sBA6BlB,OALA9M,oBAAU,MAxBQ,mCAyBds8C,IACF,CAACX,EAAa35C,IAIZ,kBAACm6C,GAAkBl8C,SAAnB,CAA4BwD,MAAO,CAAEvE,cAChCy8C,GAAgB,kBAAC,IAAD,CACb14C,UAAQ,EACRC,QAAQ,UACRzC,YAAY,gBACZlC,KAAK,UACLg+C,UAAQ,IAEXv6C,GAAS,kBAAC,IAAD,CACNiB,UAAQ,EACRC,QAAQ,OACRzC,YAAauB,EACbzD,KAAK,QACLg+C,UAAQ,IAGRzvC,GAAW,kBAAC,GAAD,OAEbA,GAAW,kBAAC,IAAD,CAAM5M,MAAM,kCACrB,kBAAC,IAAD,iBAAU7C,EAAV,CAA0BqG,UAAU,aAAaC,SAAWC,IACxD1E,EAAU7E,IAAYiG,WAAWw7C,GAAwBC,WAAYn4C,OAErE,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,0BACNlI,KAAK,kBAEL,kBAAC,KAAD,CAAQ4tC,eAAgBiS,EAAgBgB,gBAAgB,SAASC,kBAAkB,cAGvF,kBAAC,IAAKx7C,KAAN,CACI4C,MAAM,mBACNlI,KAAK,eAEL,kBAAC,KAAD,CAAQ4tC,eAAgBkS,EAAae,gBAAgB,SAASC,kBAAkB,cAGpF,kBAAC,IAAKx7C,KAAN,CACI4C,MAAM,sBACNlI,KAAK,iBAEL,kBAAC,KAAD,CAAQ4tC,eAAgB/nC,EAAeg7C,gBAAgB,SAASC,kBAAkB,cAGtF,kBAAC,IAAKx7C,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAU0F,SAAS,UAAhC,a,wBCzFxB,SAASy4C,GAAa59C,GAAQ,MAClBsgB,EAAgFtgB,EAAhFsgB,aAAcu9B,EAAkE79C,EAAlE69C,cAAuBC,EAA2C99C,EAAnDguC,OAAgC+P,EAAmB/9C,EAA3BumB,OADpC,EAEVuQ,IAAKC,UAAbrE,EAFkB,sBAGGnyB,mBAAS,IAHZ,mBAGlB0hC,EAHkB,KAGV+b,EAHU,OAIDz9C,mBAAS,IAJR,mBAIlB5E,EAJkB,KAIZ+U,EAJY,OAKGnQ,mBAAS,IALZ,mBAKlBgqC,EALkB,KAKV0T,EALU,OAMK19C,oBAAS,GANd,mBAMlByN,EANkB,KAMTwE,EANS,OAOWjS,oBAAS,GAPpB,mBAOlB29C,EAPkB,KAONC,EAPM,OAQC59C,wBAASM,GARV,mBAQlBqC,EARkB,KAQX07B,EARW,OAUyCwf,aAAeziD,GAAzE84B,EAViB,EAUjBA,KAAMlO,EAVW,EAUXA,OAAQ83B,EAVG,EAUHA,OAAQC,EAVL,EAUKA,KAAMj0C,EAVX,EAUWA,KAAgBk0C,GAV3B,EAUiBC,SAVjB,EAU2BD,WAC5C/hB,EAAmB9J,EAAnB8J,eAERt7B,oBAAU,KACNq9C,EAAU5iD,IACX,CAACA,IAEJ,MAoBMud,EApBW+oB,EAAO5vB,OAAOxB,GAAiB,OAATA,GAAeD,IAAIC,GAClDyP,GAAgBA,EAAazP,GAAcyP,EAAazP,GAAM,CAAEwtC,WAC7D,CACHj9C,MAAOyP,EACPkI,UAAWlI,EACXhP,IAAKgP,EACLU,OAAQ,CAAC7G,EAAMmB,EAAKmN,IAChB,oCACI,kBAAC,IAAK7W,KAAN,CAAWtF,KAAI,iBAAYwhD,EAAOrlC,GAAnB,aAA8BnI,GAAQ2vB,aAAc91B,GAC/D,kBAAC,IAAD,CACItI,MAAO,CACH4Q,MAAO,IACPxB,YAAa,UAQhBu2B,OAAO,CAAC,CAC7BlmC,IAAK,UACLT,MAAO,GACP2X,UAAW,UACXxH,OAAQ,CAAC7G,EAAMmB,EAAKmN,IAEhB,oCACI,kBAAC,IAAK7W,KAAN,CAAWtF,KAAI,iBAAYwhD,EAAOrlC,GAAnB,cACX,kBAAC,IAAO4N,MAAR,KACI,kBAAC,IAAD,CAAQnnB,KAAK,SAASmC,QAAS,KACvBm8C,GACAA,EAAelyC,GAEnB0a,EAAOvN,KAJX,gBA2BdylC,EAAYhpB,sBAAa3wB,IAC3Bm5C,EAAUn5C,GACV,IAAI45C,EAAM,0BACE,uCAAG,4BAAAhjD,EAAA,sDACL6M,EAAS,GACfmB,OAAOonB,QAAQhsB,GAAQ8L,IAAI,EAAE62B,EAAWkX,MACpC,MAAMC,EAAUF,EAAIG,KAAKpX,GACnBzuB,EAAQmQ,OAAOy1B,EAAQ,IACvBz+B,EAAQy+B,EAAQ,GACjBr2C,EAAOyQ,KACRzQ,EAAOyQ,GAAS,IAEhB2lC,IACAp2C,EAAOyQ,GAAOmH,GAASw+B,KAG3Bb,GACAA,EAAe,CAAEv1C,SAAQiK,eAdlB,2CAAH,qDAiBZw7B,IACD,CAACx7B,IAgEJ,MAAO,CAAE4jB,GA9DE,KACP,IAAK8nB,EAAY,CACb,MAAMhC,EAAahjC,EAAQtI,IAAIC,IAC3BA,EAAI,OAAa,CAACnG,EAAMmB,EAAKmN,IAClB,8BAAOtO,GAEXmG,IAEX,OAAO,kBAAC,KAAD,CACHqI,QAASgjC,EACTviC,WAAYhe,EACZ0rC,YAAY,IAGpB,OAAO,oCACH,kBAAC,IAAD,CAAM3U,KAAMA,GACR,kBAAC,KAAD,CACIosB,UAAW,CAACC,EAAUC,IAAaV,EAAKS,EAAUC,GAClDC,eAAgB,8BAEf/7C,GAAS,kBAAC,GAAD,CAAUkB,QAASlB,IAC7B,kBAAC,KAAD,CACIgW,QAASA,EACTS,WAAY8a,EACZyqB,OAAQ,CAACC,EAAGnmC,IAAUqlC,EAAOrlC,GAAOnQ,WACpCw+B,YAAY,KAGpB,kBAAC,IAAD,CACIjlC,MAAO,CACH6rC,UAAW,GAEfnhC,OAAK,EACLrN,KAAK,SACLmC,QAAS,IACLyI,EArEF,MACd,GAAIwzC,EACA,OAAOA,EAAc3kC,GAEzB,MAAMkmC,EAAU,GAIhB,OAHAlmC,EAAQtI,IAAIC,IACRuuC,EAAQvuC,GAAQ,KAEbuuC,GA6DcC,KAPb,aAYA,kBAAC,IAAD,CACI5/C,KAAK,UACL2C,MAAO,CACH6rC,UAAW,IAEfjgC,QAASA,EACTpM,QAAS,KACL68C,EAAUjiB,OAPlB,UAYCx8B,EAAMs/C,OAAS,yBACZl9C,MAAO,CACHge,WAAY,QAGfmqB,GAAM,mBAAgBzsC,KAAKC,UAAUwsC,EAAQ,KAAM,QAKvD5uC,OAAMsmC,SAAQvxB,UAASstC,YAAWxrC,aAAY2rC,gBAAevf,YC5J9E,SAAS2gB,GAAQv/C,GAAQ,MAAD,EAEQO,wBAASM,GAFjB,mBAEboP,EAFa,KAELuvC,EAFK,KAGd7sC,EAAQ,IAAIrW,cAHE,EAIuCshD,GAAa,CACpE5P,OAAO,WAAD,4BAAE,YAAO,OAAEzlC,EAAF,WAAUiK,IAAjB,iBAAA9W,EAAA,sDACJ8W,GAAW,GACXosB,OAAS/9B,GACAylB,EAAI,EAHT,YAGYA,EAAI/d,EAAOoI,QAHvB,iCAIkBgC,EAAMpW,KAAKC,UAAaijD,WAAYl3C,EAAO+d,IAJ7D,UAKkB,OADZppB,EAJN,QAKOkG,OALP,wBAMIoP,GAAW,GACXosB,EAAS1hC,EAAIG,SAPjB,2BAG+BipB,IAH/B,uBAWJk5B,EAAUx4B,GAAMO,cAChB/U,GAAW,GAZP,4CAAF,mDAAC,GAcP8N,aAAc,CACV9W,SAAU,EAAG60C,aACF,CACHj9C,MAAO,WACP2X,UAAW,WACXlX,IAAK,WACL0P,OAAQ,CAAC7G,EAAMmB,EAAKmN,KAChB,IAAIrU,GAAQ,EAIZ,OAHa,IAAT+F,IACA/F,GAAQ,GAEL,oCACH,kBAAC,IAAKxC,KAAN,CAAWtF,KAAI,iBAAYwhD,EAAOrlC,GAAnB,cAAuCwnB,aAActX,OAAOvkB,IACvE,kBAAC,KAAD,KACI,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,QAArB,QACA,kBAAC,KAAOsO,OAAR,CAAetO,MAAM,SAArB,kBA9BxByxB,EAJY,EAIZA,GAAI1lB,EAJQ,EAIRA,QAASstC,EAJD,EAICA,UAAWG,EAJZ,EAIYA,cAAevf,EAJ3B,EAI2BA,SAoD/C,OAXA19B,oBAAU,MACK,uCAAG,4BAAAxF,EAAA,sEACQiX,EAAM/U,IAAIpB,UAAaoW,YAAa,IAD5C,OAES,OADb1V,EADI,QAEFkG,SACJ46C,EAAU9gD,EAAIG,QAAQ4kC,QACtBvxB,EAAQxT,EAAIG,QAAQ1B,OAJd,2CAAH,qDAOX6O,IACD,CAACyF,IAEG,yBAAKrL,UAAU,iBAClB,kBAAC,KAAD,CAAQ84C,gBAAgB,YAAYC,kBAAkB,YAAY5qC,SAC7Dqa,IACG+wB,EAAc/wB,MAGtB,kBAAC,IAAD,CAAS3tB,KAAK,eACb22B,KCeMspB,OA/Ef,WAA2B,MAAD,EACIn/C,wBAASM,GADb,mBACfqC,EADe,KACR07B,EADQ,OAEkBr+B,wBAASM,GAF3B,mBAEfg8C,EAFe,KAED8C,EAFC,KAIhB3R,EAASvY,sBAAW,uCAAC,WAAO3wB,GAAP,mBAAApJ,EAAA,yDACyBoJ,EAAxC9B,SAAU48C,EAA8B96C,EAA9B86C,YAAaC,EAAiB/6C,EAAjB+6C,aAC3BD,IAAgBC,EAFG,uBAGnBjhB,EAAS,sCAHU,0BAMjBjsB,EAAQ,IAAIrW,cACNqW,EAAMpW,KAAKC,UAAasjD,qBAAsBh7C,GAC1D66C,EAAgB,iCARO,2CAAD,sDASvB,IAEH,OAAO,kBAAC,IAAD,CAAM/6C,UAAU,uBAClBi4C,GAAgB,kBAAC,IAAD,CACb14C,UAAQ,EACRC,QAAQ,UACRzC,YAAY,gBACZlC,KAAK,UACLg+C,UAAQ,IAEXv6C,GAAS,kBAAC,IAAD,CACNiB,UAAQ,EACRC,QAAQ,OACRzC,YAAauB,EACbzD,KAAK,QACLg+C,UAAQ,IAEZ,kBAAC,IAAD,CAAM74C,UAAU,aAAaC,SAAWC,IACpCkpC,EAAOlpC,KAGP,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,qBACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2CAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAN,CACI4C,MAAM,eACNlI,KAAK,cACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAN,CACI4C,MAAM,eACNlI,KAAK,eACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2CAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAN,KACI,kBAAC,IAAD,CAAQ1C,KAAK,UAAU0F,SAAS,UAAhC,c,MCpERzF,GAAYC,IAAZD,QAGF4E,GAAY,CACdlI,YAAa,oBAGX2jD,GAAsBlgD,IAAMC,gBAElC,SAASkgD,KAAgB,MAAD,EACOt7C,0BAAgB04C,GAAqB94C,GAAW64C,IADvD,mBACb39C,EADa,KACNY,EADM,KAEbhE,EAAeoD,EAAfpD,YACP,OACI,kBAAC2jD,GAAoB5+C,SAArB,CAA8BwD,MAAO,CAAEvE,cACnC,yBAAKwE,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CACIxC,MAAO,CAAE4Q,MAAO,KAChBitC,oBAAqB,CAAC,oBACtBC,gBAAiB,CAAC,oBAClBh+C,KAAK,UAEL,kBAAC,GAAD,CACIL,IAAI,mBACJT,MACI,8BACI,kBAAC++C,GAAA,EAAD,MACA,oDAIR,kBAAC,IAAKh+C,KAAN,CAAWN,IAAI,mBAAmBD,QAAS,KACvCxB,EAAU,CACNX,KAAK,WACL9D,KAAK,CAACS,YAAY,wBAH1B,qBAOJ,kBAAC,GAAD,CACIyF,IAAI,kBACJT,MACI,8BACI,kBAAC++C,GAAA,EAAD,MACA,mDAIR,kBAAC,IAAKh+C,KAAN,CAAWP,QAAS,KAChBxB,EAAU,CACNX,KAAK,WACL9D,KAAK,CAACS,YAAY,cAEvByF,IAAI,WALP,cASZ,yBAAK+C,UAAU,kBACK,qBAAdxI,GAAoC,kBAACkhD,GAAD,MACtB,YAAdlhD,GAA2B,kBAACmjD,GAAD,SC9DjD,SAASa,GAAcpgD,GAAQ,MAAD,EACAO,wBAASM,GADT,mBACnBqC,EADmB,KACZ07B,EADY,OAEIr+B,wBAASM,GAFb,mBAEnBw/C,EAFmB,KAEVC,EAFU,OAGI//C,wBAASM,GAHb,mBAGnBL,EAHmB,KAGVC,EAHU,OAIIF,oBAAS,GAJb,mBAInByN,EAJmB,KAIVwE,EAJU,OAKXskB,IAAKC,UAAbrE,EALmB,oBAyB1B,MAAO,CAAE0D,GAhBE,EAAGmqB,YAAWn/C,QAAO4sC,YAC5B,yBAAKppC,UAAU,qCACX,kBAAC,IAAD,CAAMxD,MAAOA,EAAOgB,MAAO,CAAE4Q,MAAO,QAChC,kBAAC,IAAD,CAAM0f,KAAMA,GACPxvB,GAAS,kBAAC,GAAD,CAAUkB,QAAS,kBAAC,IAAD,CAAkB5B,GAAIU,MAClDm9C,GAAW,kBAAC,GAAD,CAAUj/C,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAAoB/C,KAAK,UAAU2E,QAAS,kBAAC,IAAD,CAAkB5B,GAAI69C,MACnHE,GAEL,kBAAC,IAAKp+C,KAAN,KACI,kBAAC,IAAD,CAAQ1C,KAAK,UAAUuO,QAASA,EAASpM,QACrCosC,GACF,kBAAC,IAAD,CAAkBxrC,GAAG,cAK1BkwB,OAAMkM,WAAUpsB,aAAYguC,UAnBvB,IACP9tB,EAAK8J,iBAkBmC/7B,aAAWD,UAAQ8/C,cCpB1E,SAASG,GAAezgD,GAAQ,MAAD,EAESogD,KAA5BhqB,EAFmB,EAEnBA,GAAIwI,EAFe,EAEfA,SAAS0hB,EAFM,EAENA,WAFM,EAGA//C,wBAASM,GAHT,mBAGpB4R,EAHoB,KAGbC,EAHa,KAIrBs7B,EAAM,uCAAG,8BAAAtyC,EAAA,yDACP+W,EADO,uBAETmsB,EAAS,6BAFA,iCAKLjsB,EAAQ,IAAIrW,cALP,SAMOqW,EAAMpW,KAAKC,UAAakkD,WAAY,CAAE7tC,QAASJ,IANtD,UAOQ,OADbvV,EANK,QAOHkG,OAPG,wBAQPnG,EAAQ0jD,WAAWzjD,GACnBojD,EAAW,QATJ,2BAYX1hB,EAAS1hC,EAAIG,SAZF,4CAAH,qDAeZ,OAAO+4B,EAAG,CACNh1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,wBAC5BwrC,SACAuS,UAAW,oCACP,kBAAC,IAAKp+C,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,kBAClCvF,EAAQM,cAAR,SAAoC,eAEzC,kBAAC,IAAK4E,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,YACnC,kBAAC+P,GAAD,CAAkBO,UAAYL,IAAaC,EAAUD,UC1BrE,SAASmuC,GAAa5gD,GAAQ,MAAD,EAEWogD,KAA5BhqB,EAFiB,EAEjBA,GAAIwI,EAFa,EAEbA,SAAS0hB,EAFI,EAEJA,WAFI,EAGgB/f,GAAe,CACpDC,aAAavjC,EAAQM,cAAR,eAA0C,KADjDsjD,EAHe,EAGlBzqB,GAAmB0qB,EAHD,EAGLn8C,MAGdqpC,EAAM,uCAAG,8BAAAtyC,EAAA,yDACPolD,EADO,uBAETliB,EAAS,6BAFA,iCAKLjsB,EAAQ,IAAIrW,cALP,SAMOqW,EAAMpW,KAAKC,UAAakkD,WAAY,CAAEK,cAAeD,IAN5D,UAOQ,OADb5jD,EANK,QAOHkG,OAPG,wBAQPnG,EAAQ0jD,WAAWzjD,GACnBojD,EAAW,QATJ,2BAYX1hB,EAAS1hC,EAAIG,SAZF,4CAAH,qDAeZ,OAAO+4B,EAAG,CACNh1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,sBAC5BwrC,SACAuS,UAAW,oCACP,kBAAC,IAAKp+C,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,kBAClCs+C,GAEL,kBAAC,IAAK3+C,KAAN,CAAW4C,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,YAClCq+C,QCjCjB,SAASG,GAAMhhD,GAAQ,MAAD,EAEUO,wBAASM,GAFnB,mBAEXoP,EAFW,KAEHuvC,EAFG,KAGZ7sC,EAAQ,IAAIrW,cAHA,EAIyCshD,GAAa,CACpE5P,OAAO,WAAD,4BAAE,YAAO,OAAEzlC,EAAF,WAAUiK,IAAjB,eAAA9W,EAAA,sDAGJ,IAFA8W,GAAW,GACXosB,OAAS/9B,GACAylB,EAAI,EAAGA,EAAI/d,EAAOoI,OAAQ2V,KAQnCk5B,EAAUx4B,GAAMO,cAChB/U,GAAW,GAZP,2CAAF,mDAAC,GAcP8N,aAAc,KAfV8V,EAJU,EAIVA,GAAI1lB,EAJM,EAINA,QAASstC,EAJH,EAIGA,UAAWG,EAJd,EAIcA,cAAevf,EAJ7B,EAI6BA,SA6B/C,OAXA19B,oBAAU,MACK,uCAAG,4BAAAxF,EAAA,sEACQiX,EAAM/U,IAAIpB,UAAaykD,UAAW,IAD1C,OAES,OADb/jD,EADI,QAEFkG,SACJ46C,EAAU9gD,EAAIG,QAAQ4kC,QACtBvxB,EAAQxT,EAAIG,QAAQ1B,OAJd,2CAAH,qDAOX6O,IACD,CAACyF,IAEG,yBAAKrL,UAAU,iBAClB,kBAAC,KAAD,CAAQ84C,gBAAgB,YAAYC,kBAAkB,YAAY5qC,SAC7Dqa,IACG+wB,EAAc/wB,MAGtB,kBAAC,IAAD,CAAS3tB,KAAK,eACb22B,KCxCT,SAAS8qB,KAAS,MAAD,EAC8Bd,KAAnChqB,EADK,EACLA,GAAIwI,EADC,EACDA,SAAU0hB,EADT,EACSA,WAAY5tB,EADrB,EACqBA,KAC5Bsb,EAAM,uCAAG,4CAAAtyC,EAAA,+DACoCg3B,EAAK8J,iBAA9C2kB,EADK,EACLA,KAAMC,EADD,EACCA,KAAMxnB,EADP,EACOA,GAAIz8B,EADX,EACWA,KAAM6F,EADjB,EACiBA,UAAUnG,EAD3B,EAC2BA,QAElCA,EAAO+8B,GAENwnB,IACDA,EAAO,QAELzuC,EAAQ,IAAIrW,cARP,SASOqW,EAAMpW,KAAKC,UAAa6kD,OAAQ,CAC9CF,OAAMC,OAAMxnB,KAAIz8B,OAAM6F,WAAUnG,OAAMuhB,OAAQ,OAAOkjC,MAAM,UAVpD,OAWQ,OAFbpkD,EATK,QAWHkG,OACJk9C,EAAW,0BAEX1hB,EAAS1hC,EAAIG,SAdN,2CAAH,qDAkBZ,OAAO+4B,EACH,CACIh1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,kBAC5BwrC,SACAuS,UAAW,oCACP,kBAAC,IAAKp+C,KAAN,CAAWtF,KAAK,OAAOoI,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,UAC/D,kBAAC,IAAD,CAAOwnB,YAAY,eAEvB,kBAAC,IAAK7nB,KAAN,CAAWtF,KAAK,OAAO2jC,aAAc,OAAQz7B,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,UACrE,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,KAAKoI,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,QAC7D,kBAAC,IAAD,OAEJ,kBAAC,IAAD,MACA,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,OAAOoI,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,UAC/D,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,WAAWoI,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,cACnE,kBAAC,IAAD,OAEJ,kBAAC,IAAD,MACA,kBAAC,IAAKL,KAAN,CAAWtF,KAAK,OAAOkI,MAAO,kBAAC,IAAD,CAAkBvC,GAAG,WAC/C,kBAAC,IAAD,UC3CpB,SAAS++C,KAAa,MAAD,EACWhhD,wBAASM,GADpB,mBACVoP,EADU,KACFuvC,EADE,KAEX7sC,EAAQ,IAAIrW,cAFD,EAG0CshD,GAAa,CACpE5P,OAAO,WAAD,4BAAE,YAAO,OAAEzlC,EAAF,WAAUiK,IAAjB,eAAA9W,EAAA,sDAGJ,IAFA8W,GAAW,GACXosB,OAAS/9B,GACAylB,EAAI,EAAGA,EAAI/d,EAAOoI,OAAQ2V,KAQnCk5B,EAAUx4B,GAAMO,cAChB/U,GAAW,GAZP,2CAAF,mDAAC,GAcP+T,OAAO,WAAD,4BAAE,WAAM1a,GAAN,eAAAnQ,EAAA,sEACciX,EAAMpW,KAAKC,UAAaglD,UAAU,CAACh/C,GAAGqJ,EAAIrJ,KADxD,OAEc,OADZtF,EADF,QAEGkG,SACH46C,EAAU9gD,EAAIG,QAAQ4kC,QACtBvxB,EAAQxT,EAAIG,QAAQ1B,OAJpB,2CAAF,mDAAC,GAOP2kB,aAAc,KAtBV8V,EAHS,EAGTA,GAAI1lB,EAHK,EAGLA,QAASstC,EAHJ,EAGIA,UAAWG,EAHf,EAGeA,cAAevf,EAH9B,EAG8BA,SAoC/C,OAXA19B,oBAAU,MACK,uCAAG,4BAAAxF,EAAA,sEACQiX,EAAM/U,IAAIpB,UAAailD,QAAS,IADxC,OAES,OADbvkD,EADI,QAEFkG,SACJ46C,EAAU9gD,EAAIG,QAAQ4kC,QACtBvxB,EAAQxT,EAAIG,QAAQ1B,OAJd,2CAAH,qDAOX6O,IACD,CAACyF,IAEG,yBAAKrL,UAAU,iBAClB,kBAAC,KAAD,CAAQ84C,gBAAgB,YAAYC,kBAAkB,YAAY5qC,SAC7Dqa,IACG+wB,EAAc/wB,MAGtB,kBAAC,IAAD,CAAS3tB,KAAK,eACb22B,K,MC1CD12B,GAAYC,IAAZD,QACR,SAASgiD,KAAY,MAAD,EACsBnhD,mBAAS,mBAD/B,mBACTnE,EADS,KACIulD,EADJ,KAEhB,OACI,yBAAK/8C,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CACIxC,MAAO,CAAE4Q,MAAO,KAChBitC,oBAAqB,CAAC,mBACtBC,gBAAiB,CAAC,qBAClBh+C,KAAK,UAEL,kBAAC,GAAD,CACIL,IAAI,oBACJT,MACI,8BACI,kBAAC++C,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkB39C,GAAG,yBAInC,kBAAC,IAAKL,KAAN,CAAWN,IAAI,kBAAkBD,QAAS,KACtC+/C,EAAe,qBAChB,kBAAC,IAAD,CAAkBn/C,GAAG,gBACxB,kBAAC,IAAKL,KAAN,CAAWN,IAAI,cAAcD,QAAS,KAClC+/C,EAAe,iBAChB,kBAAC,IAAD,CAAkBn/C,GAAG,kBAE5B,kBAAC,GAAD,CAASX,IAAI,OAAOT,MAChB,8BACI,kBAAC++C,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkB39C,GAAG,qBAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,wBAGXD,QAAS,KACL+/C,EAAe,2BAChB,kBAAC,IAAD,CAAkBn/C,GAAG,sBAGhC,kBAAC,GAAD,CAASX,IAAI,OAAOT,MAChB,8BACI,kBAAC++C,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkB39C,GAAG,YAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,eACXD,QAAS,KACL+/C,EAAe,kBAChB,kBAAC,IAAD,CAAkBn/C,GAAG,mBAEhC,kBAAC,GAAD,CAASX,IAAI,aAAaT,MACtB,8BACI,kBAAC++C,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkB39C,GAAG,kBAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,QACXD,QAAS,KACL+/C,EAAe,WAChB,kBAAC,IAAD,CAAkBn/C,GAAG,mBAC5B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,aACXD,QAAS,KACL+/C,EAAe,gBAChB,kBAAC,IAAD,CAAkBn/C,GAAG,mBAKxC,yBAAKoC,UAAU,kBACM,oBAAhBxI,GAAqC,kBAACqkD,GAAD,MACrB,gBAAhBrkD,GAAiC,kBAACwkD,GAAD,MACjB,0BAAhBxkD,GAA2C,kBAAC,GAAD,MAC3B,iBAAhBA,GAAkC,kBAAC4kD,GAAD,MAClB,UAAhB5kD,GAA2B,kBAAC8kD,GAAD,MACX,eAAhB9kD,GAAgC,kBAACmlD,GAAD,QC1EjD,MAAMj9C,GAAY,CACdlI,YAAa,QACbU,SAAS,GAGPwD,GAAoBT,IAAMC,gBAEhC,SAAS8hD,GAAW5hD,GAAQ,MACjBG,EAAWH,EAAXG,QADgB,EAEIuE,0BAAgBnF,EAAmB+E,GAAWjF,GAFlD,mBAEhBG,EAFgB,KAETY,EAFS,KAGfhE,EAAyBoD,EAAzBpD,YAAaU,EAAY0C,EAAZ1C,QAMrB,OAJAoE,oBAAU,KACNd,EAAU7E,IAAYiG,WAAWtC,EAAsBE,cAAe,MACvE,IAGC,kBAACkB,GAAkBa,SAAnB,CAA4BwD,MAAO,CAAEvE,cACjC,yBAAKwE,UAAU,eACX,yBAAKA,UAAU,sBACX,kBAAC7E,EAAD,CAAeI,QAASA,EAASF,YAAanD,EAASoD,YAAajD,EAAQ0D,UAAWvE,YAAaA,KAExG,yBAAKwI,UAAU,oBACM,aAAhBxI,GAA8B,kBAAC,GAAD,MACd,aAAhBA,IAA+BU,GAAW,kBAACuI,GAAD,MAC1B,YAAhBjJ,GAA6BU,GAAW,kBAAC,GAAD,MACxB,aAAhBV,GAA8BU,GAAW,kBAAC,GAAD,MACzB,UAAhBV,GAA2BU,GAAWG,EAAQ0D,WAAa,kBAAC,GAAD,MAC3C,aAAhBvE,GAA8BU,GAAW,kBAAC4kD,GAAD,OAE9C,yBAAK98C,UAAU,sBACX,yBAAKxC,MAAO,CAAE8a,OAAQ,QAAS2kC,UAAW,SAAU7uC,MAAO,SAA3D,0DAC2D,uBAAGpO,UAAU,YAChE4pB,KAAK,gCAD8C,iCAEvD,iCAAM,uBAAGzO,OAAO,SACZyO,KAAK,+EAA8E,yBAC/EkqB,IAAI,KAFN,4D,SC7CyCn9C,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,uBAAAC,EAAA,6DACtFW,EAAS,IAAIC,cADyE,EAEtEb,EAAOE,KAArBkB,EAFoF,EAEpFA,KAAM+K,EAF8E,EAE9EA,IAF8E,SAG1EvL,EAAOE,KAAKC,UAAaijD,WAAY,CAAE5iD,OAAM+K,QAH6B,UAIzE,OADb1K,EAHsF,QAIpFkG,OAJoF,yCAKjF,CACHzH,KAAM,CACFuH,MAAOpF,KAAKO,MAAMnB,EAAIG,SAASgG,OAPiD,gCAWrF,CACH1H,KAAM,CACFuH,WAAOrC,EACPL,QAAS/E,EAAOsD,QAAQyB,QAAU,KAdkD,2CAAzB,uDAAjDshD,G,GAARjmD,QAAsCkmD,G,GAAPtmD,O,GCDkCF,IAAYC,aAAZ,uCAAyB,WAAOC,GAAP,SAAAC,EAAA,+EAC7F,CACHC,KAAM,CACFuH,WAAOrC,EACPL,QAAS/E,EAAOsD,QAAQyB,QAAU,KAJ0D,2CAAzB,uDAAzDwhD,G,GAARnmD,QAA0ComD,G,GAAPxmD,OCCjD,MAAMymD,OACKC,cAAc,gBADnBD,GAEKE,UAAY,YAFjBF,GAGKG,cAAgB,gBAG3B,MAAMC,GAA0B,CAC5B,CAACJ,GAAoBC,eAAgB5+C,EACrC,CAAC2+C,GAAoBE,WAAYN,GACjC,CAACI,GAAoBG,eAAgBL,IAGzC,SAASO,GAAgB/iD,EAAO/D,GAC5B,OAAQA,EAAOgE,MACX,KAAKyiD,GAAoBC,cACrB,OAAO3+C,EAAehE,EAAO/D,EAAOE,MACxC,KAAKumD,GAAoBE,UACrB,OAAOL,GAAgBviD,EAAO/D,EAAOE,MACzC,KAAKumD,GAAoBG,cACrB,OAAOJ,GAAoBziD,EAAO/D,EAAOE,MAC7C,QACI,OAAO6D,G,eCsCJgjD,OAxDf,WAA6B,MAEjBpiD,EAAcC,qBAAWoiD,IAAzBriD,UAFgB,EAGenD,EAAQwH,cAAvClG,EAHgB,EAGhBA,eAAgBM,EAHA,EAGAA,WAExB,OAAO,kBAAC,IAAD,iBAAUN,EAAV,CAA0BqG,UAAU,aAAaC,SAAWC,IAC/D1E,EAAU,CACNX,KAAMyiD,GAAoBC,cAC1BxmD,KAAMmJ,OAIV,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAEJ,kBAAC,IAAKjC,KAAN,CACI4C,MAAM,WACNlI,KAAK,WACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAN,CACI4C,MAAM,oBACNlI,KAAK,YACLmI,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK/C,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAU0F,SAAS,UAAhC,SCOGu9C,OAxDf,WAAuB,MAEXtiD,EAAcC,qBAAWoiD,IAAzBriD,UAFU,EAGkBnD,EAAQwH,cAArClG,EAHW,EAGXA,eAAeM,EAHJ,EAGIA,WAChB8jD,EAAe,CAAE19C,UAAU,EAC7Bb,QAAS,YAEb,OAAO,kBAAC,IAAD,iBAAU7F,EAAV,CAA0BqG,UAAU,aAAaC,SAAWC,IAC/D1E,EAAU,CACNX,KAAMyiD,GAAoBE,UAC1BzmD,KAAMmJ,OAGV,kBAAC,IAAK3C,KAAN,CACI4C,MAAM,cACNlI,KAAK,OACLmI,MAAO,CAAC29C,IAER,kBAAC,IAAD,OAGJ,kBAAC,IAAKxgD,KAAN,CACI4C,MAAM,aACNlI,KAAK,MACLmI,MAAO,CAAC29C,IAER,kBAAC,IAAD,OAGJ,kBAAC,IAAKxgD,KAAN,CACI4C,MAAM,eACNlI,KAAK,eAEL,kBAAC,IAAD,OAGJ,kBAAC,IAAKsF,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAU0F,SAAS,UAAhC,MAGJ,kBAAC,IAAD,CAAS1F,KAAK,aACd,kBAAC,IAAD,CAAQmC,QACHtD,IACCA,EAAEyD,iBACF3B,EAAU,CACRX,KAAMyiD,GAAoBG,cAC1B1mD,KAAM,MAGZwJ,SAAS,UARX,W,SC7CwE5J,IAAYC,aAAcC,IAC/F,CAAEE,KAAMF,EAAOE,QADHinD,G,GAAT/mD,QAA2CgnD,G,GAAPpnD,O,GAIoBF,IAAYC,aAAcC,IACrF,CAAEE,KAAM,CAACmnD,eAAe,MADXC,G,GAATlnD,QAAsCmnD,G,GAARvnD,O,GAI4BF,IAAYC,aAAcC,IACxF,CAAEE,KAAM,CAACmnD,eAAe,MADZG,G,GAARpnD,QAAuCqnD,G,GAARznD,OCT9C,MAAM0nD,OAEKC,WAAa,YAFlBD,GAGKE,SAAW,UAHhBF,GAIKL,cAAgB,gBAG3B,MAAMQ,GAAqB,CACvB,CAACH,GAAeE,UAAWN,GAC3B,CAACI,GAAeC,YAAaH,GAC7B,CAACE,GAAeL,eAAgBF,IAGpC,SAASW,GAAW/jD,EAAO/D,GACvB,OAAQA,EAAOgE,MACX,KAAK0jD,GAAeE,SAChB,OAAOL,GAAcxjD,EAAO/D,EAAOE,MACvC,KAAKwnD,GAAeC,WAChB,OAAOF,GAAgB1jD,EAAO/D,EAAOE,MACzC,KAAKwnD,GAAeL,cAChB,OAAOD,GAAoBrjD,EAAO/D,EAAOE,MAC7C,QACI,OAAO6D,GCmBJgkD,OApCf,WAAiB,MAELpjD,EAAcC,qBAAWojD,IAAzBrjD,UAFI,EAGwBnD,EAAQwH,cAArClG,EAHK,EAGLA,eAAeM,EAHV,EAGUA,WACtB,OAAO,oCACH,kBAAC,IAAD,CACIuF,QAAQ,iBACRzC,YAAY,gDACZlC,KAAK,YAET,kBAAC,IAAD,MACA,kBAAC,IAASlB,EACN,kBAAC,IAAK4D,KAAStD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUmC,QACnB,KACIxB,EAAU,CACNX,KAAM0jD,GAAeE,SACrB1nD,KAAM,OAJlB,oBAQA,kBAAC,IAAD,CAAS8D,KAAK,aACd,kBAAC,IAAD,CAAQmC,QACJ,KACIxB,EAAU,CACNX,KAAM0jD,GAAeC,WACrBznD,KAAM,OAJlB,0B,+bCrBRuqC,GAASC,KAATD,KAEFwd,GAAoB1/C,KAAOC,IAAV,MAOjB0/C,GAAiB3/C,KAAOC,IAAV,MAKd2/C,GAAe5/C,KAAOC,IAAV,MAMZK,GAAY,CACdpB,WAAOrC,EACPL,QAAS,GAEPiiD,GAAkB5iD,IAAMC,gBAiDf+jD,OA/Cf,WAAqB,MAAD,EAEWn/C,0BAAgB69C,GAAiBj+C,GAAWg+C,IAFvD,mBAET9iD,EAFS,KAEFY,EAFE,KAIR8C,EAAmB1D,EAAnB0D,MAAO1C,EAAYhB,EAAZgB,QAEf,OACI,kBAACiiD,GAAgBthD,SAAjB,CAA0BwD,MAAO,CAAEvE,cAC/B,kBAACsjD,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,KAAD,CAAYviD,MAAM,oCAEtB,kBAAC,IAAD,MACA,kBAACwiD,GAAD,KACI,kBAAC,KAAD,CAAOpjD,QAASA,GACZ,kBAAC,GAAD,CAAMY,MAAM,sBAAsBO,YAAY,uBAC9C,kBAAC,GAAD,CAAMP,MAAM,cAAcO,YAAY,6BACtC,kBAAC,GAAD,CAAMP,MAAM,OAAOO,YAAY,mBAEnC,kBAAC,IAAD,MACCuB,GAAS,kBAAC,IAAD,CACNkB,QAAQ,UACRzC,YAAauB,EACbzD,KAAK,QACL0E,UAAQ,IAGI,IAAZ3D,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,OAIQ,IAAZA,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,OAIQ,IAAZA,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,W,oBCHbsjD,OArED,CACVz8C,MAAO,eACPM,SAAU,eACVX,QAAS,qBACT+8C,kBAAmB,2BACnBC,SAAU,eACVC,MAAO,qBACPC,KAAM,eACN1hB,MAAO,eACP2hB,oBAAqB,iCACrBC,0BAA2B,qEAC3BC,WAAY,2BACZC,aAAc,qBACdC,OAAQ,eACRC,KAAM,eACNC,eAAgB,eAChBC,YAAa,2BACbC,kBAAmB,iFACnBC,eAAgB,qBAChBC,WAAY,qBACZC,YAAa,2BACbC,QAAS,eACT1yC,OAAQ,eACR9H,KAAM,eACNvO,OAAQ,eACR8S,KAAM,qBACNk2C,MAAO,eACPtb,IAAK,eACLub,MAAO,eACPC,eAAgB,2BAChBC,eAAgB,iCAChBC,kBAAmB,2BACnBC,kBAAmB,uCACnBC,KAAM,eACNC,cAAe,qBACfC,WAAW,qBACXC,cAAc,2BACdC,gBAAgB,2BAChBC,KAAK,eACLC,aAAc,2BACdC,WAAY,qBACZC,eAAgB,mDAChBC,YAAa,qDACbC,UAAW,qDACXC,aAAc,iCACdC,GAAI,eACJC,iBAAkB,+GAClBC,SAAU,oBACVjF,KAAM,qBACNC,KAAM,eACNxnB,GAAI,2BACJz8B,KAAM,qBACN6F,SAAU,eACVqjD,MAAO,eACPC,cAAe,qBACfC,WAAY,oBACZC,MAAO,QACPvpB,gBAAgB,qBAChBuC,WAAW,qBACXC,WAAW,qBACXgnB,cAAc,qBACdC,eAAe,kDACfC,kBAAkB,2KAClBzgC,IAAK,eACL0gC,GAAI,SACJC,kBAAkB,+BAClBC,YAAa,gCCEFC,I,qBCrDf,MAAMziD,GAAY,CACdw+C,eAAe,EACf90C,SAAS,EACTkf,KAAM,KACNxqB,eAAe,GAEb+gD,GAAa5jD,IAAMC,gBAqCVknD,OApCf,WAAgB,MAAD,EACgBtiD,0BAAgB6+C,GAAYj/C,GAAWg/C,IADvD,mBACJ9jD,EADI,KACGY,EADH,KAEH0iD,EAA8CtjD,EAA9CsjD,cAAe90C,EAA+BxO,EAA/BwO,QAAQkf,EAAuB1tB,EAAvB0tB,KAAKxqB,EAAkBlD,EAAlBkD,cAFzB,4CAIX,8BAAAhH,EAAA,6DACUW,EAAS,IAAIC,cADvB,SAE0BD,EAAOuB,IAAIpB,UAAa+gD,SAAU,IAF5D,OAG2B,OADjBp9C,EAFV,QAGgBiD,QACRhD,EAAU,CACNX,KAAM0jD,GAAeL,cACrBnnD,KAAM,CACFmnD,cAAe3iD,EAAQ9C,QAAQ4pD,WAC/BvkD,cAAevC,EAAQ9C,QAAQ2J,UAAW,EAC1CgH,SAAS,KATzB,4CAJW,sBAuBX,OAJA9M,oBAAU,MAnBC,mCAoBPs8C,IACD,IAGC,kBAAC,KAAD,CAAc0J,OAAQh6B,EAAMi6B,SAAUrD,IACtC,kBAAC,KAAD,CAAgBoD,OAAQE,MACpB,kBAAC3D,GAAWtiD,SAAZ,CAAqBwD,MAAO,CAAEvE,cACzB4N,GAAW,kBAAC,GAAD,OACVA,IAAY80C,GAAiB,kBAAC,GAAD,OAC7B90C,GAAW80C,GAAiB,kBAAC,GAAD,CAAY3iD,QAAS,CAACuC,uBC1CpE2kD,IAAS91C,OACL,kBAAC,GAAD,MAAQ+c,SAASg5B,eAAe,SrMmH9B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7gD,KAAK8gD,IACjCA,EAAaC,gB,kEsMpGJpsD,IA3Bf,MACI,oBAAoBqsD,GAChB,MAAO,CACH/rD,QAAS,EAAGgsD,WAAUC,WAAUC,aAC5B,MAAM3nD,EAAYynD,EAClB,8CAAO,WAAOpsD,GAAP,eAAAC,EAAA,sEACgBksD,EAAc,2BAAKnsD,GAAN,IAAcsD,QAAS+oD,OADpD,OACGnsD,EADH,OAEHyE,EAAU,aACNX,KAAMhE,EAAOgE,MACV9D,IAJJ,2CAAP,mDAAM,IAQVF,OAAQ,CAAC+D,EAAO7D,IACL,2BAAK6D,GAAU7D,IAKlC,kBAAkBkB,EAAM0L,GACpB,MAAO,CACH9I,KAAM5C,EACNlB,KAAM4M,M,6HCnBX,MAAMy/C,KACFC,UAAY,WADVD,EAEFE,QAAU,SAFRF,EAGFG,YAAc,cAHZH,EAIFI,YAAc,eCJlB,MAAMC,EACTngD,YAAY9E,EAAQ/F,EAAQoT,GACxBjJ,KAAKpE,OAASA,EACdoE,KAAKnK,QAAUA,EACfmK,KAAK9J,KAAO+S,GAIb,MAAM63C,EAETpgD,YAAYN,EAAK2gD,EAAe,IAC5B/gD,KAAKI,IAAMA,EACNJ,KAAKI,MACNJ,KAAKI,IAAM4gD,KAEfhhD,KAAK+gD,aAAeA,EAGlB7hD,QAAQjL,EAAQ8M,EAAQuB,EAAS,OAAQ,IAAD,4IAa1C,IAASG,KAZTH,EAASA,EAAOC,eACV3M,EAAWV,eAAe0B,QAAQ4pD,EAAiBC,cAGrD1/C,EAAOy/C,EAAiBC,WAAa7qD,GAOrC4M,EAAW,GACMzB,EACb2B,EAAaC,mBAAmBF,GAChCG,EAAeD,mBAAmB5B,EAAO0B,IAC7CD,EAASK,KAAKH,EAAa,IAAME,GAhBK,OAkBtCE,EAAS,EAAK1C,IAAMnM,EAEpBuO,EAAS2G,OAAS,IAClBrG,GAAkB,KAGP,QAAXR,GACAQ,GAAkBN,EAASO,KAAK,KAChCP,OAAWnJ,GAEXmJ,EAAWA,EAASO,KAAK,KAGvBk+C,EAAe,CACjB3+C,OAAQA,EACRW,QAAS,MACT9M,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBjB,eAAe0B,QAAQxB,MAAgB,IAE3DiL,KAAMmC,GAGJ0+C,EA1CoC,2BA0ChBD,GAAiB,EAAKF,cA1CN,oBA6Cf/9C,MAAMF,EAAQo+C,GA7CC,YA6ChCj4C,EA7CgC,QA8CxB/H,GA9CwB,kCA+Cd+H,EAAS/F,OA/CK,eA+C5BxH,EA/C4B,yBAgD3B,IAAImlD,EAAa53C,EAASrN,OAAQF,IAhDP,yBAkDnBuN,EAAStJ,OAlDU,eAkDhCA,EAlDgC,yBAmD/B,IAAIkhD,EAAa,IAAKlhD,EAAKsJ,IAnDI,4DAqD/B,IAAI43C,EAAa,IAAjB,UAA0BxnD,IArDK,8D,YChB3C,MAAMvE,EAEX4L,cACEV,KAAKqL,QAAU,IAAIy1C,EAGflrD,WAAY,IAAD,wIACG,EAAKQ,IAAIpB,UAAayrD,UAAW,IADpC,cACT/qD,EADS,yBAERA,GAFQ,6CAKX4L,UAAUrD,EAAKwD,EAASV,GAAS,IAAD,kJAClB,EAAKnL,WADa,UAEjB,OADbF,EAD8B,QAE5BkG,OAF4B,yCAG3BlG,GAH2B,gBAKFA,EAAIG,QAA9BD,EAL4B,EAK5BA,SAAUI,EALkB,EAKlBA,YAEZ4L,EAAc,CAClB3D,IAAKA,EACL4D,MAAOjM,EACP6L,QAASA,EACTK,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMjM,GAAe,IAEvBkM,OAAOC,OAAOP,EAAab,GAhBS,UAiBjB,EAAKhM,KAAKC,UAAaqJ,IAAKuD,GAjBX,eAiB9BgiB,EAjB8B,yBAkB7BA,GAlB6B,8CA2BhCxtB,IAAInC,EAAQ8M,GAAS,IAAD,wIACN,EAAKsK,QAAQnM,QAAQjL,EAAQ8M,EAAQrC,IAAOyiD,KADtC,cAClBzrD,EADkB,yBAEjBA,GAFiB,6CAWpBX,KAAKd,EAAQ8M,GAAS,IAAD,wIACP,EAAKsK,QAAQnM,QAAQjL,EAAQ8M,EAAQrC,IAAO0iD,MADrC,cACnB1rD,EADmB,yBAElBA,GAFkB,8CAjDhBZ,EACJD,OAAS,IAAIC,G,gCCNtB,+CAAe,MAAME,KACVqJ,IAAM,qBADIrJ,EAEVyrD,UAAY,wBAFFzrD,EAGVkkB,SAAW,mBAHDlkB,EAIV8T,WAAa,cAJH9T,EAKVqQ,SAAW,mBALDrQ,EAOViT,iBAAmB,sBAPTjT,EASVuQ,gBAAkB,0BATRvQ,EAUVyQ,oBAAsB,6BAVZzQ,EAWV4mC,cAAgB,+BAXN5mC,EAYVs+B,sBAAwB,gCAZdt+B,EAcV+gD,SAAW,cAdD/gD,EAeVogD,SAAW,mBAfDpgD,EAiBV2G,SAAW,wBAjBD3G,EAkBViH,MAAQ,qBAlBEjH,EAmBVC,OAAS,sBAnBCD,EAqBVijD,WAAa,qBArBHjjD,EAsBVoW,YAAc,sBAtBJpW,EAwBVw6B,iBAAmB,sBAxBTx6B,EA0BV41B,gBAAkB,0BA1BR51B,EA4BVo3B,mBAAqB,6BA5BXp3B,EA8BVu8C,YAAc,sBA9BJv8C,EA+BV08C,WAAa,qBA/BH18C,EAiCVkkD,WAAa,4BAjCHlkD,EAkCVsjD,qBAAuB,yBAlCbtjD,EAoCV+lC,UAAY,yBApCF/lC,EAsCVykD,UAAY,eAtCFzkD,EAwCV6kD,OAAS,iBAxCC7kD,EAyCVilD,QAAU,kBAzCAjlD,EA0CVglD,UAAY,oBA1CFhlD,EA4CV+kC,aAAc,uBA5CJ/kC,EA8CVkjC,iBAAmB,+BA9CTljC,EA+CVwkC,qBAAuB,2B,qWC/ClC,sGAAO,MACMwnB,EADiB,GAIvB,MAAMtiD,KACFyiD,IAAM,MADJziD,EAEF0iD,KAAO,OAFL1iD,EAGF2iD,IAAM,MAHJ3iD,EAIFw1B,OAAU,SAGd,MAQM9+B,EAAc,CACvBC,KAAM,kB","file":"static/js/main.425e7d7c.chunk.js","sourcesContent":["import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption)\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../analysis/common/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal'\nimport { FormattedMessage  } from 'react-intl'; \nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin,appInfo } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n\n    const [enableConsole,setEnableConsole] = useState(false)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);    \n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => { \n                if(e.key === \"home\"){\n                    e.domEvent.preventDefault()\n                    e.domEvent.stopPropagation()\n                    return\n                }           \n                if (logined && current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item  key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                    <span style={{ fontSize: 11 }}>(Build 20200806.143114)</span>\n                </Menu.Item>\n                <Divider type=\"vertical\"></Divider>\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    <FormattedMessage id=\"login\"/>\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                     <FormattedMessage id=\"register\"/>                    \n                </Menu.Item>}\n\n                {logined && appInfo.enableConsole && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    <FormattedMessage id=\"console\"/>\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                   <FormattedMessage id=\"analysis_workshop\"/>                    \n                </Menu.Item>}\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"settings\"/>                    \n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"admin\"/>\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title={<FormattedMessage id=\"more\"/>}>\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message={props.title || \"Message\"} description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path){ \n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\":\"robot\"})\n        return res        \n    }\n\n    static async killJob(jobName){  \n        const res = await client.runScript(\"!kill \" + jobName+\";\", uuidv4(), {\"queryType\":\"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName:jobName})                        \n        return res\n    }\n\n    static async runJob(sql,block=false){        \n        const res = await client.runScript(sql, uuidv4(),{ \"async\": block}) \n        return res\n    }\n\n    static async showFunctions(){        \n        const res = await client.runScript(\"\",uuidv4(),{executeMode:\"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`,jobName ,{\"queryType\":\"robot\"}) \n        return {jobName,res} \n    }\n\n    static async tablesInDeltaLake(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`,jobName ,{\"queryType\":\"robot\"}) \n        return res\n    }\n\n    static async tablesInWorkshop(){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLES ,{}) \n        return res\n    }\n\n    static async tableInfo(tableName){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO ,{tableName}) \n        return res\n    }\n\n    static async jobProgress(jobName){\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})\n        const empty_res =  {currentJobIndex:0,totalJobs:1}\n        if(res.status===200){\n            const jsonObj = res.content[0]\n            if(!jsonObj){\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if(totalJobs===1){\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})                                \n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex               \n            }\n            return {currentJobIndex,totalJobs}\n        }\n        return empty_res\n    }\n\n    static async resourceInfo(){\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`,uuidv4(),{\"queryType\":\"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks,totalCores}\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()\n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,                \n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Progress, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={loading:false,progress:0}        \n    }\n\n    enter = (params) => {\n        this.setState({loading:true})  \n        this.intervalTimer = setInterval(async () => {                        \n            const jobName = this.queryPanel.executor.jobName\n            const {currentJobIndex,totalJobs} =  await EngineService.jobProgress(jobName)            \n            this.setState({progress:(currentJobIndex/totalJobs)*100})\n        },1000)\n    }\n\n    exit = () => {        \n        if(this.intervalTimer){            \n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null \n            this.finalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n            this.setState({loading:false})          \n        }\n    }\n\n    render() {\n        if(!this.state.loading) {\n            if(this.finalTime){\n                return <Button type=\"primary\" style={{margin:\"0px 0px 20px 0px\"}}>\n                   Time Cost: {this.finalTime}\n                </Button>\n            }else {\n                return <div></div>\n            }\n        }\n        return <div>                    \n            <Button type=\"primary\" style={{marginRight:\"20px\"}}>\n            Time Cost:<Timer ref={(et)=> this.timer =et}>        \n                <Timer.Minutes formatValue={value => `${value} m. `} /> \n                <Timer.Seconds formatValue={value => `${value} s. `}/>         \n            </Timer></Button>\n            <Progress type=\"circle\" percent={this.state.progress} />\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map(item=>{\n                return <Select.Option value={item.name}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        this.taskProgressRef.current.enter({jobName: jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        this.taskProgressRef.current.exit()        \n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.engineName = engine\n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    cleanSQL = (sql)=> {\n       try{\n        return sql.split(\"\\n\").filter(line=> !line.includes(\"password\")).join(\"\\n\")\n       }catch(e){\n        return sql\n       }\n       \n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.cleanSQL(this.state.detailConsoleMessage)||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","import React from 'react'\nimport AceEditor from \"react-ace\";\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n\n            />\n        )\n    }\n}","import React from 'react'\nimport { Icon } from '@ant-design/compatible';\n\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false, executeUnit: props.executeUnit}\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.state.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.isExecute ? <span onClick={this.cancelExecute}><Icon type=\"sync\" spin/></span> :\n                    <span onClick={this.evtExecute}><Icon type=\"caret-right\"/></span>\n            }\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            return <DataTable data={this.state.displayData} ref={(et) => this.displayTableRef = et}></DataTable>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\n\n\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n\n    render() {\n        return <div>\n            <CodeBlock initialCode={this.props.initialCode} ref={et => {\n                this.codeBlock = et\n            }} executeUnit={this}/>\n            <CommandGroup ref={et => {\n                this.commandGroup = et\n            }} executeUnit={this}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NodeBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {executeUnits: this.executeUnits}\n        this.engine = new Engine(5 * 60 * 1000)\n    }\n\n    createNewExecuteUnit = (initialCode) => {\n        return <ExecuteUnit parent={this} initialCode={initialCode} ref={et => this.addRef(et)}/>\n    }\n\n    addRef = (instance) => {\n        if (instance) {\n            this.executeUnitRefs.push(instance)\n        }\n    }\n\n    nextExecuteUnit = () => {\n        const isLastEmpty = () => {\n            return this.executeUnitRefs.slice(-1)[0].codeBlockIsEmpty()\n        }\n        if (!isLastEmpty()) {\n            this.executeUnits.push(this.createNewExecuteUnit())\n            this.setState({executeUnits: this.executeUnits})\n        }\n        this.saveNoteBook()\n    }\n\n    saveNoteBook = () => {\n        const value = this.executeUnitRefs.map((instance) => {\n            return instance.getCodeStr()\n        }).join(CODE_SPLITTER)\n\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    text = (value, scriptId) => {\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value && value !== \"undefined\") {\n            this.executeUnitRefs = []\n            this.executeUnits = this.initialCode.split(CODE_SPLITTER).map((initialCode) => {\n                return this.createNewExecuteUnit(initialCode)\n            })\n            this.setState({executeUnits: this.executeUnits})\n        }\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.executeUnits\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NodeBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabName, callback) => {    \n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NodeBook parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static quote = (str)=>{\n        if(!str) return str\n        return `\"${Tools.escapeQuote(str)}\"`\n    }\n\n    static unQuote = (str) => {\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true\n        }\n    }\n\n    static keyPath(key,data,func){\n        let keyQuote = key\n        func(keyQuote)\n        if(typeof data === \"object\"){            \n            Object.keys(data).forEach(k=>{                 \n                Tools.keyPath(`${keyQuote}['${k}']`,data[k],func)\n            })            \n        }       \n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }\n\n    static distinct = (arrays, field) => {\n        if(!field){\n         return [...new Set(arrays)]\n        }\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"./actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()    \n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    convert = (item) => {                \n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id || node.key\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };               \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, { useRef, useCallback, useEffect } from 'react';\nimport { Tree, Modal, Menu, Form, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DownOutlined, FileOutlined, FolderOutlined, DeleteOutlined, FileAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames } from './actions/ScriptTreeReducer';\nimport { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport { useContextMenuCallback, useContextMenu } from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\n\nconst { DirectoryTree } = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const { consoleApp } = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const { loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return a.id - b.id\n            })\n\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const { id } = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu >\n                <Menu.Item icon={<FolderAddOutlined />} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu >\n                <Menu.Item onClick={() => {                    \n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu >\n            <Menu.Item icon={<FileAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined />} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n\n    return (\n        <ScriptTreeContext.Provider value={{ dispacher }}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: { operateModal: false }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n                <DirectoryTree height={700}\n                    onExpand={(expandedKeys) => {                        \n                        dispacher({\n                            type: ScriptTreeActionNames.expand,\n                            data: { expandedKeys }\n                        })\n                    }}\n                    autoExpandParent={true}\n                    expandedKeys={\n                        expandedKeys\n                    }\n                    onDoubleClick={(evt, node) => {\n                        dispacher({\n                            type: ScriptTreeActionNames.openScriptFile,\n                            data: { consoleApp, node }\n                        })\n                    }}\n                    expandAction=\"click\"\n                    onRightClick={popContextMenu}\n                    switcherIcon={<DownOutlined />}\n                    treeData={nodes}></DirectoryTree>}\n                    \n        </ScriptTreeContext.Provider>\n    )\n}\nexport { ScriptTree, ScriptTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport MLSQLAceEditor from './MLSQLAceEditor'\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport ExecuteUnit from \"./notebook/ExecuteUnit\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\n\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {sqlContent: \"\", displayEditor: \"normal\"}\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n\n        } else {\n            this.editorGroup.current.addFull(script.name, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          //AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree height={700} loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport EngineService from \"../../../service/EngineService\"\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n        const dbs = {}\n        res.content.forEach(item => {\n            if (!dbs[item.sessionId]) {\n                dbs[item.sessionId] = [item.tableName]\n            } else {\n                dbs[item.sessionId].push(item.tableName)\n            }\n        })\n        return {\n            data: {\n                dbs,...action.data\n            }\n        }\n    }\n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:OpenActionHandler,action:OpenAction} = ActionMaker.buildHandler(async (action)=>{\n    const {openTable,workshop} = action.data    \n    workshop.newSession(\"temp\",\"\",openTable)                     \n    return {        \n        data: {}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:DeleteActionHandler,action:DeleteAction} = ActionMaker.buildHandler(async (action)=>{\n    const {id} = action.data\n    const proxy = new ActionProxy()\n    await proxy.get(RemoteAction.ANALYSIS_TABLE_DELETE,{tableName:id})\n    return {        \n        data: {\n            reloading: Tools.getJobName()           \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: ExportToActionHandler, action: ExportToAction } = ActionMaker.buildHandler(async (action) => {\n    const { targetPath, workshop } = action.data\n    const { exportTable } = action.__state\n    const { name: openTable, type } = exportTable\n\n    const { sql, tableName } = await workshop.buildLoadSQL(\"temp\", \"\", openTable)\n\n    const runSql = (name) => {\n        proxy.runScript(`\n             ${sql}\n             save ignore ${tableName} as ${name}.\\`${targetPath}\\`;\n            `, Tools.getJobName(), { async: true })\n    }\n    const proxy = new ActionProxy()\n    switch (type) {\n        case \"hive\":\n            runSql(\"hive\")\n            break\n        case \"file\":\n            runSql(\"parquet\")\n            break\n        case \"delta\":\n            runSql(\"delta\")\n            break\n\n    }\n\n    return {\n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler, LoadAction } from './LoadAction'\nimport { OpenActionHandler, OpenAction } from './OpenAction'\nimport { DeleteActionHandler, DeleteAction } from './DeleteAction'\nimport { ExportToActionHandler, ExportToAction } from './ExportToAction'\nclass WorkshopTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static DELETE = \"delete\"\n    static EXPORT_TO = \"exportTo\"\n}\nconst WorkshopTablesHandlers = {\n    ...CommonHandlers,\n    [WorkshopTablesActionNames.LOAD]:LoadActionHandler,\n    [WorkshopTablesActionNames.OPEN]:OpenActionHandler,\n    [WorkshopTablesActionNames.DELETE]:DeleteActionHandler,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToActionHandler,\n\n}\nconst WorkshopTablesActions = {\n    ...CommonActions,\n    [WorkshopTablesActionNames.LOAD]:LoadAction,\n    [WorkshopTablesActionNames.OPEN]:OpenAction,\n    [WorkshopTablesActionNames.DELETE]:DeleteAction,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToAction,\n}\n\nfunction WorkshopTablesReducer(state, action) {\nreturn WorkshopTablesActions[action.type](state, action.data)    \n}\nexport { WorkshopTablesActionNames, WorkshopTablesReducer, WorkshopTablesHandlers }","import React, { useState, useRef, useEffect } from 'react';\nimport { Tree, Spin, Menu, Form, Modal, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WorkshopTablesReducer, WorkshopTablesHandlers, WorkshopTablesActionNames } from './actions/WorkshopTablesReducer';\nimport { TableOutlined, DeleteOutlined, CloudUploadOutlined, FolderOpenOutlined, ContainerOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nconst { TreeNode, DirectoryTree } = Tree;\nconst { SubMenu } = Menu;\n\nconst initState = {\n    dbs: {},\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n\n    exportTo: false,\n    exportTable: {\n        name: undefined,\n        type: undefined\n    }\n\n}\n\nconst WorkshopTablesContext = React.createContext()\n\nfunction WorkshopTables(props) {\n    const { workshop, reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(WorkshopTablesReducer, initState, WorkshopTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        exportTo, exportTable\n    } = state\n    const contextMenuRef = useRef()\n\n    const [exportForm] = Form.useForm()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.OPEN,\n                    data: {\n                        openTable: id,\n                        workshop\n                    }\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: false\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n\n            <SubMenu icon={<ContainerOutlined />} title=\"Export\">\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"hive\"\n                            },\n                            exportTo: true,\n                            workshop\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.1}>to Hive</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"delta\"\n                            },\n                            exportTo: true,\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.2}>to Delta</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"file\"\n                            },\n                            exportTo: true,\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.3}>to FileSystem</Menu.Item>\n            </SubMenu>\n\n            <Menu.Item onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.DELETE,\n                    data: {\n                        id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2} icon={<DeleteOutlined />}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: WorkshopTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n    return (\n        <WorkshopTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={`Export to ${exportTable.type}`}\n                visible={exportTo}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTo: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    const { targetPath } = exportForm.getFieldsValue()\n                    exportForm.resetFields()\n                    dispacher({\n                        type: WorkshopTablesActionNames.EXPORT_TO,\n                        data: { exportTo: false, targetPath, workshop }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <Form form={exportForm}>\n                    <Form.Item rules={[\n                        {\n                            required: true,\n                            message: 'Target is required.',\n                        },\n                    ]}\n                        label=\"Target\"\n                        name=\"targetPath\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Modal\n                title={`Open Table`}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: \"dispatch\",\n                        data: { openTable }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                {`Open ${openTable}?`}\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <DirectoryTree height={700} onDoubleClick={(evt, node) => {\n                    dispacher({\n                        type: WorkshopTablesActionNames.OPEN,\n                        data: {\n                            openTable: node.id,\n                            workshop\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }} onRightClick={popContextMenu}>\n                    {\n                        Object.entries(dbs).flatMap(([key, value]) => {\n                            return value.map(item => {\n                                return <TreeNode icon={<TableOutlined />} id={item} table={item} db={key} title={item} key={item} isLeaf />\n                            })\n                        })\n                    }\n                </DirectoryTree>\n            </Spin>\n        </WorkshopTablesContext.Provider>\n    )\n}\nexport { WorkshopTables, WorkshopTablesContext }","import * as React from \"react\";\nimport ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\nimport { TableOutlined } from '@ant-design/icons'\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const {dbName,node} = action.data\n    const proxy = new ActionProxy()\n    if(!dbName){        \n        let res = await proxy.runScript(`!profiler sql \"show databases\";`,Tools.getJobName(),Tools.robotFetchParam())                      \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"databaseName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"databaseName\":\"adl\"}]}}\n        if (res.status === 200) {        \n            const dbs  = res.content.data.map(item=>{                \n                item[\"key\"] = item.databaseName || item.namespace\n                item[\"title\"] = item.key\n                item[\"isLeaf\"] = false\n                item[\"children\"] = []\n                return item\n            })\n            return {\n                data: {\n                    dbs,...action.data\n                }\n            }\n        }\n    }\n\n    if(dbName){\n        await proxy.runScript(`!profiler sql \"use ${dbName}\";`,Tools.getJobName(),Tools.robotFetchParam())    \n        let res = await proxy.runScript(`!profiler sql \"show tables\";`,Tools.getJobName(),Tools.robotFetchParam())                             \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"database\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"tableName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"isTemporary\",\"type\":\"boolean\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"database\":\"adl\",\"tableName\":\"after_sale_df\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_awake_di\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_daily_active_user_com_di\",\"isTemporary\":false}]}}\n        if (res.status === 200) {        \n            const tables  = res.content.data.filter(item=>{\n                const db = item.database || item.namespace\n                return db === dbName\n            }).map(item=>{\n                item[\"key\"] = `${dbName}.${item.tableName}`\n                item[\"title\"] = item.tableName\n                item[\"isLeaf\"] = true\n                item[\"icon\"]=<TableOutlined />\n                return item\n            }) \n            const {dbs} = action.__state\n            const newdbs = dbs.map(db => {\n                if(db.key===dbName){\n                    db.children = tables\n                }\n                return db\n            });            \n            return {\n                data: {...action.data,dbs:newdbs}\n            }\n        }\n    }\n    \n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: OpenActionHandler, action: OpenAction } = ActionMaker.buildHandler(async (action) => {\n    const { openTable, workshop, partitionValues,partitionColumn} = action.data\n    const [db, table] = openTable.split(\".\")\n\n    const { tableRandom, tableStart, tableEnd } = partitionValues\n    const partitionColumnName = partitionColumn && Tools.getField(partitionColumn)\n    if (partitionColumn && tableRandom) {\n        const inStr = partitionColumnName +\" in (\" + tableRandom.map(item=>`\"${Tools.escapeQuote(item)}\"`).join(\",\") + \")\"\n        workshop.newSession(\"hive\", db, table,{__where__: inStr})\n    }\n    else if (partitionColumn && tableStart && tableEnd) {\n        const con = `${partitionColumnName} >= ${Tools.quote(tableStart)} and ${Tools.quote(tableEnd)} >= ${partitionColumnName}  `\n        workshop.newSession(\"hive\", db, table,{__where__: con})\n    }else {\n        workshop.newSession(\"hive\", db, table) \n    }\n    return {\n        data: {}\n    }\n})","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport Tools from '../../../../common/Tools';\n\nconst loop = (data, searchValue) =>\n    data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n            index > -1 ? (\n                <span>\n                    {beforeStr}\n                    <span className=\"site-tree-search-value\">{searchValue}</span>\n                    {afterStr}\n                </span>\n            ) : (\n                    <span>{item.title}</span>\n                );\n\n        if (item.children) {\n            return { ...item, title, children: loop(item.children, searchValue) }\n        }\n\n        return { ...item, title }\n    });\n\nexport const { handler: SearchActionHandler, action: SearchAction } = ActionMaker.buildHandler(async (action) => {\n    const { dbs } = action.__state\n    const { searchValue } = action.data\n    if (!searchValue) {\n        return {\n            data: {\n                expandedKeys: [], search_dbs: dbs\n            }\n        }\n    }\n\n    let showKeys = []\n    let expandedKeys = dbs\n        .flatMap(item => {            \n            const wow = item.children?.map(sub => {\n                if (sub.title.indexOf(searchValue) > -1) {\n                    return item.key\n                }\n                return null\n            }).filter(item => item) || []\n\n            if(item.title.indexOf(searchValue) > -1){                  \n                showKeys.push(item.key)\n            }\n            return wow\n        })\n   \n    expandedKeys = Tools.distinct(expandedKeys)    \n    const search_dbs = loop(dbs, searchValue).filter(item => {\n        return expandedKeys.includes(item.key) || showKeys.includes(item.key)\n    })\n    return {\n        data: {\n            expandedKeys, search_dbs\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler,LoadAction } from './LoadAction'\nimport { OpenAction, OpenActionHandler } from './OpenAction'\nimport { SearchAction, SearchActionHandler } from './SearchAction'\nclass HiveTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static SEARCH = \"search\"\n}\nconst HiveTablesHandlers = {\n    ...CommonHandlers,\n    [HiveTablesActionNames.LOAD]:LoadActionHandler,\n    [HiveTablesActionNames.OPEN]: OpenActionHandler,\n    [HiveTablesActionNames.SEARCH]: SearchActionHandler\n}\nconst HiveTablesActions = {\n    ...CommonActions,\n    [HiveTablesActionNames.LOAD]:LoadAction,\n    [HiveTablesActionNames.OPEN]: OpenAction,\n    [HiveTablesActionNames.SEARCH]: SearchAction\n}\n\nfunction HiveTablesReducer(state, action) {\nreturn HiveTablesActions[action.type](state, action.data)    \n}\nexport { HiveTablesActionNames, HiveTablesReducer, HiveTablesHandlers }","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Tree, Spin, Menu, Input, Modal } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { HiveTablesReducer, HiveTablesHandlers, HiveTablesActionNames } from './actions/HiveTablesReducer';\nimport { TableOutlined, DeleteOutlined, FolderOpenOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nimport AnalysisWorkshop from '../workshop';\nimport { FormattedMessage } from 'react-intl';\nimport { usePartitionSelect } from './pages/usePartitionSelect';\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst initState = {\n    dbs: [],\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n    expandedKeys: []\n}\n\nconst HiveTablesContext = React.createContext()\n\nfunction HiveTables(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const { reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(HiveTablesReducer, initState, HiveTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        search_dbs, expandedKeys\n    } = state\n\n    const { ui: PartitionSelect,\n        form: partitionForm,\n        setOpenTable: setOpenTableForPartition,\n        setError: setPartitionError,\n        partitionColumn,noPartition\n    } = usePartitionSelect()\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n        console.log(id)\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: HiveTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n\n    useEffect(() => {\n        setOpenTableForPartition(openTable)\n    }, [setOpenTableForPartition, openTable])\n\n    return (\n        <HiveTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={<FormattedMessage id=\"analysis_range\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    if (!noPartition && !partitionValues.tableRandom && !(partitionValues.tableStart && partitionValues.tableEnd)) {\n                        setPartitionError(\"Partitions is required.\")\n                        return\n                    }\n                    dispacher({\n                        type: HiveTablesActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionColumn\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionSelect />\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <Input style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={\n                    (e) => {\n                        dispacher({\n                            type: HiveTablesActionNames.SEARCH,\n                            data: { searchValue: e.target.value }\n                        })\n                    }\n                } />\n                <DirectoryTree height={700}\n                    expandedKeys={expandedKeys}\n                    treeData={search_dbs || dbs}\n                    loadData={\n                        async (node) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { loading: true }\n                            })\n                            dispacher({\n                                type: HiveTablesActionNames.LOAD,\n                                data: { dbName: node.key, node, loading: false }\n                            })\n                        }\n                    } expandAction=\"click\" onExpand={(expandedKeys) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { expandedKeys }\n                        })\n                    }} onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>\n        </HiveTablesContext.Provider>\n    )\n}\nexport { HiveTables, HiveTablesContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport Tools from '../../../../common/Tools';\n\nfunction usePartitionSelect() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [partitionColumn, setPartitionColumn] = useState(undefined)\n    const [noPartition, setNoPartition] = useState(false)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    useEffect(() => {\n        const fetch = async () => {\n            if (!openTable) return\n            const [db, table] = openTable.split(\".\")\n            setLoading(true)\n            \n            const res = await proxy.runScript(`!profiler sql 'show partitions ${db}.${table}';`,\n              Tools.getJobName(),Tools.robotFetchParam()\n            )\n            if (res.status === 200) {\n                const data = res.content.data.map(item => {\n                    //dt=2020-08-03/hour=12                    \n                    const [column, value] = item.partition.split(\"/\")[0].split(\"=\")\n                    if (!partitionColumn) {\n                        setPartitionColumn(column)\n                    }\n                    return { column, value }\n                })\n                setData(data)\n                setNoPartition(false)\n                if (data.length === 0) {\n                    setNoPartition(true)\n                }\n                // if (false) {\n                //     setData([{ column: \"hp_stat_date\", value: \"2017-01-02\" }])\n                //     setPartitionColumn(\"hp_stat_date\")\n                //     setNoPartition(false)\n                // }\n\n            }else {\n                setData([])\n                setNoPartition(true)                \n            }\n            setLoading(false)\n        }\n        fetch()\n    }, [openTable])\n\n    const options = data.reverse().map(item => {\n        return <Select.Option value={item.value}>{item.value}</Select.Option>\n    })\n    const ui = () => {\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                {\n                    noPartition && <FormattedMessage id=\"no_partition_msg\" />\n                }\n                {\n                    !noPartition && <Form form={form}>\n                        <Form.Item name=\"tableStart\" label={<FormattedMessage id=\"table_start\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"tableEnd\" label={<FormattedMessage id=\"table_end\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n\n                        <Divider />\n                        <Form.Item name=\"tableRandom\" label={<FormattedMessage id=\"table_random\" />}>\n                            <Select mode=\"tags\">\n                                {options}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                }\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError, partitionColumn, noPartition }\n}\nexport { usePartitionSelect }","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:OpenMySQLTableActionHandler,action:OpenMySQLTableAction} = ActionMaker.buildHandler(async (action)=>{\n    const {partitionValues,openTable,partitionNumValue,workshop} = action.data\n    const [db,table] = openTable.split(\".\")\n    const {partitionColumn,lowerBound,upperBound} = partitionValues\n    const proxy = new ActionProxy()\n    \n    const connectRes = await proxy.get(RemoteAction.DS_MYSQL_CONNECT,{name:db}) \n    const tempTable = Tools.getTempTableName()\n    let whereBlock = \"\"\n    if(partitionColumn){         \n        whereBlock = `where partitionColumn=\"${partitionColumn}\" \n        and lowerBound=\"${lowerBound}\" \n        and upperBound=\"${upperBound}\"\n        and numPartitions=\"${partitionNumValue}\"\n        `\n    }\n\n    const sql = `\n      ${connectRes.content.connect}\n      load jdbc.\\`${openTable}\\` ${whereBlock} as ${tempTable};    \n    `\n    workshop.newSession(\"jdbc\", db, table,{__sql__: sql,__tableName__:tempTable})               \n\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { OpenMySQLTableActionHandler, OpenMySQLTableAction } from './OpenMySQLTableAction'\nclass MysqlTreeActionNames {\n    static OPEN = \"open\"\n}\nconst MysqlTreeHandlers = {\n    ...CommonHandlers,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableActionHandler\n}\nconst MysqlTreeActions = {\n    ...CommonActions,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableAction\n}\n\nfunction MysqlTreeReducer(state, action) {\nreturn MysqlTreeActions[action.type](state, action.data)    \n}\nexport { MysqlTreeActionNames, MysqlTreeReducer, MysqlTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\n\n\nfunction useIntegerStep(props) {\n    const [value,setValue] = useState(props.initialValue || 10)\n    const ui =  ()=>(\n        <Row>\n        <Col span={12}>\n          <Slider\n            min={props.min||10}\n            max={props.max||300}\n            onChange={(value)=>{setValue(value)}}\n            value={value}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={props.min||10}\n            max={props.max||300}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(value)=>{setValue(value)}}\n          />\n        </Col>\n      </Row> \n    )\n    return {ui,value}\n}\nexport {useIntegerStep}","import React, {  useRef, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { MysqlTreeReducer, MysqlTreeHandlers, MysqlTreeActionNames } from '../actions/MysqlTreeReducer';\nimport { useContextMenu } from '../../../script_console/pages/ContextMenu';\nimport { Menu,Spin,Tree,Modal } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport { FolderOpenOutlined, TableOutlined } from '@ant-design/icons';\nimport { useMySQLPartition } from './useMySQLPartition';\nimport AnalysisWorkshop from '../../workshop';\nimport { FormattedMessage } from 'react-intl';\n\nconst {DirectoryTree} = Tree\nconst initState = {\n    dbs: [],    \n    loading:false,\n    confirm:false,\n    openTable: undefined,\n    error: undefined     \n}\n\nconst MysqlTreeContext = React.createContext()\n\nfunction MysqlTree() {\n    const workshop = AnalysisWorkshop.workshop\n    const [state, dispacher] = useReducerAsync(MysqlTreeReducer, initState, MysqlTreeHandlers)\n    const {dbs,loading,confirm,openTable,error} = state\n\n    const {ui:PartitionUI,form:partitionForm,setOpenTable,setError:setPartitionError,partitionNumValue} = useMySQLPartition()\n\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem        \n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        const fetch = async () => {\n            dispacher({\n                type: \"setState\",\n                data: { loading: true }\n            })\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n            if (res.status === 200) {\n                const treeData = res.content.data.map(item=>{\n                    item.key = item.name\n                    item.title = item.name\n                    item.isLeaf = false\n                    item.children = item.tables.map(table=>{\n                        return {\n                            id: `${item.name}.${table}`,\n                            key: `${item.name}.${table}`,\n                            title: table,\n                            isLeaf: true,\n                            icon: <TableOutlined/>\n                        }\n                    })\n                    return item\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: { dbs: treeData}\n                })                \n            }\n\n            dispacher({ \n                type: \"setState\",               \n                data: { loading:false}\n            }) \n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{\n        setOpenTable(openTable)\n    },[openTable,setOpenTable])\n   \n\n    return (\n        <div className=\"leftview-box\">\n        <MysqlTreeContext.Provider value={{ dispacher }}> \n        <Modal\n                title={<FormattedMessage id=\"mysql_parallel\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    const {partitionColumn,lowerBound,upperBound} = partitionValues\n                    if(partitionColumn){\n                        if(!lowerBound || !upperBound && partitionNumValue){\n                            setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                            return\n                        }\n                    }\n                    \n                    dispacher({\n                        type: MysqlTreeActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionNumValue                            \n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionUI />\n            </Modal>           \n           <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}                \n                <DirectoryTree height={700}                   \n                    treeData={dbs}\n                    expandAction=\"click\" \n                    onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }                        \n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>  \n        </MysqlTreeContext.Provider>\n        </div>\n    )\n}\nexport { MysqlTree, MysqlTreeContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert, Input } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport { useIntegerStep } from '../../common/pages/useIntegerStep';\nimport Tools from '../../../../common/Tools';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\nfunction useMySQLPartition() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [column, setColumn] = useState(undefined)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    const { ui: partitionNumUI, value: partitionNumValue } = useIntegerStep({\n        initialValue: 10,\n        min: 2,\n        max: 100\n    })\n\n    useEffect(() => {\n        if (openTable) {\n            const [db, table] = openTable.split(\".\")\n            const tempTable = Tools.getTempTableName()\n            const fetch = async () => {                 \n                const res = await proxy.runScript(`                \n                load jdbc.\\`${openTable}\\` as ${tempTable};\n                !desc ${tempTable};\n               `, Tools.getJobName(), {...Tools.robotFetchParam(),__connect__:db})\n               if(res.status===200){\n                  setData(res.content.data)\n               }else {\n                   setData([])\n               }\n            }\n            fetch()\n        }\n    }, [openTable])\n\n   useEffect(()=>{\n       if(column){\n         const fetch = async ()=>{\n             const [db, table] = openTable.split(\".\")\n\n             const res = await proxy.get(RemoteAction.DS_MYSQL_COLUMN_INFO,{\n                dbName:db,tableName:table, columnName:column\n             }) \n             if(res.status === 200){                 \n                 form.setFieldsValue({\n                    lowerBound: res.content.min,\n                    upperBound: res.content.max\n                 })\n             } \n         }\n         fetch()\n       }\n   },[column,openTable])\n\n    //\n    const options = data.filter(item=>item.data_type !== \"string\").map(item => {\n        return <Select.Option value={item.col_name}>{item.col_name}</Select.Option>\n    })\n    const ui = () => {\n        if(options.length === 0){\n            return <><FormattedMessage id=\"no_mysql_parallel\"/></>\n        }\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                <Form form={form}>\n                    <Form.Item name=\"partitionColumn\" label={<FormattedMessage id=\"partitionColumn\" />}>\n                        <Select onChange = {(value)=>{                            \n                            setColumn(value) \n                        }}>\n                            {options}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lowerBound\" label={<FormattedMessage id=\"lowerBound\" />}>\n                        <Input />\n                    </Form.Item>\n\n                    <Divider />\n                    <Form.Item name=\"upperBound\" label={<FormattedMessage id=\"upperBound\" />}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"numPartitions\" label={<FormattedMessage id=\"numPartitions\" />}>\n                        {partitionNumUI()}\n                    </Form.Item>\n                </Form>\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError,partitionNumValue }\n}\nexport { useMySQLPartition }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport \"./leftview.scss\"\nimport { FormattedMessage } from 'react-intl'\nimport { WorkshopTables } from \"./workshop_tables/WorkshopTables\";\nimport { HiveTables } from \"./hive/HiveTables\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../backend_service/RemoteAction\";\nimport { MysqlTree } from \"./datasource/pages/MysqlTree\";\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = {\n            reloaWorkshop: undefined\n        }\n    }\n\n    render() {\n        return <Tabs defaultActiveKey=\"1\" onTabClick={(key) => {\n            if (key === \"3\") {\n                if (this.deltaLakeTreeRef) {\n                    this.deltaLakeTreeRef.reload()\n                }\n            }\n            if (key === \"4\") {\n                if (this.fileSystemTreeRef) {\n                    this.fileSystemTreeRef.reload()\n                }\n            }\n        }}>\n            <TabPane tab={<FormattedMessage id=\"table_workshop\" />} key=\"1\">\n                <div className=\"leftview-box\" >\n                    <WorkshopTables reload={this.state.reloaWorkshop} workshop={this.workshop}></WorkshopTables>\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"hive\" />} key=\"2\">\n                <div className=\"leftview-box\" >\n                    <HiveTables />\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"delta_lake\" />} key=\"3\">\n                <div className=\"leftview-box\" >\n                    <ADeltaLakeTree ref={(et) => this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"file_system\" />} key=\"4\">\n                <div className=\"leftview-box\">\n                    <AFileSystemTree ref={(et) => this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"mysql\" />} key=\"5\">\n                <MysqlTree />\n            </TabPane>\n        </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n\n    buildLoadSQL = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let whereBlock = \"where \"\n        if (options) {\n            whereBlock = whereBlock + Object.keys(options).\n                filter(k => \n                    k !== \"__where__\" \n                    && k !== \"__sql__\"\n                    && k !== \"__tableName__\"\n                    ).\n                map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            if (whereBlock === \"where \") {\n                whereBlock = \"\"\n            }\n        } else whereBlock = \"\"\n\n        // let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        let sql = `load ${prefix}.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n        }\n\n        if(prefix === \"jdbc\"){\n            sql = options.__sql__ || `load jdbc.\\`${db}.${table}\\` ${whereBlock} as ${tableName};` \n            tableName = options.__tableName__ || tableName\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 200) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${tableInfo.tableName};\n                select * from ${tableInfo.tableName} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${tableInfo.tableName} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        if (prefix === \"hive\") {\n            let _whereBlock = \"where \"\n            if (options && options.__where__) {\n                _whereBlock = _whereBlock + options.__where__\n            } else _whereBlock = \"\"\n\n            const tempTableName = Tools.getTempTableName()\n            sql = `load hive.\\`${db}.${table}\\` ${whereBlock} as ${tempTableName};`\n            sql = sql + `select * from ${tempTableName} ${_whereBlock} as ${tableName};`\n        }\n\n        return { sql, tableName }\n    }\n    showTable = async (prefix, db, table, options) => {\n\n        //an new session,clear the sqls\n        this.sqls = []\n\n        const { tableName, sql } = await this.buildLoadSQL(prefix, db, table, options)\n\n        this.sqls.push({ tableName, sql })\n        this.setState({ loadingTable: true })\n\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({ loadingTable: false })\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId: this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data, schema)\n    }\n\n}","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params) => {\n      if (this.sqls.length < 2) {\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      const res = await this.client.get(RemoteAction.APPLY_GET, { name: currentTable.tableName })\n      if (res.status === 200) {\n         const { data, schema } = JSON.parse(res.content.response)\n         await this.apply({ ...currentTable, _data: data, _schema: schema })\n      }\n      else {\n         await this.apply(currentTable)\n      }\n\n   }\n\n   runSQLAtCurrentTable = async (sql,params) => {      \n      const view = this.sqls.map(item => item.sql).join(\"\")\n      const res = await this.client.runScript(\n         `${view}\n          ${sql}`,\n         Tools.getJobName(),\n         { ...Tools.robotFetchParam(), ...params })\n      return res\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql, _data, _schema } = params\n      this.sqls.push({tableName,sql})\n\n      if (_data && _schema) {\n         this.setCurrentTable(\"\", \"\", tableName, _schema, _data)\n         return 200\n      }\n\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try {\n         const res = await this.client.runScript(view, Tools.getJobName(), {\n            ...Tools.robotFetchParam(),\n            queryType: \"analysis_workshop_apply_action\",\n            analysis_workshop_table_name: tableName,\n            analysis_workshop_sql: JSON.stringify(this.sqls)\n         })\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      } catch (e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }\n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${this.getLastApplyTable().tableName} as ${tableName};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n\n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <div style={{marginBottom:\"30px\"}}>\n      <Transfer\n    listStyle={{\n      width: 400,\n      height: 300,\n    }}\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n    </div>\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table \n                    pagination={{pageSize:6}}   \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch key={record.field} defaultChecked={record._groupBy} onChange={(checked)=>{\n                        this.enableGroupByField(checked,record)\n                        record._groupBy = checked\n                    }} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <>\n                    <Button key={record.field} style={{marginRight:\"30px\"}} dataref={record} onClick={() => {                         \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button><span>{record._agg && `(${record._agg})`||\"\"}</span></>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{ \n      this.applyFuncToFieldRef.operateField = this.operateField       \n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()              \n      const record = this.columnsRef.state.data.filter(item=>item.field === field)[0]\n      record._agg = `${transformCode} as ${columnName}`\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}>\n          <Input placeholder={\"input the new name here\"} />\n          </Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button key={record.field} dataref={record} onClick={() => { \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        this.applyFuncToFieldRef.operateField = this.operateField\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../common/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../common/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\nimport { SetStateActionHandler, SetStateAction } from '../../analysis/common/actions/SetStateAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\nimport AnalysisWorkshop from '../analysis/workshop.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop || AnalysisWorkshop.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","class CommonActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n    static APPLY = \"apply\"\n    static setState = \"setState\"\n}\n\nexport {CommonActionNames} \n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nfunction AddJsonField(props) {\n    const [form] = Form.useForm() \n    const {context,keyPaths} = props\n    const {dispacher} = useContext(context)\n    useEffect(()=>{\n        props.forms.push(form)\n    },[])\n    return (\n        <Form layout=\"inline\" form={form} style={{marginBottom:\"30px\"}}>                                \n        <Form.Item >\n            <Button danger icon={<MinusOutlined />} onClick={() => {\n                dispacher({\n                    type: CommonActionNames.REMOVE_FIELD,\n                    data: {form}\n                })\n            }}></Button>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"add\"/>} name={\"path\"} style={{ width: \"300px\" }}>\n            <Select>\n                {keyPaths.map(item => <Option key={item}>{item}</Option>)}\n            </Select>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"as\"/>} name={\"column\"} style={{ width: \"100px\" }}>\n            <Input />\n        </Form.Item>                        \n</Form>\n    )\n}\nexport {AddJsonField}","import React, { useState, useCallback, useEffect } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport { AddJsonField } from \"../AddJsonField\"\nimport { JsonFieldsContext } from \"../JsonFields\"\nimport Tools from '../../../../common/Tools';\n\nexport const {handler:AddFieldActionHandler,action:AddFieldAction} = ActionMaker.buildHandler(async (action)=>{\n    const {subFields,keyPaths,forms} = action.__state\n    subFields.push(<AddJsonField key={Tools.getJobName()} context={JsonFieldsContext} keyPaths={keyPaths} forms={forms} />)    \n    return {        \n        data: {\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const { form } = action.data\n    const { forms, subFields } = action.__state\n    const targetIndex= forms.indexOf(form)    \n    forms.splice(targetIndex,1)    \n    subFields.splice(targetIndex,1)\n    return {\n        data: {\n            forms,\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\n\nexport const {handler:JsonFieldsApplyActionHandler,action:JsonFieldsApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            const {formValues,operateFiled} = values\n            if (!operateFiled || formValues.length === 0) {\n                return \"Please configure fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n\n            const {formValues,operateFiled} = values\n            const jsonStr = formValues.map(item=>{\n                return `get_json_object(${Tools.getField(operateFiled)},\"${item.path}\") as ${Tools.getField(item.column)}`\n            }).join(\",\")            \n\n            const sql = `select *,${jsonStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { CommonActionNames } from '../../common/CommonActionNames'\nimport { AddFieldAction,AddFieldActionHandler } from './AddFieldAction'\nimport { RemoveFieldAction,RemoveFieldActionHandler } from './RemoveFieldAction'\nimport { JsonFieldsApplyActionHandler, JsonFieldsApplyAction } from './JsonFieldsApplyAction'\n\nclass JsonFieldsActionNames {\n    \n}\n\nconst JsonFieldsHandlers = {\n    ...CommonHandlers,\n    [CommonActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    [CommonActionNames.APPLY]: JsonFieldsApplyActionHandler,\n}\nconst JsonFieldsActions = {\n    ...CommonActions,\n    [CommonActionNames.ADD_FIELD]: AddFieldAction,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    [CommonActionNames.APPLY]: JsonFieldsApplyAction,\n}\n\nfunction JsonFieldsReducer(state, action) {\nreturn JsonFieldsActions[action.type](state, action.data)    \n}\nexport { JsonFieldsActionNames, JsonFieldsReducer, JsonFieldsHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch, Card } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nimport AnalysisWorkshop from '../workshop';\nimport { JsonFieldsReducer, JsonFieldsHandlers } from './actions/JsonFieldsReducer';\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport Tools from '../../../common/Tools';\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFiled: undefined,\n    keyPaths: [],\n    forms: [],\n    subFields: []\n}\n\nconst JsonFieldsContext = React.createContext()\n\nfunction JsonFields(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const data = workshop.currentTable.data.slice(0, 10)\n\n    const [state, dispacher] = useReducerAsync(JsonFieldsReducer, initState, JsonFieldsHandlers)\n    const { operateFiled,\n        keyPaths,\n        error,\n        applySaveRollbackDispacher,\n        forms,\n        subFields\n    } = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(() => {\n        if (operateFiled) {            \n            dispacher({\n                type: CommonActionNames.setState,\n                data:{\n                    subFields:[],\n                    forms: []\n                }\n            })    \n\n            const temp = new Set()            \n            const tempObjs = data.map(item => {\n                try{\n                    return JSON.parse(item[operateFiled])\n                }catch(e){\n                    return undefined\n                }\n            }).filter(item=>  item !== undefined && \n                (typeof(item) === \"object\" || typeof(item) === \"array\"))\n\n            console.log(tempObjs)\n\n            tempObjs.forEach(obj => {\n                Tools.keyPath(\"$\", obj, (key) => {\n                    temp.add(key)\n                })\n            })\n\n            dispacher({\n                type: CommonActionNames.setState,\n                data: { keyPaths: [...temp] }\n            })\n        }\n    }, [operateFiled])\n\n    useEffect(() => {\n        if (applySaveRollbackDispacher) {\n            form.submit()\n        }\n    }, [applySaveRollbackDispacher])\n\n    const apply = useCallback(({workshop,values,forms})=>{\n         console.log(values)\n         console.log(forms.map(item=>{\n             return item.getFieldsValue()\n         })) \n         applySaveRollbackDispacher.dispacher({\n             type:\"setState\",\n             data:{loading:false}\n         })\n    },[applySaveRollbackDispacher])\n\n    return (\n        <JsonFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"600px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    const formValues = forms.map(item=>item.getFieldsValue())\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values: {formValues,operateFiled}\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={JsonFieldsContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item label={<FormattedMessage id=\"choose_json_field\"/>} style={{ width: \"300px\" }}>\n                        <Select\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CommonActionNames.setState,\n                                    data: { operateFiled: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n                </Form>\n                {\n                    operateFiled && <Card title={<Button icon={<PlusOutlined />} onClick={() => {\n                        dispacher({\n                            type: CommonActionNames.ADD_FIELD,\n                            data: {}\n                        })\n                    }}></Button>}>\n                        {\n                            subFields\n                        }\n                    </Card>\n                }\n\n\n\n            </div>\n        </JsonFieldsContext.Provider>\n    )\n}\nexport { JsonFields, JsonFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\nimport {FormattedMessage} from 'react-intl'\nimport { JsonFields } from \"./JsonFields\";\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return  <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab={<FormattedMessage id=\"select_columns\"/>} key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"rename_columns\"/>} key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"transform_columns\"/>} key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"cast_columns_type\"/>} key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"json_fields\"/>} key=\"5\"> \n                       <JsonFields/>                                         \n                    </TabPane>\n                </Tabs>\n            </div>                \n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Input, Form } from 'antd';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport Tools from '../../../common/Tools';\n\nconst ExpressionConst = {\n    EQUAL: \"=\",\n    NON_EQUAL: \"!=\",\n    IN: \"in\",\n    CONTAINS: \"contains\",\n    STARTS_WITH: \"startsWith\",\n    ENDS_WITH: \"endsWith\",\n    LIKE: \"like\",\n    IS_NULL: \"is null\",\n    IS_NOT_NULL: \"is not null\",\n    IS_EMPTY: \"is empty\",\n    IS_NOT_EMPTY: \"is not empty\",\n\n}\n\nconst buildExpression = (item) => {\n    const { field, dataType, compare, condition } = item\n    if (compare === ExpressionConst.IN) {\n\n        let conTemp = \"\"\n\n        switch (dataType) {\n            case \"integer\": case \"long\": case \"float\": case \"double\":\n                conTemp = condition.map(cond => {\n                    return cond\n                }).join(\",\")\n                break\n            default:\n                conTemp = condition.map(cond => {\n                    return `\"${Tools.escapeQuote(cond)}\"`\n                }).join(\",\")\n        }\n        const con = `(${conTemp})`\n        return `${Tools.getField(field)} ${compare} ${con}`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_NULL || compare === ExpressionConst.IS_NULL) {\n        return `${Tools.getField(field)} ${compare}`\n    }\n\n    if (compare === ExpressionConst.IS_EMPTY) {\n        return `${Tools.getField(field)} = \"\"`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_EMPT) {\n        return `${Tools.getField(field)} != \"\"`\n    }\n\n    if (compare === ExpressionConst.LIKE) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}\"`\n    }\n\n    if (compare === ExpressionConst.STARTS_WITH) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}%\"`\n    }\n\n    if (compare === ExpressionConst.ENDS_WITH) {\n        return `${Tools.getField(field)} like \"%${Tools.escapeQuote(condition)}\"`\n    }\n\n    let con = \"\"\n    switch (dataType) {\n        case \"string\":\n            con = `\"${Tools.escapeQuote(condition)}\"`\n            break\n        default: con = condition;\n    }\n    return `${Tools.getField(field)} ${compare} ${con}`\n}\nfunction FilterCondition(props) {\n    const { record, workshop } = props\n    const [compare, setCompare] = useState(undefined)\n    const { dataType, field } = record\n    const [inCandidate, setInCandidate] = useState([])\n    const [inCandidateLoading, setInCandidateLoading] = useState(false)\n    const [form] = Form.useForm()\n    props.forms[field] = form\n\n    const fetch = async () => {\n        if (inCandidate.length === 0 && compare === \"in\") {\n            setInCandidateLoading(true)\n            \n            const res =  await workshop.runSQLAtCurrentTable(`select distinct(${Tools.getField(field)}) as name \n            from ${workshop.getLastApplyTable().tableName} \n            as ${Tools.getTempTableName()};`,{outputSize: 5000, timeout: 10000 })\n            \n            if (res.status === 200) {\n                setInCandidate(res.content.data)\n            }\n            setInCandidateLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [compare])\n\n    const condition = () => {\n        switch (compare) {\n            case ExpressionConst.IS_NULL:\n                return <></>\n            case ExpressionConst.IS_NOT_NULL:\n                return <></>\n            case ExpressionConst.IN:\n                return <Select loading={inCandidateLoading} mode=\"tags\" style={{ width: '300px' }}>\n                    {inCandidate.map(item => {\n                        return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n                    })}\n                </Select>\n\n            case ExpressionConst.LIKE:\n                return <><Input/><span>LIKE 'a%o' means Finds any values that start with 'a' and ends with 'o' </span></>\n\n            default:\n                return <Input />\n        }\n    }\n\n    const ui = () => {\n        return <Form form={form} layout={\"inline\"}>\n            <Form.Item name=\"compare\" initialValue={record.compare}>\n                <Select initialValue={\"=\"}\n                    onChange={(value) => {\n                        setCompare(value)\n                        record.compare = value\n                    }}\n                    placeholder=\"compare\" style={{width:\"200px\"}}>\n                    <Select.Option value=\"=\">=</Select.Option>\n                    <Select.Option value=\"<\">{'<'}</Select.Option>\n                    <Select.Option value=\">\">{'>'}</Select.Option>\n                    <Select.Option value=\">=\">{'>='}</Select.Option>\n                    <Select.Option value=\"<=\">{'<='}</Select.Option>\n                    <Select.Option value=\"!=\">{'!='}</Select.Option>\n                    <Select.Option value={ExpressionConst.LIKE}>{'like'}</Select.Option>\n                    <Select.Option value={ExpressionConst.STARTS_WITH}>{'startsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.ENDS_WITH}>{'endsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IN}>{'in'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NULL}>{'is null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_NULL}>{'is not null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_EMPTY}>{'is empty'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_EMPTY}>{'is not empty'}</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"condition\" initialValue={record.condition} onChange={(value)=>{\n                if(typeof value !== \"string\"){\n                    record.condition = value.target.value\n                }else record.condition = value\n                \n            }}>\n                {condition()}\n            </Form.Item>\n        </Form>\n    }\n    return ui()\n}\nexport { FilterCondition, ExpressionConst, buildExpression }","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider, Collapse } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport { FilterCondition } from \"./FilterCondition\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.forms = {}\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <FilterCondition forms={this.forms} record={record} workshop ={this.workshop}/>\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    buildSelectedRows = ()=>{\n        const fieldToDataType = {}\n        this.state.data.forEach(item=>{\n            fieldToDataType[item.field] = item.dataType\n        })\n\n        const params = Object.entries(this.forms).map(([key,value])=>{\n            const {compare,condition} = value.getFieldsValue()\n            if(compare){\n                return {field:key,compare,condition,dataType:fieldToDataType[key]}\n            }\n            return {}\n        })\n        if(!this.selectedRowKeys) {\n            return []\n        }\n        return params.filter(item => this.selectedRowKeys.includes(item.field))\n    }\n\n    addGroup = (values) => {        \n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        if(!this.selectedRowKeys){\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        \n        const selectedRows = this.buildSelectedRows()\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }        \n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div className=\"common-one-hundred-percent-width common-column-layout\">                     \n            <div style={{marginRight:\"30px\"}}>\n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.buildSelectedRows()\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table pagination={{pageSize:5,hideOnSinglePage:true}}            \n            rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n            </div>\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form> \n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\nimport { buildExpression } from \"./FilterCondition\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {}\n        this.currentConditions = {}\n    }\n\n    static buildCondition = (items) => {\n        return items.map(item => {\n            return buildExpression(item)\n        })\n    }\n\n    onNonGroupFilterApply = async (selectedRows) => {\n        if (selectedRows.length === 0) {\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        const filterStr = selectedRows.flatMap(item => {\n            return FilterStation.buildCondition([item])\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${FilterStation.buildCondition(group.data).join(\" and \")})`\n                } else return `(${FilterStation.buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n\n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">\n                        <Compare ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"../../common/actions/AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"../../common/actions/RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../common/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport { LimitStation } from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nimport { FormattedMessage } from 'react-intl'\nimport { Resizable } from \"re-resizable\";\nimport AnalysisWorkshop from \"./workshop\";\nimport Tools from \"../../common/Tools\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = AnalysisWorkshop.workshop\n        this.state = { key: Tools.getJobName() }\n    }\n\n    reload = () => {\n        this.setState({ key: Tools.getJobName() })\n    }\n\n    render() {\n        return <div className=\"os-pane\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"os-tabs\">\n                <Resizable style={{ borderBottom: \"solid\", width: \"100%\", overflow: \"scroll\" }}>\n                    <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>\n                        <TabPane tab={<FormattedMessage id=\"project\" />} key={1} >\n                            <ProjectStation parent={this}></ProjectStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"filter\" />} key={2} >\n                            <FilterStation parent={this}></FilterStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"agg\" />} key={4} >\n                            <AggStation parent={this}></AggStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"order\" />} key={5} >\n                            <OrderStation parent={this}></OrderStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"more\" />} key={100}>\n                            <Tabs tabPosition=\"left\">\n                                <TabPane tab={<FormattedMessage id=\"join\" />} key={3}>\n                                    <JoinStation parent={this}></JoinStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"limit\" />} key={6} >\n                                    <LimitStation parent={this}></LimitStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"window\" />} key={7} >\n                                    <WindowStation parent={this}></WindowStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"dash\" />} key={8} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane>\n                                {/* <TabPane tab={<FormattedMessage id=\"datasource\" />} key={9} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane> */}\n                            </Tabs>\n                        </TabPane>\n\n                    </Tabs>\n                </Resizable>\n            </div>\n\n        </div >\n    }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.setState({reloaWorkshop:Tools.getJobName()})\n    }\n    \n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\nimport AnalysisWorkshop from \"./workshop\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = AnalysisWorkshop.workshop\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n\n        if ((typeof type) === \"object\") {\n            return (value, record) => {                \n                return JSON.stringify(value)\n            }\n        }\n\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return value\n            }\n            default:\n                return (value, record) => { return value }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        }\n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows, isDash })\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table \n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: true }}\n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <ReactMarkdown source={this.state.view.content || \"\"} />\n            </Modal>\n        </div>\n        )\n    }\n\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport OperateStation from './OperateStation';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components'\n\nfunction OperateStationWrapper(props) {\n    const ButtonGroup = styled.div`\n      display:flex;\n      align-items:right;    \n    ` \n    const handle = useFullScreenHandle();\n    return (\n        <div className=\"common-one-hundred-percent-width\">\n            <Collapse style={{marginBottom:\"10px\"}}>\n                <Collapse.Panel header={<>\n                    <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n                <Divider type=\"vertical\"/>\n                <FormattedMessage id=\"operate_panel\"/>                \n                {/* <span style={{marginLeft:\"50px\",border:\"2px dash\"}}>\n                 <Button type=\"primary\">Apply</Button> \n                 <Divider type=\"vertical\"/> <Button type=\"primary\">Save As</Button> \n                 <Divider type=\"vertical\"/> <Button>Rollback</Button> \n                </span> */}\n                \n                </>}>                    \n                    <FullScreen handle={handle}>\n                        <OperateStation ref={(et) => AnalysisWorkshop.workshop.stationRef = et} />\n                    </FullScreen>\n                </Collapse.Panel>\n            </Collapse>\n\n        </div>\n    )\n}\nexport { OperateStationWrapper }","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport RealTimeViewTable from './RealTimeViewTable';\nimport { Button, Card, Collapse, Divider } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl';\n\nfunction RealTimeTableWrapper(props) {\n    const handle = useFullScreenHandle();\n    return (\n        <Collapse defaultActiveKey={\"1\"} style={{ marginBottom: \"30px\",width: \"100%\" }}>\n            <Collapse.Panel key=\"1\" header={<>\n            {AnalysisWorkshop.workshop.sessionId && <>            \n            <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n            <Divider type=\"vertical\"/>\n            </>}            \n            <FormattedMessage id=\"data_panel\" /></>}>\n                <FullScreen handle={handle}>                    \n                    <RealTimeViewTable tableStyle={{ width: \"90%\" }} ref={(et) => AnalysisWorkshop.workshop.displayRef = et} />\n                </FullScreen>\n            </Collapse.Panel>\n        </Collapse>\n    )\n}\nexport { RealTimeTableWrapper }","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { OperateStationWrapper } from \"./OperateStationWrapper\";\nimport { RealTimeTableWrapper } from \"./RealTimeTableWrapper\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"temp\", \"\", \"cc2\", {})\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            //return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n            return <OperateStationWrapper />\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <div className=\"ws-table-pane\">\n                    <RealTimeTableWrapper />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister, enableLogin, enableConsole } = action.data\n    const params = {}\n    if(enableRegister !== undefined){\n        params.register = enableRegister\n    }\n    if(enableLogin !== undefined){\n        params.login = enableLogin\n    }\n    if(enableConsole !== undefined){\n        params.console = enableConsole\n    }    \n    \n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, params)\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    enableConsole: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,\n        enableConsole,\n        applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableRegister: Boolean(appInfo.content.register),\n                    enableConsole: Boolean(appInfo.content.console),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Enable Console(SQL)\"\n                        name=\"enableConsole\"\n                    >\n                        <Switch defaultChecked={enableConsole} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit, remove: externalRemove } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error, setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => {\n                            if (externalRemove) {\n                                externalRemove(row)\n                            }\n                            remove(index)\n                        }\n                        }>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {\n        if (!editorMode) {\n            const newColumns = columns.map(item => {\n                item[\"render\"] = (text, row, index) => {\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n                columns={newColumns}\n                dataSource={data}\n                pagination={false}\n            />\n        }\n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error} />}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading, setEditorMode, setError }\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Input, Form, Card, Button, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\n\nfunction ChangePassword() {\n    const [error, setError] = useState(undefined)\n    const [applySuccess, setApplySuccess] = useState(undefined)\n\n    const submit = useCallback(async (values) => {\n        const { password, newPassword, _newPassword } = values\n        if (newPassword !== _newPassword) {\n            setError(\"Two new passwords are not the same\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = proxy.post(RemoteAction.USER_CHANGE_PASSWORD, values)\n        setApplySuccess(\"Update password successfully.\")\n    }, [])\n\n    return <Card className=\"common-child-center\">\n        {applySuccess && <Alert\n            closable\n            message=\"Success\"\n            description=\"Apply Success\"\n            type=\"success\"\n            showIcon\n        />}\n        {error && <Alert\n            closable\n            message=\"Fail\"\n            description={error}\n            type=\"error\"\n            showIcon\n        />}\n        <Form className=\"login-form\" onFinish={(values) => {\n            submit(values)\n        }}>\n\n            <Form.Item\n                label=\"Oringinal Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your oringinal password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"_newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password again!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    </Card>\n}\n\nexport default ChangePassword","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\nimport ChangePassword from './pages/ChangePassword';\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"website-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['website-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"website-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"website-settings\"}\n                                })\n                            }}>Website Settings</Menu.Item>                                                         \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"website-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                      \n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Button } from 'antd';\nimport AlertBox from '../../../AlertBox';\nimport { FormattedMessage } from 'react-intl';\n\n\nfunction useUserConfig(props) {\n    const [error, setError] = useState(undefined)\n    const [success, setSuccess] = useState(undefined)\n    const [current, setCurrent] = useState(undefined)\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    const getParams = () => {\n        return form.getFieldsValue()\n    }\n    const ui = ({ formItems, title, submit }) => (\n        <div className=\"common-margin common-child-center\">\n            <Card title={title} style={{ width: \"50%\" }}>\n                <Form form={form}>\n                    {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                    {formItems}\n                </Form>\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        submit\n                    }><FormattedMessage id=\"apply\" /></Button>\n                </Form.Item>\n            </Card>\n        </div>\n    )\n    return { ui, form, setError, setLoading, getParams,setCurrent,current,setSuccess}\n}\nexport { useUserConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\n\n\nfunction DefaultBackend(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const [engine,setEngine] = useState(undefined)\n    const submit = async () => {\n        if(!engine){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_default_backend\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item></>\n    })\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\nimport { useIntegerStep } from '../../../analysis/common/pages/useIntegerStep';\n\n\nfunction ApplyTimeout(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const {ui:timeoutUi,value:timoutValue} = useIntegerStep({\n        initialValue:UIMaker.extraOption()[\"apply_timeout\"] || 10\n    })    \n    const submit = async () => {\n        if(!timoutValue){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { apply_timeout: timoutValue })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_apply_timeout\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {timoutValue}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                {timeoutUi()}\n            </Form.Item></>\n    })\n}\nexport { ApplyTimeout }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Teams(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.TEMA_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Teams }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Input, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport { useUserConfig } from '../../common/pages/useUserConfig';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\nfunction MySQL() {\n    const { ui, setError, setSuccess, form } = useUserConfig()\n    const submit = async () => {\n        let { host, port, db, user, password, name } = form.getFieldsValue()\n        if (!name) {\n            name = db\n        }\n        if (!port) {\n            port = \"3306\"\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.DS_ADD, { \n            host, port, db, user, password, name, format: \"jdbc\",jType:\"mysql\" })\n        if (res.status === 200) {\n            setSuccess(\"Create Connect Success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n    return ui(\n        {\n            title: <FormattedMessage id=\"connect_mysql\" />,\n            submit,\n            formItems: <>\n                <Form.Item name=\"host\" required={true} label={<FormattedMessage id=\"host\" />}>\n                    <Input placeholder=\"127.0.0.1\" />\n                </Form.Item>\n                <Form.Item name=\"port\" initialValue={\"3306\"} label={<FormattedMessage id=\"port\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"db\" required={true} label={<FormattedMessage id=\"db\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"user\" required={true} label={<FormattedMessage id=\"user\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"password\" required={true} label={<FormattedMessage id=\"password\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"name\" label={<FormattedMessage id=\"alias\" />}>\n                    <Input />\n                </Form.Item>\n            </>\n        }\n    )\n}\nexport { MySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction ListMySQL() {\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        remove: async(row) =>{\n            const res = await proxy.post(RemoteAction.DS_REMOVE,{id:row.id})\n            if(res.status === 200){\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.DS_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\nexport { ListMySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\nimport { FormattedMessage } from 'react-intl';\nimport { ApplyTimeout } from './ApplyTimeout';\nimport ChangePassword from './ChangePassword';\nimport { Teams } from './Teams';\nimport { MySQL } from '../../../analysis/datasource/pages/MySQL';\nimport { ListMySQL } from '../../../analysis/datasource/pages/ListMySQL';\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage, setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['default-backend']}\n                    defaultOpenKeys={['analysis-workshop']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"analysis-workshop\"\n                        title={\n                            <span>\n                                <MailOutlined />\n                                <span><FormattedMessage id=\"analysis_workshop\" /></span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"default-backend\" onClick={() => {\n                            setCurrentPage(\"default-backend\")\n                        }}><FormattedMessage id=\"set_engine\" /></Menu.Item>\n                        <Menu.Item key=\"set-timeout\" onClick={() => {\n                            setCurrentPage(\"set-timeout\")\n                        }}><FormattedMessage id=\"set_timeout\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"user\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"user_settings\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"change-admin-password\"\n\n\n                            onClick={() => {\n                                setCurrentPage(\"change-admin-password\")\n                            }}><FormattedMessage id=\"change_password\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"team\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"team\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"team_manager\"\n                            onClick={() => {\n                                setCurrentPage(\"team_manager\")\n                            }}><FormattedMessage id=\"team_manager\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"datasource\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"datasource\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"mysql\")\n                            }}><FormattedMessage id=\"connect_mysql\" /></Menu.Item>\n                        <Menu.Item key=\"list_mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"list_mysql\")\n                            }}><FormattedMessage id=\"list_mysql\" /></Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"default-backend\" && <DefaultBackend />}\n                {currentPage === \"set-timeout\" && <ApplyTimeout />}\n                {currentPage === \"change-admin-password\" && <ChangePassword></ChangePassword>}\n                {currentPage === \"team_manager\" && <Teams></Teams>}\n                {currentPage === \"mysql\" && <MySQL />}\n                {currentPage === \"list_mysql\" && <ListMySQL />}\n            </div>\n        </div>\n    )\n}\nexport { Settings }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport { Settings } from './admin/pages/Settings';\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole(props) {\n    const {appInfo} = props\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>            \n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader appInfo={appInfo} userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>        \n\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input/>\n        </Form.Item>\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item\n            label=\"Access Token\"\n            name=\"accessToken\"            \n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","const zh_CN = {    \n    login: \"登录\",\n    register: \"注册\",\n    console: \"控制台\",\n    analysis_workshop: \"分析工坊\",\n    settings: \"设置\",\n    admin: \"管理员\",\n    more: \"更多\",\n    apply: \"应用\",\n    set_default_backend: \"设置默认Engine\",\n    set_default_backend_error: \"请选择一个引擎进行设置\",\n    set_engine: \"设置引擎\",\n    curent_value: \"当前值\",\n    choose: \"选择\",\n    done: \"完成\",\n    congratulation: \"恭喜\",\n    set_timeout: \"超时设置\",\n    set_apply_timeout: \"设置【应用】超时（单位秒）\",\n    table_workshop: \"暂存区\",\n    delta_lake: \"数据湖\",\n    file_system: \"文件系统\",\n    project: \"字段\",\n    filter: \"过滤\",\n    join: \"关联\",\n    window: \"窗口\",\n    dash: \"可视化\",\n    limit: \"条数\",\n    agg: \"聚合\",\n    order: \"排序\",\n    select_columns: \"筛选字段\",\n    rename_columns: \"重命名字段\",\n    transform_columns: \"转换字段\",\n    cast_columns_type: \"修改字段类型\",\n    hive: \"数仓\",\n    operate_panel: \"操作区\",\n    data_panel:\"数据区\",\n    user_settings:\"用户设置\",\n    change_password:\"修改密码\",\n    team:\"团队\",\n    team_manager: \"团队管理\",\n    datasource: \"数据源\",\n    analysis_range: \"请选择表分析区间\",\n    table_start: \"选择开始区间[包含]\",\n    table_end: \"选择结束区间[包含]\",\n    table_random: \"选择任意值\",\n    or: \"或者\",\n    no_partition_msg: \"该表没有分区信息。请直接点击【确认】\",\n    ds_mysql: \"MySQL管理\",\n    host: \"主机名\",\n    port: \"端口\",    \n    db: \"数据库名\",\n    user: \"用户名\",\n    password: \"密码\",\n    alias: \"别名\",\n    connect_mysql: \"连接 MySQL\",\n    list_mysql: \"MySQL列表\",\n    mysql: \"MySQL\",\n    partitionColumn:\"分区列\",\n    lowerBound:\"最低值\",\n    upperBound:\"最大值\",\n    numPartitions:\"分区数\",\n    mysql_parallel:\"MySQL打开并行度设置\",\n    no_mysql_parallel:\"该表没有数字类型的列，无法设置并行度。请直接点击【确定】\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"选择Json字段\",\n    json_fields: \"Json字段展开\"\n    \n}\nexport default zh_CN;","const en_US = {\n    login: \"Login\",\n    register: \"Register\",\n    console: \"Console\",\n    analysis_workshop: \"Analysis Workshop\",\n    settings: \"Settings\",\n    admin: \"Admin\",\n    more: \"More\",\n    apply: \"Apply\",\n    set_default_backend: \"Set Default Backend\",\n    set_default_backend_error: \"Please select at least one engine\",\n    set_engine: \"Set Engine\",\n    curent_value: \"Current Value\",\n    choose: \"Choose\",\n    done: \"Done\",\n    congratulation: \"Congratulation\",\n    set_timeout: \"Set Timout\",\n    set_apply_timeout: \"Set  [Apply] Timeout（Unit: Second）\",\n    table_workshop: \"Table Workshop\",\n    delta_lake: \"DeltaLake\",\n    file_system: \"FileSystem\",\n    project: \"Project\",\n    filter: \"Filter\",\n    join: \"Join\",\n    order: \"Order\",\n    window: \"Window\",\n    dash: \"Dash\",\n    agg: \"Agg\",\n    limit: \"Limit\",\n    select_columns: \"Select Columns\",\n    rename_columns: \"Rename Columns\",\n    transform_columns: \"Transform Columns\",\n    cast_columns_type: \"Cast Column Type\",\n    hive: \"Hive\",\n    operate_panel: \"Operate Panel\",\n    data_panel: \"Data Panel\",\n    user_settings: \"User Settings\",\n    change_password: \"Change Password\",\n    team: \"Team\",\n    team_manager: \"Team Control\",\n    datasource: \"Data Source\",\n    analysis_range: \"Select Table Range\",\n    table_start: \"Select start value\",\n    table_end: \"Select end value\",\n    table_random: \"Select values\",\n    or: \"Or\",\n    no_partition_msg: \"This table have no partition message. Please click Ok.\",\n    ds_mysql: \"MySQL\",\n    host: \"Host\",\n    port: \"Port\",\n    db: \"Database Name\",\n    user: \"User Name\",\n    password: \"Password\",\n    alias: \"Alias\",\n    connect_mysql: \"Connect MySQL\",\n    list_mysql: \"MySQL List\",\n    mysql: \"MySQL\",\n    partitionColumn:\"partitionColumn\",\n    lowerBound:\"lowerBound\",\n    upperBound:\"upperBound\",\n    numPartitions:\"numPartitions\",\n    mysql_parallel:\"MySQL Parallel\",    \n    no_mysql_parallel:\"No number columns in this table, Please click [Ok]\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"Choose Json Field\",\n    json_fields: \"Expand Json\"\n}\nexport default en_US","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ConfigProvider } from 'antd';\nimport {IntlProvider} from \"react-intl\"\nimport zh_CN from './locale/zh_CN';\nimport en_US from './locale/en_US';\nimport AntZhCN from 'antd/lib/locale-provider/zh_CN';\n\nconst initState = {\n    appConfigured: false,\n    loading: true,\n    lang: \"zh\",\n    enableConsole: false\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading,lang,enableConsole } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { \n                    appConfigured: appInfo.content.configured, \n                    enableConsole: appInfo.content.console || false, \n                    loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <IntlProvider locale={lang} messages={zh_CN}>\n        <ConfigProvider locale={AntZhCN}>\n            <AppContext.Provider value={{ dispacher }}>                \n                {loading && <SpinBox />}\n                {!loading && !appConfigured && <AppSetup />}\n                {!loading && appConfigured && <AppConsole appInfo={{enableConsole}}/>}\n            </AppContext.Provider>\n        </ConfigProvider>\n        </IntlProvider>\n\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n    static ANALYSIS_TABLE_DELETE = \"/api_v1/analysis/table/delete\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n    static USER_CHANGE_PASSWORD = \"/api_v1/changepassword\"\n\n    static APPLY_GET = \"/api_v1/analysis/apply\"\n\n    static TEMA_LIST = \"/api_v1/team\" \n    \n    static DS_ADD = \"/api_v1/ds/add\" \n    static DS_LIST = \"/api_v1/ds/list\"\n    static DS_REMOVE = \"/api_v1/ds/remove\" \n\n    static DS_MYSQL_DBS= \"/api_v1/ds/mysql/dbs\"\n\n    static DS_MYSQL_CONNECT = \"/api_v1/ds/mysql/connect/get\"\n    static DS_MYSQL_COLUMN_INFO = \"/api_v1/ds/mysql/column\"\n\n}","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}