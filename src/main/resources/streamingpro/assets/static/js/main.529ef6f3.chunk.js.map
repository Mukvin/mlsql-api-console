{"version":3,"sources":["serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","v1/service/CodeIntellegence.js","service/HTTPMethod.js","service/BackendConfig.js","user/MLSQLAuth.js","service/MLSQLAPI.js","common/tool.js","components/et/ButtonToCommand.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/async_execute/ResourceProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","components/MLSQLQueryDisplay.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/async_execute/QueryHistory.js","components/query/MLSQLDash.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/WorkshopTableTree.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/agg/AggStationOp.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/order/actions/RemoveFieldAction.js","v1/analysis/order/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/project/CastFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/OperateStation.js","v1/analysis/RealTimeViewTable.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/workshop.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/AdminSetting.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/Settings.js","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","App.js","index.js","v1/ActionMaker.js","backend_service/RemoteAction.js","backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","v1/app_console/admin/actions/SetStateAction.js","backend_service/backend/RestConst.js"],"names":["Boolean","window","location","hostname","match","ActionMaker","buildHandler","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","action","client","wrap","_context","prev","next","data","currentPage","ActionProxy","post","RemoteAction","LOGOUT","sessionStorage","removeItem","AccessToken","name","abrupt","logined","stop","_x","apply","this","arguments","SwitchActionHandler","handler","SwitchAction","UIMaker","res","user","userName","content","role","extraOption","backendTags","token","resp","headers","get","setItem","JSON","stringify","Cookies","set","path","userStr","getItem","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","__state","objectSpread","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","_AppConsoleHandlers","defineProperty","SetStateActionHandler","AppConsoleReducer","state","type","SetStateAction","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","dispacher","useContext","AppConsoleContext","_useState","useState","_useState2","slicedToArray","current","setCurrent","_useState3","_useState4","setLogined","_useState5","_useState6","isAdmin","setIsAdmin","_useState7","undefined","_useState8","leave","setLeave","tempCurrent","useRef","useEffect","react_default","createElement","Provider","Modal_default","title","visible","onCancel","onOk","buildEvent","cancelText","okText","es_alert","description","es_menu","onClick","key","selectedKeys","mode","Item","style","fontSize","divider","icon","LoginOutlined","SelectOutlined","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","_action$data","password","password2","error","REGISTER","sent","status","msg","setupLogin","RegisterActionHandler","RegisterAction","LOGIN","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","_LoginRegisterHandler","LoginRegisterReducer","AlertBoxW","styled","div","_templateObject","AlertBox","assign","closable","message","RegisterContext","initState","Register","appConsoleDispacher","_UIMaker$formLayout","formLayout1","_useReducerAsync","useReducerAsync","_useReducerAsync2","value","className","card","v1_AlertBox","es_form","onFinish","values","label","rules","required","input","Password","es_button","htmlType","LoginContext","Login","require","default","CodeIntellegence","sql","lineNum","columnNum","restClient","RUN","executeMode","isDebug","queryType","wordList","Method","GET","POST","PUT","Status","CREATE_SCRIPT_FILE","RUN_SCRIPT","FILE_UPLOAD","MLSQLAuth","classCallCheck","createClass","HTTP","callback","MLSQLAPI","request","apiResponse","then","s","catch","m","console","log","request2","json","str","_sCallBack","_errorCallBack","registerOrLogin","url","body","accessToken","serverError","uuidv4","ServerError","APIResponse","_this","process","jsonErr","jsonObj","params","successCallback","serverErrorCallback","ok","wow","fail","toString","auth","Auth","jobName","self","jsonRes","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","background","async","method","toUpperCase","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","fetch","timeout","Content-Type","Accept","Access-Token","text","okFun","failFun","new_request","resStatus","extractMsg","err","assert","condition","Error","ButtonToCommand","makeSQL","EditorOp","comp","possibleConstructorReturn","getPrototypeOf","call","editor","getValue","selectionRange","getSelectionRange","session","getTextRange","ConsoleOp","consoleComp","inner","setValue","insert","row","getLength","column","p","getCursorPosition","focus","EngineService","runScript","concat","JOB_KILL","block","ANALYSIS_TABLES","tableName","ANALYSIS_TABLE_INFO","empty_res","currentJobIndex","totalJobs","progress","totalJob","res2","completedJobsNum","activeJobsNum","totalCores","activeTasks","AsyncExecuter","queryPanel","enterLoading","commandGroupRef","setState","loading","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","getSelection","getText","commandGroup","jobProgressRef","taskProgressRef","displayRef","queryApp","display","dashRef","dash","logInfo","closed","append","setText","update","startTime","Date","getTime","scriptId","SAVE_SCRIPT_FILE","id","prepare","engineName","measureTime","intervalTimer","setInterval","_callee2","_context2","_this2","monitorJob","monitorLog","queryHistory","reload","enter","clearInterval","exit","JOB_DETAIL","jobInfo","cancelMonitor","reason","response","setData","length","map","item","split","killJob","JobProgress","_ref2","executor","jobProgress","finalTime","timer","toFixed","parent","react","marginRight","build_default","ref","et","Minutes","formatValue","Seconds","percent","margin","ResourceProgress","resourceInfo","jobs","jobNum","filter","maxWidth","EngineSelectComp","setLoading","engine","setEngine","proxy","backend","ENGINE_LIST","useEngine","es_select","onChange","width","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","assertThisInitialized","saveFile","getAllText","getAceEditor","appendToEditor","insertAfterCursor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","resourceProgressRef","etOver","evt","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","_getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","_x2","_x3","_x4","_x5","completers","newValue","run","onDragOver","preventDefault","onDrop","re_resizable_lib","defaultSize","height","onResize","resize","lib_default","theme","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","MLSQLAceEditor_CommandGroup","JobProgress_JobProgress","MLSQLAceEditor_TaskProgress","CommandGroup","_this3","_this4","TaskProgress","_this5","setTimeout","taskCompute","api","BackendConfig","hasOwnProperty","jsonArray","_jsonObj","numTasks","numActiveTasks","numCompletedTasks","forEach","successPercent","resourceCompute","ReactMarkdown","MLSQLQueryDisplay","_React$Component","setRender","keyColumn","config","render","isPrototypeOf","substring","keys","basket","rows","dataIndex","index","new_item","columns","rowDoubleClick","event","view","enabled","disablePreview","tableStyle","inherits","es_table","onRow","onDoubleClick","dataSource","modal","OkText","source","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","fileListStyle","UploadDropzone","files","req","file","attach","end","f","size","es","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","styles","acceptedFiles","rejectedFiles","Component","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","dataTypeToItems","reduce","x","y","z","dataType","Map","_config","scatters","toConsumableArray","dataTypeConfig","fill","shape","recharts_es6","xConfig","dataKey","yConfig","zConfig","top","right","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","titleMap","isStream","renderRawData","MLSQLHTML","MLSQLHTML_MLSQLHTMLPanel","MLSQLHTMLPanel","refresh","sandbox","srcDoc","frameBorder","scrolling","ifr","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","executeAgainStatus","defaultRender","record","currentTH","num","field","target","parentNode","cellIndex","t0","whiteSpace","wordWrap","renderConfig","_ref4","_callee4","_context4","t","cssStyle","__command__","runJob","_ref3","_callee3","_context3","JOB_LIST","processData","detailConsoleMessage","respDisplay","MLSQLQueryDisplay_MLSQLQueryDisplay","overflow","_display","marginBottom","Panel","Collapse","TabPane","Tabs","MLSQLDash","_PureComponent","isNormalXY","xYRender","renderDash","MLSQLStream_MLSQLStream","queryResData","collapse","header","tabs","defaultActiveKey","onTabClick","tab","ResourceProgress_ResourceProgress","UploadDropZone_UploadDropzone","QueryHistory_QueryHistory","PureComponent","CodeBlock","originalEditor","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","spin","Engine","show_result","fail_result","newRunScript","code","DataTable","parseData","_this$parseData","_this$parseData2","_this$parseData3","_this$parseData4","DataTable_ReactMarkdown","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","DataTable_DataTable","ExecuteUnit","codeBlock","displayGroup","notebook","nextExecuteUnit","codeBlockIsEmpty","getCodeStr","CodeBlock_CodeBlock","CommandGroup_CommandGroup","DisplayGroup_DisplayGroup","CODE_SPLITTER","NodeBook","createNewExecuteUnit","ExecuteUnit_ExecuteUnit","addRef","instance","executeUnitRefs","slice","executeUnits","saveNoteBook","LogMonitor","_cancelQueryLog","_queryLog","cancelQueryLog","PythonACE","logMonitor","select","finalSQL","queryLog","runMode","ex","PythonACE_CommandGroup","PythonEditor","python_PythonACE","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabName","newTabIndex","src_components_MLSQLAceEditor","NoteBook_NodeBook","PythonEditor_PythonEditor","add","getPaneIndexByActiveKey","lastIndex","pane","i","remove","editorRefList","closeEditor","TabEditor_TabPane","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","getTempTableName","replace","getJobName","escapeQuote","unQuote","startsWith","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","robotFetchParamWithCollect","getField","v","distinct","arrays","tempF","fastCompareObject","deepCompareObject","arg1","arg2","leftChain","rightChain","compare2Objects","isNaN","RegExp","String","Number","constructor","prototype","indexOf","pop","ETPopLoad","componentDidMount","datasourcesRender","ETPopLoad_Option","getAttribute","sourceType","sourceTypeV","es_row","param","col","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","k","rv","whereStr","etpop","ETPopLoad_InputGroup","showSearch","optionFilterProp","filterOption","option","toLowerCase","ignorePath","ignoreTableName","ETLoadParams_ETLoadParams","TextArea","ETPopAlgorithm","renderParam","temp","ETPopAlgorithm_InputGroup","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETPopSave_Option","ETPopSave_InputGroup","ETBaseTool","ETBaseTool_TextArea","outputTableName","outputTableNameV","showTableName","ETBaseTool_InputGroup","showOutputTableName","pathNameForRender","showPathName","asStr","ETPopTool","_ETBaseTool","ETPopDownload","_ETPopTool","_getPrototypeOf2","_len","args","Array","_key","ETPopDownload_InputGroup","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","ETPopScriptUDF_TextArea","showCode","switch_default","ETPopScriptUDF_Option","ETExample","etName","ETExample_Option","ETRegister","ETRegister_Option","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETStringIndex_InputGroup","ETDownloadFile","link","document","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETStreamProgress_Option","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","ETPopLoad_ETPopLoad","ETPopSave_ETPopSave","ETPopDownload_ETPopDownload","ETStringIndex_ETStringIndex","ETDownloadFile_ETDownloadFile","ETExample_ETExample","ETStreamProgress_ETStreamProgress","ETPopScriptUDF_ETPopScriptUDF","ETRegister_ETRegister","ETPopTool_ETPopTool","ETPopAlgorithm_ETPopAlgorithm","MLSQLETQuick","itemData","onDragStart","renderPop","ETPop_ETPop","etDoubleClick","padding","MLSQLETQuick_Panel","gutter","tag_default","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","entries","TableOutlined","isLeaf","tip","spinning","show","FileSystemTree","getFileList","root","ls","_corrupt_record","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","FileSystemTree_TreeNode","FileSystemTree_DirectoryTree","loadData","CommonHandlers","CommonActions","node","consoleApp","scriptFile","SCRIPT_FILE_GET","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","_action$data$scriptCo","scriptContent","_form$getFieldValue","fileName","saveParams","getFieldValue","createFileError","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","includes","element","isExpanded","ExpandActionHandler","ExpandAction","SCRIPT_FILE_REMOVE","DeleteFileActionHandler","DeleteFileAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","expand","ScriptTreeHandlers","_objectSpread2","ScriptTreeActions","_objectSpread3","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","list","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox_templateObject","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","_rightClickNodeTreeIt","tmpStyle","zIndex","position","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","_Form$useForm","Form","useForm","builder","treeRes","treeData","SCRIPT_FILE_LIST","sort","b","getList","_useContextMenu","FolderAddOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","v1_SpinBox","ScriptTree_DirectoryTree","onExpand","autoExpandParent","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","LeftTreePane_TabPane","DeltaLakeTree_DeltaLakeTree","FileSystemTree_FileSystemTree","fileSystemTreeRef","MLSQLQueryApp","script","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","MLSQLDash_MLSQLDash","sqlContent","createRef","paddingRight","borderRight","LeftTreePane_LeftTreePane","leftTreePaneRef","MLSQLETQuick_MLSQLETQuick","TabEditor_TabEditor","MixinBuilder","superclass","mixins","c","mixin","mix","NewSessionOp","_superclass","_temp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","_this$state$currentTa","AnalysisWorkshop","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","AFileSystemTree_DirectoryTree","with","ADeltaLakeTree","tableClick","ADeltaLakeTree_TreeNode","ADeltaLakeTree_DirectoryTree","WorkshopTableTree","tablesInWorkshop","sessionId","flatMap","WorkshopTableTree_TreeNode","WorkshopTableTree_DirectoryTree","LeftView","leftview_TabPane","WorkshopTableTree_WorkshopTableTree","workshopTableTreeRef","ADeltaLakeTree_ADeltaLakeTree","AFileSystemTree_AFileSystemTree","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","es_switch","onApply","disabled","onRollback","StationCommonOp","save","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","rollback","SelectJoinField","currentTableSchema","joinTable","joinStation","joinInfo","schema","tableInfo","currentTableFields","fields","joinTableFields","tableSchema","SelectJoinField_Option","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","prevProps","transfer","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","SelectFields_SelectFields","danger","SelectJoinTable","tables","SelectJoinTable_Option","Step","Steps","StepContent","JoinStation_templateObject","JoinStation","_this$joinInfo","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","toggleMessage","currentStep","preview","steps","SelectJoinTable_SelectJoinTable","SelectJoinField_SelectJoinField","SelectProjectFields_SelectProjectFields","ApplyOrSave_ApplyOrSave","es_steps","ColumnOperate","ColumnOperate_ReactMarkdown","FuncDesc","func","funcValue","es_list","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","columnName","agg","Math","random","funcPopUp","collect","d","ApplyFuncToField_Option","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","FuncDesc_FuncDesc","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","enableGroupByField","dataref","columnsRef","handleFunc","_this$applyFuncToFiel","applyFuncToFieldRef","generateProjectField","groupByFields","aggFields","ApplyFuncToField_ApplyFuncToField","ColumnOperate_ColumnOperate","fieldName","newName","newFields","getLastApplyTable","RenameFields","formRef","FunctionField","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsReducer_objectSpread2","CastFieldsActions","CastFieldsReducer_objectSpread3","CastFieldsReducer","RollbackActionHandler","RollbackAction","_action$__state","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","_OrderStationHandlers","OrderStationActions","_OrderStationActions","OrderStationReducer","CastFieldsContext","CastFields","CastFields_Option","submit","marginTop","onDeselect","ProjectStation","ProjectStation_TabPane","onSelectApply","selectFieldsRef","onRenameApply","RenameFields_RenameFields","renameFieldsRef","onFuncApply","FunctionField_FunctionField","functionFieldRef","showInfo","isAggExists","currentFields","Compare","compareInput","items","compare","conditionInput","command","addGroup","groupName","groupType","selectedRows","selectedRowKeys","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","GroupGroup","ApplyGroup","FilterStation","filterStr","con","onFilterApply","group","buildCondition","buildFilter","currentConditions","FilterStation_TabPane","Compare_Compare","ApplyGroup_ApplyGroup","GroupGroup_GroupGroup","OrderStationContext","OrderStation","OrderStation_Option","initialValue","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","_action$__state$resul","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationReducer_objectSpread2","WindowStationActions","WindowStationReducer_objectSpread3","WindowStationReducer","useSelectFields","_props$enableApply","enableApply","fieldWrapper","selectFields","_props$selectFieldsLa","selectFieldsLabel","_props$selectFieldsMo","selectFieldsMode","operateFields","setOperateFields","setError","SelectFieldsToOperate_Option","commands","onClose","minWidth","BuildGroup","WindowStationContext","_useSelectFields","Fragment","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","_useFieldTransform","funcs","setFuncs","setCurrentFunc","fetchFuncs","ApplyFunc_Panel","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","_getTransform","_getTransform2","resetFields","renderItem","typography","Text","WindowStation_templateObject","WindowStation","WindowStation_Step","WindowStation_StepContent","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","_useDataConfig","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","_useDashConfig","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","dist_default","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","dashPlugins","PLUGIN_LIST","fetchPlugin","_scriptContent","analyzedScriptContent","PLUGIN_GET","pluginName","image","dataValues","dashValues","xColumn","yColumn","OperateStation","tabPosition","OperateStation_TabPane","ProjectStation_ProjectStation","FilterStation_FilterStation","analysis_join_JoinStation","AggStation_AggStation","DashStation_DashStation","RealTimeViewTable","getDefaultRender","getDefaultSearch","getColumnSearchProps","getDefaultTitleRender","dropdown","isDash","newColumns","searchText","searchedColumn","RealTimeViewTable_ReactMarkdown","filterDropdown","setSelectedKeys","confirm","clearFilters","searchInput","onPressEnter","space","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","dropdownStat","menu","BarChartOutlined","overlay","sqls","loadingTable","OperateStation_OperateStation","stationRef","es_result","subTitle","leftview_LeftView","showMessage","consoleMessage","showInfoMessage","infoMessage","operateStationView","RealTimeViewTable_RealTimeViewTable","dbPrefix","_res","whereBlock","_res$content","setCurrentTable","_x6","_x7","_x8","updateDisplay","persist","finalSql","persistJobName","extraParams","persistSQL","ANALYSIS_SAVE","_action$data$enableRe","enableRegister","_action$data$enableLo","enableLogin","APP_SAVE","login","register","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","_AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","_getAppInfo","appInfo","_data","APP_INFO","getAppInfo","showIcon","defaultChecked","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","setSchema","setResult","_useState9","_useState10","editorMode","setEditorMode","_useState11","_useState12","_useDynamicList","useDynamicList","getKey","move","resetList","sortForm","getFieldsValue","submitNow","REG","fieldValue","matchFF","exec","pagination","react_drag_listview_es","onDragEnd","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","_useCrudTable","_submit","ENGINE_ADD","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","AdminSetting_SubMenu","MailOutlined","DefaultBackend","USER_EXTRA","updateUser","Settings","Settings_SubMenu","AppConsole","Register_Register","src_components_MLSQLQueryApp","v1_analysis_workshop","AdminSetting_AdminSetting","textAlign","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","_AppSetupReducerHandl","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","_AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","app_setup_templateObject","AppSetupHeader","_templateObject2","AppSetupBody","_templateObject3","AppSetup","page_header","app_setup_Step","pages_StepUserPassword","pages_AddEngines","pages_Done","App","configured","app_setup","AppConsole_AppConsole","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","eventCallBack","dispatch","getState","signal","_Volumes_Samsung_T5_projects_mlsql_web_console_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Volumes_Samsung_T5_projects_mlsql_web_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_Volumes_Samsung_T5_projects_mlsql_web_console_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","USER_NAME","GlobalParamNames","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","Backend","fetch_config","BACKEND_URL","_request","basic_config","final_config","_args","_userName","_runScript","_get","_post","_Volumes_Samsung_T5_projects_mlsql_web_console_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","DELETE"],"mappings":"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","file":"static/js/main.529ef6f3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption)\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../admin/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal';\nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);\n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => {\n                if (current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                </Menu.Item>\n                <Divider type=\"vertical\"></Divider>\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    Login\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                    Register\n                </Menu.Item>}\n\n                {logined && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    Console\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                    Analysis Workshop\n                </Menu.Item>}\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        Settings\n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        Admin\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title=\"More...\">\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message=\"Message\" description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { SetStateAction } from '../admin/actions/SetStateAction';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path){ \n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\":\"robot\"})\n        return res        \n    }\n\n    static async killJob(jobName){  \n        const res = await client.runScript(\"!kill \" + jobName+\";\", uuidv4(), {\"queryType\":\"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName:jobName})                        \n        return res\n    }\n\n    static async runJob(sql,block=false){        \n        const res = await client.runScript(sql, uuidv4(),{ \"async\": block}) \n        return res\n    }\n\n    static async showFunctions(){        \n        const res = await client.runScript(\"\",uuidv4(),{executeMode:\"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`,jobName ,{\"queryType\":\"robot\"}) \n        return {jobName,res} \n    }\n\n    static async tablesInDeltaLake(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`,jobName ,{\"queryType\":\"robot\"}) \n        return res\n    }\n\n    static async tablesInWorkshop(){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLES ,{}) \n        return res\n    }\n\n    static async tableInfo(tableName){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO ,{tableName}) \n        return res\n    }\n\n    static async jobProgress(jobName){\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})\n        const empty_res =  {currentJobIndex:0,totalJobs:1}\n        if(res.status===200){\n            const jsonObj = res.content[0]\n            if(!jsonObj){\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if(totalJobs===1){\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})                                \n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex               \n            }\n            return {currentJobIndex,totalJobs}\n        }\n        return empty_res\n    }\n\n    static async resourceInfo(){\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`,uuidv4(),{\"queryType\":\"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks,totalCores}\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()\n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,                \n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Progress, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={loading:false,progress:0}        \n    }\n\n    enter = (params) => {\n        this.setState({loading:true})  \n        this.intervalTimer = setInterval(async () => {                        \n            const jobName = this.queryPanel.executor.jobName\n            const {currentJobIndex,totalJobs} =  await EngineService.jobProgress(jobName)            \n            this.setState({progress:(currentJobIndex/totalJobs)*100})\n        },1000)\n    }\n\n    exit = () => {        \n        if(this.intervalTimer){            \n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null \n            this.finalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n            this.setState({loading:false})          \n        }\n    }\n\n    render() {\n        if(!this.state.loading) {\n            if(this.finalTime){\n                return <Button type=\"primary\" style={{margin:\"0px 0px 20px 0px\"}}>\n                   Time Cost: {this.finalTime}\n                </Button>\n            }else {\n                return <div></div>\n            }\n        }\n        return <div>                    \n            <Button type=\"primary\" style={{marginRight:\"20px\"}}>\n            Time Cost:<Timer ref={(et)=> this.timer =et}>        \n                <Timer.Minutes formatValue={value => `${value} m. `} /> \n                <Timer.Seconds formatValue={value => `${value} s. `}/>         \n            </Timer></Button>\n            <Progress type=\"circle\" percent={this.state.progress} />\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map(item=>{\n                return <Select.Option value={item.name}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        this.taskProgressRef.current.enter({jobName: jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        this.taskProgressRef.current.exit()        \n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.engineName = engine\n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.detailConsoleMessage||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","import React from 'react'\nimport AceEditor from \"react-ace\";\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n\n            />\n        )\n    }\n}","import React from 'react'\nimport { Icon } from '@ant-design/compatible';\n\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false, executeUnit: props.executeUnit}\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.state.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.isExecute ? <span onClick={this.cancelExecute}><Icon type=\"sync\" spin/></span> :\n                    <span onClick={this.evtExecute}><Icon type=\"caret-right\"/></span>\n            }\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            return <DataTable data={this.state.displayData} ref={(et) => this.displayTableRef = et}></DataTable>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\n\n\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n\n    render() {\n        return <div>\n            <CodeBlock initialCode={this.props.initialCode} ref={et => {\n                this.codeBlock = et\n            }} executeUnit={this}/>\n            <CommandGroup ref={et => {\n                this.commandGroup = et\n            }} executeUnit={this}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NodeBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {executeUnits: this.executeUnits}\n        this.engine = new Engine(5 * 60 * 1000)\n    }\n\n    createNewExecuteUnit = (initialCode) => {\n        return <ExecuteUnit parent={this} initialCode={initialCode} ref={et => this.addRef(et)}/>\n    }\n\n    addRef = (instance) => {\n        if (instance) {\n            this.executeUnitRefs.push(instance)\n        }\n    }\n\n    nextExecuteUnit = () => {\n        const isLastEmpty = () => {\n            return this.executeUnitRefs.slice(-1)[0].codeBlockIsEmpty()\n        }\n        if (!isLastEmpty()) {\n            this.executeUnits.push(this.createNewExecuteUnit())\n            this.setState({executeUnits: this.executeUnits})\n        }\n        this.saveNoteBook()\n    }\n\n    saveNoteBook = () => {\n        const value = this.executeUnitRefs.map((instance) => {\n            return instance.getCodeStr()\n        }).join(CODE_SPLITTER)\n\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    text = (value, scriptId) => {\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value && value !== \"undefined\") {\n            this.executeUnitRefs = []\n            this.executeUnits = this.initialCode.split(CODE_SPLITTER).map((initialCode) => {\n                return this.createNewExecuteUnit(initialCode)\n            })\n            this.setState({executeUnits: this.executeUnits})\n        }\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.executeUnits\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NodeBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabName, callback) => {    \n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NodeBook parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static unQuote = (str) => {\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true\n        }\n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }\n\n    static distinct = (arrays, field) => {\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"../../app_console/admin/actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()    \n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    convert = (item) => {                \n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };               \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, { useRef, useCallback, useEffect } from 'react';\nimport { Tree, Modal, Menu, Form, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DownOutlined, FileOutlined, FolderOutlined, DeleteOutlined, FileAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames } from './actions/ScriptTreeReducer';\nimport { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport { useContextMenuCallback, useContextMenu } from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\n\nconst { DirectoryTree } = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const { consoleApp } = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const { loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return a.id - b.id\n            })\n\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const { id } = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu >\n                <Menu.Item icon={<FolderAddOutlined />} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu >\n                <Menu.Item onClick={() => {                    \n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu >\n            <Menu.Item icon={<FileAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined />} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n\n    return (\n        <ScriptTreeContext.Provider value={{ dispacher }}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: { operateModal: false }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n                <DirectoryTree\n                    onExpand={(expandedKeys) => {                        \n                        dispacher({\n                            type: ScriptTreeActionNames.expand,\n                            data: { expandedKeys }\n                        })\n                    }}\n                    autoExpandParent={true}\n                    expandedKeys={\n                        expandedKeys\n                    }\n                    onDoubleClick={(evt, node) => {\n                        dispacher({\n                            type: ScriptTreeActionNames.openScriptFile,\n                            data: { consoleApp, node }\n                        })\n                    }}\n                    expandAction=\"click\"\n                    onRightClick={popContextMenu}\n                    switcherIcon={<DownOutlined />}\n                    treeData={nodes}></DirectoryTree>}\n                    \n        </ScriptTreeContext.Provider>\n    )\n}\nexport { ScriptTree, ScriptTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport MLSQLAceEditor from './MLSQLAceEditor'\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport ExecuteUnit from \"./notebook/ExecuteUnit\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\n\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {sqlContent: \"\", displayEditor: \"normal\"}\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n\n        } else {\n            this.editorGroup.current.addFull(script.name, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","\nimport * as React from \"react\";\nimport { Tree, Spin, Menu, Icon, Modal } from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport mix from \"../../common/mixin\"\nimport { TableOutlined } from '@ant-design/icons'\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class WorkshopTableTree extends mix(React.Component).with(NewSessionOp) {  \n\n  constructor(props) {\n    super(props)\n    this.state = { dbs: {}, loading: false }    \n    this.workshop = props.parent.workshop\n  }\n\n  async reload() {\n    this.setState({ loading: true })\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n      const dbs = {}\n      res.content.forEach(item => {\n        if (!dbs[item.sessionId]) {\n          dbs[item.sessionId] = [item.tableName]\n        } else {\n          dbs[item.sessionId].push(item.tableName)\n        }\n      })\n      this.setState({ dbs })\n    }\n    this.setState({ loading: false })\n  }\n\n  show() {\n    return Object.entries(this.state.dbs).flatMap(([key, value]) => {\n      return value.map(item => {\n          return <TreeNode icon={<TableOutlined />} table={item} db={key} title={item} key={item} isLeaf />\n        })\n    })\n  }\n\n  async componentDidMount() {\n    await this.reload()\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal\n          title={`Open Table`}\n          visible={this.state.showNewSession}\n          onCancel={this.toggleNewSession}\n          onOk={() => { this.showTable(\"temp\") }}\n          cancelText=\"Cancel\"\n          OkText=\"Ok\">\n            {`Open  ${this.currentTableName()}]?`}\n        </Modal>\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n          <DirectoryTree onRightClick={this.showNewSession}>\n            {this.show()}\n          </DirectoryTree>\n        </Spin>\n      </div>\n\n\n    )\n  }\n}","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport WorkshopTableTree from \"./WorkshopTableTree\";\nimport \"./leftview.scss\"\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {    \n    constructor(props){   \n        super(props)            \n        this.workshop = props.parent\n    }\n    render(){              \n       return <Tabs defaultActiveKey=\"1\"  onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }                        \n    }}>\n       <TabPane tab=\"Table Workshop\" key=\"1\">\n       <div className=\"leftview-box\" >           \n           <WorkshopTableTree ref={(et)=> this.workshopTableTreeRef = et} parent={this}></WorkshopTableTree>\n       </div>\n       </TabPane>\n\n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\" >           \n           <ADeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <AFileSystemTree ref={(et)=> this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n       </div>\n       </TabPane> \n                       \n     </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n    showTable = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` as ${tableName};`\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 2) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${tableInfo.tableName};\n                select * from ${tableInfo.tableName} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${tableInfo.tableName} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            let whereBlock = \"where \"\n            if (options) {\n                whereBlock = whereBlock + Object.keys(options).map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            } else whereBlock = \"\"\n\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        this.sqls.push({ tableName, sql })\n        this.setState({loadingTable:true})\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({loadingTable:false})\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId:this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data,schema)\n    }\n\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <Transfer\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table    \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch onChange={(checked)=>this.enableGroupByField(checked,record)} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <Button dataref={record} onClick={() => { this.showAggFuncsAndApply(record) }}>Choose function</Button>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{\n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}><Input placeholder={\"input the new name here\"} /></Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button dataref={record} onClick={() => { this.showAggFuncsAndApply(record) }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../order/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../order/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { SetStateAction, SetStateActionHandler } from \"../../app_console/admin/actions/SetStateAction\";\nimport { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"./AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"./RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../../app_console/admin/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport { OrderStationActionNames } from '../order/actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab=\"Select Columns\" key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab=\"Rename Columns\" key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab=\"Transform Columns\" key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab=\"Cast Column Type\" key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.params = []\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    compareInput = (value, record) => {\n        const items = this.params.filter(item => item.field === record.field)\n        if (items.length == 1) {\n            items[0][\"compare\"] = value\n        } else {\n            this.params.push({\n                ...record,\n                compare: value\n            })\n        }\n    }\n\n    conditionInput = (value, record) => {\n        const items = this.params.filter(item => item.field === record.field)\n        if (items.length === 1) {\n            items[0][\"condition\"] = value\n        } else {\n            this.params.push({\n                ...record,\n                condition: value\n            })\n        }\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"compare\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <Select key={record.field} defaultValue={value} onChange={(value) => { this.compareInput(value, record) }} style={{ width: 100 }} >\n                        <Select.Option value=\"=\">=</Select.Option>\n                        <Select.Option value=\"<\">{'<'}</Select.Option>\n                        <Select.Option value=\">\">{'>'}</Select.Option>\n                        <Select.Option value=\">=\">{'>='}</Select.Option>\n                        <Select.Option value=\"<=\">{'<='}</Select.Option>\n                        <Select.Option value=\"!=\">{'!='}</Select.Option>\n                        <Select.Option value=\"like\">{'like'}</Select.Option>\n                        <Select.Option value=\"in\">{'in'}</Select.Option>\n                    </Select>\n                }\n            },\n            {\n                title: \"condition\",\n                dataIndex: \"condition\",\n                render: (value, record) => {\n                    return <Input onChange={(evt) => { this.conditionInput(evt.target.value, record) }} key={record.field} defaultValue={value} />\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.params.filter(item => this.selectedRowKeys.includes(item.field))\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.params = []\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form>\n            <Divider/>  \n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.params.filter(item => this.selectedRowKeys.includes(item.field))\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {} \n        this.currentConditions = {}\n    }\n\n    onNonGroupFilterApply = async (selectedRows)=>{\n        const filterStr = selectedRows.map(item => {\n            let con = \"\"\n            switch (item.dataType) {\n                case \"string\": con = `\"${item.condition}\"`; break;\n                default: con = item.condition;\n            }\n            return `${Tools.getField(item.field)} ${item.compare} ${con}`\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n        \n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildCondition(items) {\n            return items.map(item => {\n                let con = \"\"\n                switch (item.dataType) {\n                    case \"string\": \n                     con = `\"${Tools.escapeQuote(item.condition)}\"`                     \n                     break\n                    default: con = item.condition;\n                }\n                return `${Tools.getField(item.field)} ${item.compare} ${con}`\n            })\n        }\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${buildCondition(group.data).join(\" and \")})`\n                } else return `(${buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n        \n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    \n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">                        \n                        <Compare  ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup  ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup  ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport {LimitStation} from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = { key: Math.random() }\n    } \n\n    reload = ()=>{\n        this.setState({key:Math.random()})\n    }\n       \n    render() {\n        return <div className=\"os-pane\">\n            <div className=\"os-tabs\">\n                <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>                \n                <TabPane tab=\"Project\"  key={1} >\n                    <ProjectStation parent={this}></ProjectStation>\n                </TabPane>\n                <TabPane tab=\"Filter\" key={2} >\n                    <FilterStation parent={this}></FilterStation>\n                </TabPane>\n                <TabPane tab=\"Join\" key={3}>\n                    <JoinStation  parent={this}></JoinStation>\n                </TabPane>\n                <TabPane tab=\"Agg\" key={4} >\n                    <AggStation parent={this}></AggStation>\n                </TabPane>\n                <TabPane tab=\"Order\" key={5} >\n                    <OrderStation parent={this}></OrderStation>\n                </TabPane>\n                <TabPane tab=\"Limit\" key={6} >\n                    <LimitStation parent={this}></LimitStation>\n                </TabPane>\n                <TabPane tab=\"Window\" key={7} >\n                    <WindowStation parent={this}></WindowStation>\n                </TabPane>\n                <TabPane tab=\"Dash\" key={8} >\n                    <DashStation parent={this}></DashStation>\n                </TabPane>\n                </Tabs>\n                </div>\n            \n        </div>\n    }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return value\n            }\n            case \"array\": return (value, record) => {\n                return JSON.stringify(value)\n            }\n            case \"map\": return (value, record) => {\n                return JSON.stringify(value)\n            }\n            default:\n                return (value, record) => { return value }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        } \n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows ,isDash})\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table\n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: true }}\n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <ReactMarkdown source={this.state.view.content || \"\"} />\n            </Modal>\n        </div>\n        )\n    }\n\n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { RealTimeDash } from \"./dash/pages/RealTimeDash\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"delta\", \"public\", \"simpleData\", { header: \"true\" })\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <Divider></Divider>\n                <div className=\"ws-table-pane\">\n                    <RealTimeViewTable style={{ width: \"90%\" }} ref={(et) => this.displayRef = et} parent={this} />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params)=>{\n      if(this.sqls.length<2){\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      await this.apply(currentTable)\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql } = params\n      this.sqls.push(params)\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try{\n         const res = await this.client.runScript(view, Tools.getJobName(), Tools.robotFetchParam())\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      }catch(e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }      \n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${this.getLastApplyTable().tableName} as ${tableName};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n         \n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.workshopTableTreeRef.reload()\n    }\n    \n}","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister = false, enableLogin = false } = action.data\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, {\n        login: enableLogin,\n        register: enableRegister\n    })\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableLogin: Boolean(appInfo.content.register),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error,setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => remove(index)}>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {  \n        if(!editorMode){\n            const newColumns = columns.map(item=>{\n                item[\"render\"] = (text, row, index)=>{\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n            columns={newColumns}\n            dataSource={data}            \n            pagination={false}\n        />\n        }      \n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error}/>}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading,setEditorMode ,setError}\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"lr-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['lr-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"lr-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"lr-settings\"}\n                                })\n                            }}>Login/Register Control</Menu.Item>                            \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"lr-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                     \n\n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\n\n\nfunction DefaultBackend(props) {\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const save = async () => {\n            const proxy = new ActionProxy()\n            const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n            UIMaker.updateUser(res)\n        }\n        if (engine) {\n            save()\n        }\n    }, [engine])\n    return (\n        <div className=\"common-margin common-child-center\">\n            <Card title=\"Default Backend\" style={{width:\"50%\"}}>\n            <Form>\n            <Form.Item label=\"currentValue\">\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label=\"Set default engine\">\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item>\n           </Form>\n            </Card>\n        </div>\n    )\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport {MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage,setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['default-backend']}\n                        defaultOpenKeys={['analysis-workshop']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"analysis-workshop\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Analysis Workshop</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"default-backend\" onClick={()=>{\n                                \n                            }}>Default Backend</Menu.Item>                            \n                        </SubMenu> \n                                                                       \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"default-backend\" && <DefaultBackend/>}                     \n                </div>\n            </div>\n    )\n}\nexport {Settings}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport Modal from 'antd/lib/modal/Modal';\nimport { Settings } from './admin/pages/Settings';\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole() {\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>\n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ScriptTree } from './v1/script_console/ScriptTree';\n\nconst initState = {\n    appConfigured: false,\n    loading: true\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { appConfigured: appInfo.content.configured, loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <AppContext.Provider value={{ dispacher }}>\n            {loading && <SpinBox />}\n            {!loading && !appConfigured && <AppSetup />}\n            {!loading && appConfigured && <AppConsole />}\n        </AppContext.Provider>\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n\n\n}","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}