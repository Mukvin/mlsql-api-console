{"version":3,"sources":["serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","v1/service/CodeIntellegence.js","service/HTTPMethod.js","service/BackendConfig.js","user/MLSQLAuth.js","service/MLSQLAPI.js","components/et/ButtonToCommand.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/async_execute/ResourceProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","common/tool.js","components/MLSQLQueryDisplay.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/async_execute/QueryHistory.js","components/query/MLSQLDash.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/workshop_tables/actions/LoadAction.js","v1/analysis/workshop_tables/actions/OpenAction.js","v1/analysis/workshop_tables/actions/DeleteAction.js","v1/analysis/workshop_tables/actions/ExportToAction.js","v1/analysis/workshop_tables/actions/WorkshopTablesReducer.js","v1/analysis/workshop_tables/WorkshopTables.js","v1/analysis/hive/actions/LoadAction.js","v1/analysis/hive/actions/OpenAction.js","v1/analysis/hive/actions/SearchAction.js","v1/analysis/hive/actions/HiveTablesReducer.js","v1/analysis/hive/HiveTables.js","v1/analysis/hive/pages/usePartitionSelect.js","v1/analysis/datasource/actions/OpenMySQLTableAction.js","v1/analysis/datasource/actions/MysqlTreeReducer.js","v1/analysis/common/pages/useIntegerStep.js","v1/analysis/datasource/pages/MysqlTree.js","v1/analysis/datasource/pages/useMySQLPartition.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/agg/AggStationOp.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/order/actions/RemoveFieldAction.js","v1/analysis/order/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/project/CastFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/filter/FilterCondition.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/OperateStation.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/RealTimeViewTable.js","v1/analysis/OperateStationWrapper.js","v1/analysis/RealTimeTableWrapper.js","v1/analysis/workshop.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/pages/ChangePassword.js","v1/app_console/admin/AdminSetting.js","v1/analysis/common/pages/useUserConfig.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/ApplyTimeout.js","v1/app_console/admin/pages/Teams.js","v1/analysis/datasource/pages/MySQL.js","v1/analysis/datasource/pages/ListMySQL.js","v1/app_console/admin/pages/Settings.js","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","locale/zh_CN.js","locale/en_US.js","App.js","index.js","backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","v1/ActionMaker.js","backend_service/RemoteAction.js","v1/app_console/admin/actions/SetStateAction.js","backend_service/backend/RestConst.js"],"names":["Boolean","window","location","hostname","match","ActionMaker","buildHandler","action","a","data","currentPage","client","ActionProxy","post","RemoteAction","LOGOUT","sessionStorage","removeItem","AccessToken","name","logined","SwitchActionHandler","handler","SwitchAction","UIMaker","res","user","userName","content","role","extraOption","backendTags","token","resp","headers","get","setItem","JSON","stringify","Cookies","set","path","userStr","getItem","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","__state","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","setState","SetStateActionHandler","AppConsoleReducer","state","type","SetStateAction","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","appInfo","dispacher","useContext","AppConsoleContext","useState","current","setCurrent","setLogined","isAdmin","setIsAdmin","undefined","leave","setLeave","tempCurrent","useRef","useEffect","Provider","title","visible","onCancel","onOk","buildEvent","cancelText","okText","description","onClick","key","selectedKeys","mode","Item","style","fontSize","icon","LoginOutlined","id","SelectOutlined","enableConsole","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","password","password2","error","REGISTER","status","msg","setupLogin","RegisterActionHandler","RegisterAction","LOGIN","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","LoginRegisterReducer","AlertBoxW","styled","div","AlertBox","closable","message","RegisterContext","initState","Register","appConsoleDispacher","formLayout1","useReducerAsync","value","className","onFinish","values","label","rules","required","Password","htmlType","LoginContext","Login","require","default","CodeIntellegence","sql","lineNum","columnNum","restClient","RUN","executeMode","isDebug","queryType","wordList","Method","Status","RUN_SCRIPT","MLSQLAuth","isLogin","HTTP","callback","MLSQLAPI","request","apiResponse","then","s","catch","m","console","log","request2","json","str","login","_sCallBack","_errorCallBack","this","registerOrLogin","logout","register","url","body","accessToken","serverError","uuidv4","ServerError","constructor","APIResponse","process","jsonErr","jsonObj","params","successCallback","serverErrorCallback","ok","wow","fail","toString","runScript","auth","Auth","jobName","self","jsonRes","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","Object","assign","background","async","method","toUpperCase","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","fetch","timeout","text","newRunScript","okFun","failFun","new_request","resStatus","extractMsg","err","ButtonToCommand","makeSQL","EditorOp","consoleComp","inner","session","editor","setText","setValue","append","insert","row","getLength","column","insertAfterCursor","p","getCursorPosition","focus","comp","super","getText","getValue","getSelection","selectionRange","getSelectionRange","getTextRange","EngineService","JOB_KILL","block","ANALYSIS_TABLES","tableName","ANALYSIS_TABLE_INFO","empty_res","currentJobIndex","totalJobs","progress","totalJob","res2","completedJobsNum","activeJobsNum","totalCores","activeTasks","AsyncExecuter","queryPanel","enterLoading","commandGroupRef","loading","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","commandGroup","jobProgressRef","taskProgressRef","displayRef","queryApp","display","dashRef","dash","logInfo","closed","prepare","update","measureTime","startTime","Date","getTime","saveFile","scriptId","SAVE_SCRIPT_FILE","run","engineName","intervalTimer","setInterval","monitorJob","monitorLog","queryHistory","reload","enter","cancelMonitor","clearInterval","exit","JOB_DETAIL","jobInfo","reason","response","setData","length","map","item","split","killJob","JobProgress","executor","jobProgress","finalTime","timer","toFixed","parent","render","marginRight","ref","et","Minutes","formatValue","Seconds","percent","margin","ResourceProgress","componentDidMount","resourceInfo","jobs","jobNum","filter","maxWidth","EngineSelectComp","setLoading","engine","setEngine","proxy","ENGINE_LIST","backend","useEngine","onChange","width","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","getAllText","getAceEditor","appendToEditor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","resourceProgressRef","etOver","evt","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","completers","newValue","onDragOver","preventDefault","onDrop","defaultSize","height","onResize","resize","theme","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","CommandGroup","TaskProgress","mark","setTimeout","taskCompute","api","BackendConfig","condition","Error","assert","hasOwnProperty","jsonArray","_jsonObj","numTasks","numActiveTasks","numCompletedTasks","forEach","successPercent","resourceCompute","ReactMarkdown","MLSQLQueryDisplay","setRender","keyColumn","config","isPrototypeOf","substring","keys","basket","rows","dataIndex","index","new_item","columns","rowDoubleClick","event","view","enabled","disablePreview","tableStyle","onRow","onDoubleClick","dataSource","OkText","source","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","fileListStyle","UploadDropzone","Component","files","req","file","attach","end","f","size","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","styles","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","dataTypeToItems","reduce","x","y","z","dataType","prev","Map","_config","scatters","dataTypeConfig","fill","shape","xConfig","dataKey","yConfig","zConfig","top","right","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","titleMap","isStream","renderRawData","MLSQLHTML","MLSQLHTMLPanel","refresh","sandbox","srcDoc","frameBorder","scrolling","ifr","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","cleanSQL","line","includes","executeAgainStatus","defaultRender","record","currentTH","target","parentNode","num","cellIndex","field","whiteSpace","wordWrap","renderConfig","t","cssStyle","runJob","JOB_LIST","processData","detailConsoleMessage","respDisplay","overflow","_display","marginBottom","Panel","Collapse","TabPane","Tabs","MLSQLDash","PureComponent","isNormalXY","xYRender","renderDash","queryResData","header","defaultActiveKey","onTabClick","tab","CodeBlock","originalEditor","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","spin","Engine","show_result","fail_result","code","DataTable","parseData","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","ExecuteUnit","codeBlock","displayGroup","notebook","nextExecuteUnit","codeBlockIsEmpty","getCodeStr","CODE_SPLITTER","NodeBook","createNewExecuteUnit","addRef","instance","executeUnitRefs","slice","isLastEmpty","executeUnits","saveNoteBook","LogMonitor","cancelQueryLog","queryLog","PythonACE","logMonitor","select","finalSQL","runMode","ex","PythonEditor","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabName","newTabIndex","add","getPaneIndexByActiveKey","lastIndex","pane","i","remove","editorRefList","closeEditor","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","getTempTableName","replace","getJobName","escapeQuote","quote","unQuote","startsWith","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","robotFetchParamWithCollect","getField","v","distinct","arrays","Set","tempF","fastCompareObject","deepCompareObject","arg1","arg2","compare2Objects","isNaN","RegExp","String","Number","prototype","leftChain","indexOf","rightChain","pop","ETPopLoad","datasourcesRender","getAttribute","sourceType","sourceTypeV","param","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","k","rv","whereStr","etpop","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","ignorePath","ignoreTableName","TextArea","ETPopAlgorithm","renderParam","temp","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETBaseTool","outputTableName","outputTableNameV","showTableName","showOutputTableName","pathNameForRender","showPathName","_makeMLSQL","asStr","_render","ETPopTool","ETPopDownload","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","showCode","ETExample","etName","ETRegister","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETDownloadFile","link","document","createElement","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","MLSQLETQuick","itemData","onDragStart","renderPop","etDoubleClick","padding","gutter","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","show","entries","TableOutlined","isLeaf","tip","spinning","FileSystemTree","getFileList","ls","_corrupt_record","root","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","loadData","CommonHandlers","CommonActions","node","consoleApp","SCRIPT_FILE_GET","scriptFile","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","scriptContent","getFieldValue","fileName","createFileError","saveParams","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","element","isExpanded","ExpandActionHandler","ExpandAction","SCRIPT_FILE_REMOVE","DeleteFileActionHandler","DeleteFileAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","expand","ScriptTreeHandlers","ScriptTreeActions","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","list","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","tmpStyle","zIndex","position","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","Form","useForm","SCRIPT_FILE_LIST","builder","treeRes","sort","b","treeData","getList","FolderAddOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","onExpand","autoExpandParent","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","fileSystemTreeRef","MLSQLQueryApp","script","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","sqlContent","createRef","paddingRight","borderRight","leftTreePaneRef","MixinBuilder","superclass","with","mixins","c","mixin","mix","NewSessionOp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","ADeltaLakeTree","tableClick","tablesInWorkshop","sessionId","LoadActionHandler","LoadAction","openTable","OpenActionHandler","OpenAction","ANALYSIS_TABLE_DELETE","DeleteActionHandler","DeleteAction","targetPath","exportTable","buildLoadSQL","runSql","ExportToActionHandler","ExportToAction","WorkshopTablesActionNames","LOAD","OPEN","DELETE","EXPORT_TO","WorkshopTablesHandlers","WorkshopTablesActions","WorkshopTablesReducer","confirm","exportTo","WorkshopTablesContext","WorkshopTables","externalReload","exportForm","FolderOpenOutlined","ContainerOutlined","CloudUploadOutlined","getFieldsValue","resetFields","flatMap","dbName","databaseName","namespace","tables","newdbs","partitionValues","partitionColumn","tableRandom","tableStart","tableEnd","partitionColumnName","inStr","__where__","con","loop","searchValue","beforeStr","substr","afterStr","search_dbs","showKeys","sub","SearchActionHandler","SearchAction","HiveTablesActionNames","SEARCH","HiveTablesHandlers","HiveTablesActions","HiveTablesReducer","HiveTablesContext","HiveTables","AnalysisWorkshop","setOpenTable","setError","setPartitionColumn","noPartition","setNoPartition","partition","usePartitionSelect","PartitionSelect","partitionForm","setOpenTableForPartition","setPartitionError","partitionNumValue","lowerBound","upperBound","DS_MYSQL_CONNECT","connectRes","tempTable","whereBlock","connect","__sql__","__tableName__","OpenMySQLTableActionHandler","OpenMySQLTableAction","MysqlTreeActionNames","MysqlTreeHandlers","MysqlTreeActions","MysqlTreeReducer","useIntegerStep","initialValue","min","max","MysqlTreeContext","MysqlTree","setColumn","partitionNumUI","__connect__","DS_MYSQL_COLUMN_INFO","columnName","setFieldsValue","data_type","col_name","useMySQLPartition","PartitionUI","DS_MYSQL_DBS","LeftView","reloaWorkshop","WorkshopOp","tableInfo","_whereBlock","tempTableName","sqls","loadingTable","toggleMessage","schema","setCurrentTable","updateDisplay","WorkshopAutoSql","getLastApplyTable","rollback","APPLY_GET","apply","_data","_schema","runSQLAtCurrentTable","analysis_workshop_table_name","analysis_workshop_sql","save","persist","finalSql","persistJobName","extraParams","persistSQL","ANALYSIS_SAVE","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","onApply","disabled","onRollback","StationCommonOp","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","SelectJoinField","currentTableSchema","joinStation","joinInfo","joinTable","currentTableFields","fields","joinTableFields","tableSchema","next","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","componentDidUpdate","prevProps","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","danger","SelectJoinTable","Step","Steps","StepContent","JoinStation","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","currentStep","preview","steps","ColumnOperate","pagination","pageSize","AggStationOp","enableGroupByField","fieldName","groupByFields","generateProjectField","newName","aggFields","newFields","concat","FuncDesc","func","funcValue","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","agg","Math","random","funcPopUp","collect","d","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","dataref","columnsRef","handleFunc","applyFuncToFieldRef","RenameFields","formRef","FunctionField","ProjectStationSQLOp","onSelectApply","selectFieldsRef","showInfo","onFuncApply","functionFieldRef","isAggExists","onRenameApply","renameFieldsRef","currentFields","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsActions","CastFieldsReducer","RollbackActionHandler","RollbackAction","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","OrderStationActions","OrderStationReducer","CastFieldsContext","CastFields","submit","marginTop","onDeselect","ProjectStation","ExpressionConst","EQUAL","NON_EQUAL","IN","CONTAINS","STARTS_WITH","ENDS_WITH","LIKE","IS_NULL","IS_NOT_NULL","IS_EMPTY","IS_NOT_EMPTY","FilterCondition","compare","setCompare","inCandidate","setInCandidate","inCandidateLoading","setInCandidateLoading","forms","outputSize","layout","Compare","command","buildSelectedRows","fieldToDataType","selectedRowKeys","addGroup","groupName","groupType","selectedRows","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","GroupGroup","ApplyGroup","FilterStation","filterStr","buildCondition","onFilterApply","buildFilter","group","currentConditions","items","conTemp","cond","IS_NOT_EMPT","buildExpression","OrderStationContext","OrderStation","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationActions","WindowStationReducer","useSelectFields","enableApply","fieldWrapper","selectFields","selectFieldsLabel","selectFieldsMode","operateFields","setOperateFields","commands","onClose","BuildGroup","WindowStationContext","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","funcs","setFuncs","setCurrentFunc","fetchFuncs","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","renderItem","Text","WindowStation","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","PLUGIN_LIST","dashPlugins","fetchPlugin","PLUGIN_GET","pluginName","analyzedScriptContent","image","dataValues","dashValues","xColumn","yColumn","OperateStation","borderBottom","tabPosition","WorkshopMessageOp","showMessage","consoleMessage","showInfoMessage","infoMessage","WorkshopUIOp","stationRef","SearchOp","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","searchInput","onPressEnter","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","DropdownMenuUI","dropdownStat","dropdown","menu","BarChartOutlined","overlay","RealTimeViewTable","getDefaultRender","getDefaultSearch","getDefaultTitleRender","isDash","newColumns","OperateStationWrapper","handle","useFullScreenHandle","FullscreenOutlined","stopPropagation","RealTimeTableWrapper","operateStationView","subTitle","enableRegister","enableLogin","APP_SAVE","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","APP_INFO","getAppInfo","showIcon","defaultChecked","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","externalRemove","setSchema","setResult","editorMode","setEditorMode","useDynamicList","getKey","move","resetList","sortForm","submitNow","REG","fieldValue","matchFF","exec","onDragEnd","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","ENGINE_ADD","ChangePassword","setApplySuccess","newPassword","_newPassword","USER_CHANGE_PASSWORD","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","MailOutlined","useUserConfig","success","setSuccess","formItems","getParams","DefaultBackend","USER_EXTRA","updateUser","ApplyTimeout","timeoutUi","timoutValue","apply_timeout","Teams","TEMA_LIST","MySQL","host","port","DS_ADD","jType","ListMySQL","DS_REMOVE","DS_LIST","Settings","setCurrentPage","AppConsole","textAlign","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","AppSetupHeader","AppSetupBody","AppSetup","zh_CN","analysis_workshop","settings","admin","more","set_default_backend","set_default_backend_error","set_engine","curent_value","choose","done","congratulation","set_timeout","set_apply_timeout","table_workshop","delta_lake","file_system","project","limit","order","select_columns","rename_columns","transform_columns","cast_columns_type","hive","operate_panel","data_panel","user_settings","change_password","team","team_manager","datasource","analysis_range","table_start","table_end","table_random","or","no_partition_msg","ds_mysql","alias","connect_mysql","list_mysql","mysql","numPartitions","mysql_parallel","no_mysql_parallel","en_US","App","configured","locale","messages","AntZhCN","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","GlobalParamNames","USER_NAME","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","Backend","fetch_config","BACKEND_URL","basic_config","final_config","GET","POST","eventCallBack","dispatch","getState","signal","PUT"],"mappings":"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","file":"static/js/main.5eb6b32d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption)\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../admin/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal'\nimport { FormattedMessage  } from 'react-intl'; \nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin,appInfo } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n\n    const [enableConsole,setEnableConsole] = useState(false)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);    \n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => {\n                if (logined && current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                    <span style={{ fontSize: 11 }}>(Build 20200804.163611)</span>\n                </Menu.Item>\n                <Divider type=\"vertical\"></Divider>\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    <FormattedMessage id=\"login\"/>\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                     <FormattedMessage id=\"register\"/>                    \n                </Menu.Item>}\n\n                {logined && appInfo.enableConsole && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    <FormattedMessage id=\"console\"/>\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                   <FormattedMessage id=\"analysis_workshop\"/>                    \n                </Menu.Item>}\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"settings\"/>                    \n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"admin\"/>\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title={<FormattedMessage id=\"more\"/>}>\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message={props.title || \"Message\"} description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { SetStateAction } from '../admin/actions/SetStateAction';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path){ \n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\":\"robot\"})\n        return res        \n    }\n\n    static async killJob(jobName){  \n        const res = await client.runScript(\"!kill \" + jobName+\";\", uuidv4(), {\"queryType\":\"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName:jobName})                        \n        return res\n    }\n\n    static async runJob(sql,block=false){        \n        const res = await client.runScript(sql, uuidv4(),{ \"async\": block}) \n        return res\n    }\n\n    static async showFunctions(){        \n        const res = await client.runScript(\"\",uuidv4(),{executeMode:\"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`,jobName ,{\"queryType\":\"robot\"}) \n        return {jobName,res} \n    }\n\n    static async tablesInDeltaLake(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`,jobName ,{\"queryType\":\"robot\"}) \n        return res\n    }\n\n    static async tablesInWorkshop(){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLES ,{}) \n        return res\n    }\n\n    static async tableInfo(tableName){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO ,{tableName}) \n        return res\n    }\n\n    static async jobProgress(jobName){\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})\n        const empty_res =  {currentJobIndex:0,totalJobs:1}\n        if(res.status===200){\n            const jsonObj = res.content[0]\n            if(!jsonObj){\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if(totalJobs===1){\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})                                \n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex               \n            }\n            return {currentJobIndex,totalJobs}\n        }\n        return empty_res\n    }\n\n    static async resourceInfo(){\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`,uuidv4(),{\"queryType\":\"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks,totalCores}\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()\n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,                \n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Progress, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={loading:false,progress:0}        \n    }\n\n    enter = (params) => {\n        this.setState({loading:true})  \n        this.intervalTimer = setInterval(async () => {                        \n            const jobName = this.queryPanel.executor.jobName\n            const {currentJobIndex,totalJobs} =  await EngineService.jobProgress(jobName)            \n            this.setState({progress:(currentJobIndex/totalJobs)*100})\n        },1000)\n    }\n\n    exit = () => {        \n        if(this.intervalTimer){            \n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null \n            this.finalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n            this.setState({loading:false})          \n        }\n    }\n\n    render() {\n        if(!this.state.loading) {\n            if(this.finalTime){\n                return <Button type=\"primary\" style={{margin:\"0px 0px 20px 0px\"}}>\n                   Time Cost: {this.finalTime}\n                </Button>\n            }else {\n                return <div></div>\n            }\n        }\n        return <div>                    \n            <Button type=\"primary\" style={{marginRight:\"20px\"}}>\n            Time Cost:<Timer ref={(et)=> this.timer =et}>        \n                <Timer.Minutes formatValue={value => `${value} m. `} /> \n                <Timer.Seconds formatValue={value => `${value} s. `}/>         \n            </Timer></Button>\n            <Progress type=\"circle\" percent={this.state.progress} />\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map(item=>{\n                return <Select.Option value={item.name}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        this.taskProgressRef.current.enter({jobName: jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        this.taskProgressRef.current.exit()        \n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.engineName = engine\n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    cleanSQL = (sql)=> {\n       try{\n        return sql.split(\"\\n\").filter(line=> !line.includes(\"password\")).join(\"\\n\")\n       }catch(e){\n        return sql\n       }\n       \n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.cleanSQL(this.state.detailConsoleMessage)||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","import React from 'react'\nimport AceEditor from \"react-ace\";\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n\n            />\n        )\n    }\n}","import React from 'react'\nimport { Icon } from '@ant-design/compatible';\n\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false, executeUnit: props.executeUnit}\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.state.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.isExecute ? <span onClick={this.cancelExecute}><Icon type=\"sync\" spin/></span> :\n                    <span onClick={this.evtExecute}><Icon type=\"caret-right\"/></span>\n            }\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            return <DataTable data={this.state.displayData} ref={(et) => this.displayTableRef = et}></DataTable>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\n\n\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n\n    render() {\n        return <div>\n            <CodeBlock initialCode={this.props.initialCode} ref={et => {\n                this.codeBlock = et\n            }} executeUnit={this}/>\n            <CommandGroup ref={et => {\n                this.commandGroup = et\n            }} executeUnit={this}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NodeBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {executeUnits: this.executeUnits}\n        this.engine = new Engine(5 * 60 * 1000)\n    }\n\n    createNewExecuteUnit = (initialCode) => {\n        return <ExecuteUnit parent={this} initialCode={initialCode} ref={et => this.addRef(et)}/>\n    }\n\n    addRef = (instance) => {\n        if (instance) {\n            this.executeUnitRefs.push(instance)\n        }\n    }\n\n    nextExecuteUnit = () => {\n        const isLastEmpty = () => {\n            return this.executeUnitRefs.slice(-1)[0].codeBlockIsEmpty()\n        }\n        if (!isLastEmpty()) {\n            this.executeUnits.push(this.createNewExecuteUnit())\n            this.setState({executeUnits: this.executeUnits})\n        }\n        this.saveNoteBook()\n    }\n\n    saveNoteBook = () => {\n        const value = this.executeUnitRefs.map((instance) => {\n            return instance.getCodeStr()\n        }).join(CODE_SPLITTER)\n\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    text = (value, scriptId) => {\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value && value !== \"undefined\") {\n            this.executeUnitRefs = []\n            this.executeUnits = this.initialCode.split(CODE_SPLITTER).map((initialCode) => {\n                return this.createNewExecuteUnit(initialCode)\n            })\n            this.setState({executeUnits: this.executeUnits})\n        }\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.executeUnits\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NodeBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabName, callback) => {    \n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NodeBook parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static quote = (str)=>{\n        if(!str) return str\n        return `\"${Tools.escapeQuote(str)}\"`\n    }\n\n    static unQuote = (str) => {\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true\n        }\n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }\n\n    static distinct = (arrays, field) => {\n        if(!field){\n         return [...new Set(arrays)]\n        }\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"../../app_console/admin/actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()    \n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    convert = (item) => {                \n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id || node.key\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };               \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, { useRef, useCallback, useEffect } from 'react';\nimport { Tree, Modal, Menu, Form, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DownOutlined, FileOutlined, FolderOutlined, DeleteOutlined, FileAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames } from './actions/ScriptTreeReducer';\nimport { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport { useContextMenuCallback, useContextMenu } from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\n\nconst { DirectoryTree } = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const { consoleApp } = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const { loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return a.id - b.id\n            })\n\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const { id } = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu >\n                <Menu.Item icon={<FolderAddOutlined />} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu >\n                <Menu.Item onClick={() => {                    \n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu >\n            <Menu.Item icon={<FileAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined />} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n\n    return (\n        <ScriptTreeContext.Provider value={{ dispacher }}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: { operateModal: false }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n                <DirectoryTree\n                    onExpand={(expandedKeys) => {                        \n                        dispacher({\n                            type: ScriptTreeActionNames.expand,\n                            data: { expandedKeys }\n                        })\n                    }}\n                    autoExpandParent={true}\n                    expandedKeys={\n                        expandedKeys\n                    }\n                    onDoubleClick={(evt, node) => {\n                        dispacher({\n                            type: ScriptTreeActionNames.openScriptFile,\n                            data: { consoleApp, node }\n                        })\n                    }}\n                    expandAction=\"click\"\n                    onRightClick={popContextMenu}\n                    switcherIcon={<DownOutlined />}\n                    treeData={nodes}></DirectoryTree>}\n                    \n        </ScriptTreeContext.Provider>\n    )\n}\nexport { ScriptTree, ScriptTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport MLSQLAceEditor from './MLSQLAceEditor'\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport ExecuteUnit from \"./notebook/ExecuteUnit\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\n\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {sqlContent: \"\", displayEditor: \"normal\"}\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n\n        } else {\n            this.editorGroup.current.addFull(script.name, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          //AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport EngineService from \"../../../service/EngineService\"\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n        const dbs = {}\n        res.content.forEach(item => {\n            if (!dbs[item.sessionId]) {\n                dbs[item.sessionId] = [item.tableName]\n            } else {\n                dbs[item.sessionId].push(item.tableName)\n            }\n        })\n        return {\n            data: {\n                dbs,...action.data\n            }\n        }\n    }\n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:OpenActionHandler,action:OpenAction} = ActionMaker.buildHandler(async (action)=>{\n    const {openTable,workshop} = action.data    \n    workshop.newSession(\"temp\",\"\",openTable)                     \n    return {        \n        data: {}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:DeleteActionHandler,action:DeleteAction} = ActionMaker.buildHandler(async (action)=>{\n    const {id} = action.data\n    const proxy = new ActionProxy()\n    await proxy.get(RemoteAction.ANALYSIS_TABLE_DELETE,{tableName:id})\n    return {        \n        data: {\n            reloading: Tools.getJobName()           \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: ExportToActionHandler, action: ExportToAction } = ActionMaker.buildHandler(async (action) => {\n    const { targetPath, workshop } = action.data\n    const { exportTable } = action.__state\n    const { name: openTable, type } = exportTable\n\n    const { sql, tableName } = await workshop.buildLoadSQL(\"temp\", \"\", openTable)\n\n    const runSql = (name) => {\n        proxy.runScript(`\n             ${sql}\n             save ignore ${tableName} as ${name}.\\`${targetPath}\\`;\n            `, Tools.getJobName(), { async: true })\n    }\n    const proxy = new ActionProxy()\n    switch (type) {\n        case \"hive\":\n            runSql(\"hive\")\n            break\n        case \"file\":\n            runSql(\"parquet\")\n            break\n        case \"delta\":\n            runSql(\"delta\")\n            break\n\n    }\n\n    return {\n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler, LoadAction } from './LoadAction'\nimport { OpenActionHandler, OpenAction } from './OpenAction'\nimport { DeleteActionHandler, DeleteAction } from './DeleteAction'\nimport { ExportToActionHandler, ExportToAction } from './ExportToAction'\nclass WorkshopTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static DELETE = \"delete\"\n    static EXPORT_TO = \"exportTo\"\n}\nconst WorkshopTablesHandlers = {\n    ...CommonHandlers,\n    [WorkshopTablesActionNames.LOAD]:LoadActionHandler,\n    [WorkshopTablesActionNames.OPEN]:OpenActionHandler,\n    [WorkshopTablesActionNames.DELETE]:DeleteActionHandler,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToActionHandler,\n\n}\nconst WorkshopTablesActions = {\n    ...CommonActions,\n    [WorkshopTablesActionNames.LOAD]:LoadAction,\n    [WorkshopTablesActionNames.OPEN]:OpenAction,\n    [WorkshopTablesActionNames.DELETE]:DeleteAction,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToAction,\n}\n\nfunction WorkshopTablesReducer(state, action) {\nreturn WorkshopTablesActions[action.type](state, action.data)    \n}\nexport { WorkshopTablesActionNames, WorkshopTablesReducer, WorkshopTablesHandlers }","import React, { useState, useRef, useEffect } from 'react';\nimport { Tree, Spin, Menu, Form, Modal, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WorkshopTablesReducer, WorkshopTablesHandlers, WorkshopTablesActionNames } from './actions/WorkshopTablesReducer';\nimport { TableOutlined, DeleteOutlined, CloudUploadOutlined, FolderOpenOutlined, ContainerOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nconst { TreeNode, DirectoryTree } = Tree;\nconst { SubMenu } = Menu;\n\nconst initState = {\n    dbs: {},\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n\n    exportTo: false,\n    exportTable: {\n        name: undefined,\n        type: undefined\n    }\n\n}\n\nconst WorkshopTablesContext = React.createContext()\n\nfunction WorkshopTables(props) {\n    const { workshop, reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(WorkshopTablesReducer, initState, WorkshopTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        exportTo, exportTable\n    } = state\n    const contextMenuRef = useRef()\n\n    const [exportForm] = Form.useForm()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.OPEN,\n                    data: {\n                        openTable: id,\n                        workshop\n                    }\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: false\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n\n            <SubMenu icon={<ContainerOutlined />} title=\"Export\">\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"hive\"\n                            },\n                            exportTo: true,\n                            workshop\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.1}>to Hive</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"delta\"\n                            },\n                            exportTo: true,\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.2}>to Delta</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"file\"\n                            },\n                            exportTo: true,\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.3}>to FileSystem</Menu.Item>\n            </SubMenu>\n\n            <Menu.Item onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.DELETE,\n                    data: {\n                        id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2} icon={<DeleteOutlined />}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: WorkshopTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n    return (\n        <WorkshopTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={`Export to ${exportTable.type}`}\n                visible={exportTo}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTo: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    const { targetPath } = exportForm.getFieldsValue()\n                    exportForm.resetFields()\n                    dispacher({\n                        type: WorkshopTablesActionNames.EXPORT_TO,\n                        data: { exportTo: false, targetPath, workshop }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <Form form={exportForm}>\n                    <Form.Item rules={[\n                        {\n                            required: true,\n                            message: 'Target is required.',\n                        },\n                    ]}\n                        label=\"Target\"\n                        name=\"targetPath\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Modal\n                title={`Open Table`}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: \"dispatch\",\n                        data: { openTable }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                {`Open ${openTable}?`}\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <DirectoryTree onDoubleClick={(evt, node) => {\n                    dispacher({\n                        type: WorkshopTablesActionNames.OPEN,\n                        data: {\n                            openTable: node.id,\n                            workshop\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }} onRightClick={popContextMenu}>\n                    {\n                        Object.entries(dbs).flatMap(([key, value]) => {\n                            return value.map(item => {\n                                return <TreeNode icon={<TableOutlined />} id={item} table={item} db={key} title={item} key={item} isLeaf />\n                            })\n                        })\n                    }\n                </DirectoryTree>\n            </Spin>\n        </WorkshopTablesContext.Provider>\n    )\n}\nexport { WorkshopTables, WorkshopTablesContext }","import * as React from \"react\";\nimport ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\nimport { TableOutlined } from '@ant-design/icons'\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const {dbName,node} = action.data\n    const proxy = new ActionProxy()\n    if(!dbName){        \n        let res = await proxy.runScript(`!profiler sql \"show databases\";`,Tools.getJobName(),Tools.robotFetchParam())                      \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"databaseName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"databaseName\":\"adl\"}]}}\n        if (res.status === 200) {        \n            const dbs  = res.content.data.map(item=>{                \n                item[\"key\"] = item.databaseName || item.namespace\n                item[\"title\"] = item.key\n                item[\"isLeaf\"] = false\n                item[\"children\"] = []\n                return item\n            })\n            return {\n                data: {\n                    dbs,...action.data\n                }\n            }\n        }\n    }\n\n    if(dbName){\n        await proxy.runScript(`!profiler sql \"use ${dbName}\";`,Tools.getJobName(),Tools.robotFetchParam())    \n        let res = await proxy.runScript(`!profiler sql \"show tables\";`,Tools.getJobName(),Tools.robotFetchParam())                             \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"database\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"tableName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"isTemporary\",\"type\":\"boolean\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"database\":\"adl\",\"tableName\":\"after_sale_df\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_awake_di\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_daily_active_user_com_di\",\"isTemporary\":false}]}}\n        if (res.status === 200) {        \n            const tables  = res.content.data.filter(item=>{\n                const db = item.database || item.namespace\n                return db === dbName\n            }).map(item=>{\n                item[\"key\"] = `${dbName}.${item.tableName}`\n                item[\"title\"] = item.tableName\n                item[\"isLeaf\"] = true\n                item[\"icon\"]=<TableOutlined />\n                return item\n            }) \n            const {dbs} = action.__state\n            const newdbs = dbs.map(db => {\n                if(db.key===dbName){\n                    db.children = tables\n                }\n                return db\n            });            \n            return {\n                data: {...action.data,dbs:newdbs}\n            }\n        }\n    }\n    \n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: OpenActionHandler, action: OpenAction } = ActionMaker.buildHandler(async (action) => {\n    const { openTable, workshop, partitionValues,partitionColumn} = action.data\n    const [db, table] = openTable.split(\".\")\n\n    const { tableRandom, tableStart, tableEnd } = partitionValues\n    const partitionColumnName = partitionColumn && Tools.getField(partitionColumn)\n    if (partitionColumn && tableRandom) {\n        const inStr = partitionColumnName +\" in (\" + tableRandom.map(item=>`\"${Tools.escapeQuote(item)}\"`).join(\",\") + \")\"\n        workshop.newSession(\"hive\", db, table,{__where__: inStr})\n    }\n    else if (partitionColumn && tableStart && tableEnd) {\n        const con = `${partitionColumnName} >= ${Tools.quote(tableStart)} and ${Tools.quote(tableEnd)} >= ${partitionColumnName}  `\n        workshop.newSession(\"hive\", db, table,{__where__: con})\n    }else {\n        workshop.newSession(\"hive\", db, table) \n    }\n    return {\n        data: {}\n    }\n})","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport Tools from '../../../../common/Tools';\n\nconst loop = (data, searchValue) =>\n    data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n            index > -1 ? (\n                <span>\n                    {beforeStr}\n                    <span className=\"site-tree-search-value\">{searchValue}</span>\n                    {afterStr}\n                </span>\n            ) : (\n                    <span>{item.title}</span>\n                );\n\n        if (item.children) {\n            return { ...item, title, children: loop(item.children, searchValue) }\n        }\n\n        return { ...item, title }\n    });\n\nexport const { handler: SearchActionHandler, action: SearchAction } = ActionMaker.buildHandler(async (action) => {\n    const { dbs } = action.__state\n    const { searchValue } = action.data\n    if (!searchValue) {\n        return {\n            data: {\n                expandedKeys: [], search_dbs: dbs\n            }\n        }\n    }\n\n    let showKeys = []\n    let expandedKeys = dbs\n        .flatMap(item => {            \n            const wow = item.children?.map(sub => {\n                if (sub.title.indexOf(searchValue) > -1) {\n                    return item.key\n                }\n                return null\n            }).filter(item => item) || []\n\n            if(item.title.indexOf(searchValue) > -1){                  \n                showKeys.push(item.key)\n            }\n            return wow\n        })\n   \n    expandedKeys = Tools.distinct(expandedKeys)    \n    const search_dbs = loop(dbs, searchValue).filter(item => {\n        return expandedKeys.includes(item.key) || showKeys.includes(item.key)\n    })\n    return {\n        data: {\n            expandedKeys, search_dbs\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler,LoadAction } from './LoadAction'\nimport { OpenAction, OpenActionHandler } from './OpenAction'\nimport { SearchAction, SearchActionHandler } from './SearchAction'\nclass HiveTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static SEARCH = \"search\"\n}\nconst HiveTablesHandlers = {\n    ...CommonHandlers,\n    [HiveTablesActionNames.LOAD]:LoadActionHandler,\n    [HiveTablesActionNames.OPEN]: OpenActionHandler,\n    [HiveTablesActionNames.SEARCH]: SearchActionHandler\n}\nconst HiveTablesActions = {\n    ...CommonActions,\n    [HiveTablesActionNames.LOAD]:LoadAction,\n    [HiveTablesActionNames.OPEN]: OpenAction,\n    [HiveTablesActionNames.SEARCH]: SearchAction\n}\n\nfunction HiveTablesReducer(state, action) {\nreturn HiveTablesActions[action.type](state, action.data)    \n}\nexport { HiveTablesActionNames, HiveTablesReducer, HiveTablesHandlers }","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Tree, Spin, Menu, Input, Modal } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { HiveTablesReducer, HiveTablesHandlers, HiveTablesActionNames } from './actions/HiveTablesReducer';\nimport { TableOutlined, DeleteOutlined, FolderOpenOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nimport AnalysisWorkshop from '../workshop';\nimport { FormattedMessage } from 'react-intl';\nimport { usePartitionSelect } from './pages/usePartitionSelect';\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst initState = {\n    dbs: [],\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n    expandedKeys: []\n}\n\nconst HiveTablesContext = React.createContext()\n\nfunction HiveTables(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const { reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(HiveTablesReducer, initState, HiveTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        search_dbs, expandedKeys\n    } = state\n\n    const { ui: PartitionSelect,\n        form: partitionForm,\n        setOpenTable: setOpenTableForPartition,\n        setError: setPartitionError,\n        partitionColumn,noPartition\n    } = usePartitionSelect()\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n        console.log(id)\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: HiveTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n\n    useEffect(() => {\n        setOpenTableForPartition(openTable)\n    }, [setOpenTableForPartition, openTable])\n\n    return (\n        <HiveTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={<FormattedMessage id=\"analysis_range\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    if (!noPartition && !partitionValues.tableRandom && !(partitionValues.tableStart && partitionValues.tableEnd)) {\n                        setPartitionError(\"Partitions is required.\")\n                        return\n                    }\n                    dispacher({\n                        type: HiveTablesActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionColumn\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionSelect />\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <Input style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={\n                    (e) => {\n                        dispacher({\n                            type: HiveTablesActionNames.SEARCH,\n                            data: { searchValue: e.target.value }\n                        })\n                    }\n                } />\n                <DirectoryTree\n                    expandedKeys={expandedKeys}\n                    treeData={search_dbs || dbs}\n                    loadData={\n                        async (node) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { loading: true }\n                            })\n                            dispacher({\n                                type: HiveTablesActionNames.LOAD,\n                                data: { dbName: node.key, node, loading: false }\n                            })\n                        }\n                    } expandAction=\"click\" onExpand={(expandedKeys) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { expandedKeys }\n                        })\n                    }} onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>\n        </HiveTablesContext.Provider>\n    )\n}\nexport { HiveTables, HiveTablesContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport Tools from '../../../../common/Tools';\n\nfunction usePartitionSelect() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [partitionColumn, setPartitionColumn] = useState(undefined)\n    const [noPartition, setNoPartition] = useState(false)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    useEffect(() => {\n        const fetch = async () => {\n            if (!openTable) return\n            const [db, table] = openTable.split(\".\")\n            setLoading(true)\n            \n            const res = await proxy.runScript(`!profiler sql 'show partitions ${db}.${table}';`,\n              Tools.getJobName(),Tools.robotFetchParam()\n            )\n            if (res.status === 200) {\n                const data = res.content.data.map(item => {\n                    //dt=2020-08-03/hour=12                    \n                    const [column, value] = item.partition.split(\"/\")[0].split(\"=\")\n                    if (!partitionColumn) {\n                        setPartitionColumn(column)\n                    }\n                    return { column, value }\n                })\n                setData(data)\n                setNoPartition(false)\n                if (data.length === 0) {\n                    setNoPartition(true)\n                }\n                // if (false) {\n                //     setData([{ column: \"hp_stat_date\", value: \"2017-01-02\" }])\n                //     setPartitionColumn(\"hp_stat_date\")\n                //     setNoPartition(false)\n                // }\n\n            }else {\n                setData([])\n                setNoPartition(true)                \n            }\n            setLoading(false)\n        }\n        fetch()\n    }, [openTable])\n\n    const options = data.map(item => {\n        return <Select.Option value={item.value}>{item.value}</Select.Option>\n    })\n    const ui = () => {\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                {\n                    noPartition && <FormattedMessage id=\"no_partition_msg\" />\n                }\n                {\n                    !noPartition && <Form form={form}>\n                        <Form.Item name=\"tableStart\" label={<FormattedMessage id=\"table_start\" />}>\n                            <Select>\n                                {options}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"tableEnd\" label={<FormattedMessage id=\"table_end\" />}>\n                            <Select>\n                                {options}\n                            </Select>\n                        </Form.Item>\n\n                        <Divider />\n                        <Form.Item name=\"tableRandom\" label={<FormattedMessage id=\"table_random\" />}>\n                            <Select mode=\"tags\">\n                                {options}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                }\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError, partitionColumn, noPartition }\n}\nexport { usePartitionSelect }","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:OpenMySQLTableActionHandler,action:OpenMySQLTableAction} = ActionMaker.buildHandler(async (action)=>{\n    const {partitionValues,openTable,partitionNumValue,workshop} = action.data\n    const [db,table] = openTable.split(\".\")\n    const {partitionColumn,lowerBound,upperBound} = partitionValues\n    const proxy = new ActionProxy()\n    \n    const connectRes = await proxy.get(RemoteAction.DS_MYSQL_CONNECT,{name:db}) \n    const tempTable = Tools.getTempTableName()\n    let whereBlock = \"\"\n    if(partitionColumn){         \n        whereBlock = `where partitionColumn=\"${partitionColumn}\" \n        and lowerBound=\"${lowerBound}\" \n        and upperBound=\"${upperBound}\"\n        and numPartitions=\"${partitionNumValue}\"\n        `\n    }\n\n    const sql = `\n      ${connectRes.content.connect}\n      load jdbc.\\`${openTable}\\` ${whereBlock} as ${tempTable};    \n    `\n    workshop.newSession(\"jdbc\", db, table,{__sql__: sql,__tableName__:tempTable})               \n\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { OpenMySQLTableActionHandler, OpenMySQLTableAction } from './OpenMySQLTableAction'\nclass MysqlTreeActionNames {\n    static OPEN = \"open\"\n}\nconst MysqlTreeHandlers = {\n    ...CommonHandlers,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableActionHandler\n}\nconst MysqlTreeActions = {\n    ...CommonActions,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableAction\n}\n\nfunction MysqlTreeReducer(state, action) {\nreturn MysqlTreeActions[action.type](state, action.data)    \n}\nexport { MysqlTreeActionNames, MysqlTreeReducer, MysqlTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\n\n\nfunction useIntegerStep(props) {\n    const [value,setValue] = useState(props.initialValue || 10)\n    const ui =  ()=>(\n        <Row>\n        <Col span={12}>\n          <Slider\n            min={props.min||10}\n            max={props.max||300}\n            onChange={(value)=>{setValue(value)}}\n            value={value}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={props.min||10}\n            max={props.max||300}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(value)=>{setValue(value)}}\n          />\n        </Col>\n      </Row> \n    )\n    return {ui,value}\n}\nexport {useIntegerStep}","import React, {  useRef, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { MysqlTreeReducer, MysqlTreeHandlers, MysqlTreeActionNames } from '../actions/MysqlTreeReducer';\nimport { useContextMenu } from '../../../script_console/pages/ContextMenu';\nimport { Menu,Spin,Tree,Modal } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport { FolderOpenOutlined, TableOutlined } from '@ant-design/icons';\nimport { useMySQLPartition } from './useMySQLPartition';\nimport AnalysisWorkshop from '../../workshop';\nimport { FormattedMessage } from 'react-intl';\n\nconst {DirectoryTree} = Tree\nconst initState = {\n    dbs: [],    \n    loading:false,\n    confirm:false,\n    openTable: undefined,\n    error: undefined     \n}\n\nconst MysqlTreeContext = React.createContext()\n\nfunction MysqlTree() {\n    const workshop = AnalysisWorkshop.workshop\n    const [state, dispacher] = useReducerAsync(MysqlTreeReducer, initState, MysqlTreeHandlers)\n    const {dbs,loading,confirm,openTable,error} = state\n\n    const {ui:PartitionUI,form:partitionForm,setOpenTable,setError:setPartitionError,partitionNumValue} = useMySQLPartition()\n\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem        \n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        const fetch = async () => {\n            dispacher({\n                type: \"setState\",\n                data: { loading: true }\n            })\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n            if (res.status === 200) {\n                const treeData = res.content.data.map(item=>{\n                    item.key = item.name\n                    item.title = item.name\n                    item.isLeaf = false\n                    item.children = item.tables.map(table=>{\n                        return {\n                            id: `${item.name}.${table}`,\n                            key: `${item.name}.${table}`,\n                            title: table,\n                            isLeaf: true,\n                            icon: <TableOutlined/>\n                        }\n                    })\n                    return item\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: { dbs: treeData}\n                })                \n            }\n\n            dispacher({ \n                type: \"setState\",               \n                data: { loading:false}\n            }) \n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{\n        setOpenTable(openTable)\n    },[openTable,setOpenTable])\n   \n\n    return (\n        <div className=\"leftview-box\">\n        <MysqlTreeContext.Provider value={{ dispacher }}> \n        <Modal\n                title={<FormattedMessage id=\"mysql_parallel\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    const {partitionColumn,lowerBound,upperBound} = partitionValues\n                    if(partitionColumn){\n                        if(!lowerBound || !upperBound && partitionNumValue){\n                            setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                            return\n                        }\n                    }\n                    \n                    dispacher({\n                        type: MysqlTreeActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionNumValue                            \n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionUI />\n            </Modal>           \n           <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}                \n                <DirectoryTree                    \n                    treeData={dbs}\n                    expandAction=\"click\" \n                    onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }                        \n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>  \n        </MysqlTreeContext.Provider>\n        </div>\n    )\n}\nexport { MysqlTree, MysqlTreeContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert, Input } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport { useIntegerStep } from '../../common/pages/useIntegerStep';\nimport Tools from '../../../../common/Tools';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\nfunction useMySQLPartition() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [column, setColumn] = useState(undefined)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    const { ui: partitionNumUI, value: partitionNumValue } = useIntegerStep({\n        initialValue: 10,\n        min: 2,\n        max: 100\n    })\n\n    useEffect(() => {\n        if (openTable) {\n            const [db, table] = openTable.split(\".\")\n            const tempTable = Tools.getTempTableName()\n            const fetch = async () => {                 \n                const res = await proxy.runScript(`                \n                load jdbc.\\`${openTable}\\` as ${tempTable};\n                !desc ${tempTable};\n               `, Tools.getJobName(), {...Tools.robotFetchParam(),__connect__:db})\n               if(res.status===200){\n                  setData(res.content.data)\n               }else {\n                   setData([])\n               }\n            }\n            fetch()\n        }\n    }, [openTable])\n\n   useEffect(()=>{\n       if(column){\n         const fetch = async ()=>{\n             const [db, table] = openTable.split(\".\")\n\n             const res = await proxy.get(RemoteAction.DS_MYSQL_COLUMN_INFO,{\n                dbName:db,tableName:table, columnName:column\n             }) \n             if(res.status === 200){                 \n                 form.setFieldsValue({\n                    lowerBound: res.content.min,\n                    upperBound: res.content.max\n                 })\n             } \n         }\n         fetch()\n       }\n   },[column,openTable])\n\n    //\n    const options = data.filter(item=>item.data_type !== \"string\").map(item => {\n        return <Select.Option value={item.col_name}>{item.col_name}</Select.Option>\n    })\n    const ui = () => {\n        if(options.length === 0){\n            return <><FormattedMessage id=\"no_mysql_parallel\"/></>\n        }\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                <Form form={form}>\n                    <Form.Item name=\"partitionColumn\" label={<FormattedMessage id=\"partitionColumn\" />}>\n                        <Select onChange = {(value)=>{                            \n                            setColumn(value) \n                        }}>\n                            {options}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lowerBound\" label={<FormattedMessage id=\"lowerBound\" />}>\n                        <Input />\n                    </Form.Item>\n\n                    <Divider />\n                    <Form.Item name=\"upperBound\" label={<FormattedMessage id=\"upperBound\" />}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"numPartitions\" label={<FormattedMessage id=\"numPartitions\" />}>\n                        {partitionNumUI()}\n                    </Form.Item>\n                </Form>\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError,partitionNumValue }\n}\nexport { useMySQLPartition }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport \"./leftview.scss\"\nimport { FormattedMessage } from 'react-intl'\nimport { WorkshopTables } from \"./workshop_tables/WorkshopTables\";\nimport { HiveTables } from \"./hive/HiveTables\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../backend_service/RemoteAction\";\nimport { MysqlTree } from \"./datasource/pages/MysqlTree\";\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = {\n            reloaWorkshop: undefined\n        }\n    }\n\n    render() {\n        return <Tabs defaultActiveKey=\"1\" onTabClick={(key) => {\n            if (key === \"3\") {\n                if (this.deltaLakeTreeRef) {\n                    this.deltaLakeTreeRef.reload()\n                }\n            }\n            if (key === \"4\") {\n                if (this.fileSystemTreeRef) {\n                    this.fileSystemTreeRef.reload()\n                }\n            }\n        }}>\n            <TabPane tab={<FormattedMessage id=\"table_workshop\" />} key=\"1\">\n                <div className=\"leftview-box\" >\n                    <WorkshopTables reload={this.state.reloaWorkshop} workshop={this.workshop}></WorkshopTables>\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"hive\" />} key=\"2\">\n                <div className=\"leftview-box\" >\n                    <HiveTables />\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"delta_lake\" />} key=\"3\">\n                <div className=\"leftview-box\" >\n                    <ADeltaLakeTree ref={(et) => this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"file_system\" />} key=\"4\">\n                <div className=\"leftview-box\">\n                    <AFileSystemTree ref={(et) => this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"mysql\" />} key=\"5\">\n                <MysqlTree />\n            </TabPane>\n        </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n\n    buildLoadSQL = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let whereBlock = \"where \"\n        if (options) {\n            whereBlock = whereBlock + Object.keys(options).\n                filter(k => \n                    k !== \"__where__\" \n                    && k !== \"__sql__\"\n                    && k !== \"__tableName__\"\n                    ).\n                map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            if (whereBlock === \"where \") {\n                whereBlock = \"\"\n            }\n        } else whereBlock = \"\"\n\n        // let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        let sql = `load ${prefix}.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n        }\n\n        if(prefix === \"jdbc\"){\n            sql = options.__sql__ || `load jdbc.\\`${db}.${table}\\` ${whereBlock} as ${tableName};` \n            tableName = options.__tableName__ || tableName\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 200) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${tableInfo.tableName};\n                select * from ${tableInfo.tableName} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${tableInfo.tableName} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        if (prefix === \"hive\") {\n            let _whereBlock = \"where \"\n            if (options && options.__where__) {\n                _whereBlock = _whereBlock + options.__where__\n            } else _whereBlock = \"\"\n\n            const tempTableName = Tools.getTempTableName()\n            sql = `load hive.\\`${db}.${table}\\` ${whereBlock} as ${tempTableName};`\n            sql = sql + `select * from ${tempTableName} ${_whereBlock} as ${tableName};`\n        }\n\n        return { sql, tableName }\n    }\n    showTable = async (prefix, db, table, options) => {\n        const { tableName, sql } = await this.buildLoadSQL(prefix, db, table, options)\n\n        this.sqls.push({ tableName, sql })\n        this.setState({ loadingTable: true })\n\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({ loadingTable: false })\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId: this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data, schema)\n    }\n\n}","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params) => {\n      if (this.sqls.length < 2) {\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      const res = await this.client.get(RemoteAction.APPLY_GET, { name: currentTable.tableName })\n      if (res.status === 200) {\n         const { data, schema } = JSON.parse(res.content.response)\n         await this.apply({ ...currentTable, _data: data, _schema: schema })\n      }\n      else {\n         await this.apply(currentTable)\n      }\n\n   }\n\n   runSQLAtCurrentTable = async (sql,params) => {      \n      const view = this.sqls.map(item => item.sql).join(\"\")\n      const res = await this.client.runScript(\n         `${view}\n          ${sql}`,\n         Tools.getJobName(),\n         { ...Tools.robotFetchParam(), ...params })\n      return res\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql, _data, _schema } = params\n      this.sqls.push(params)\n\n      if (_data && _schema) {\n         this.setCurrentTable(\"\", \"\", tableName, _schema, _data)\n         return 200\n      }\n\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try {\n         const res = await this.client.runScript(view, Tools.getJobName(), {\n            ...Tools.robotFetchParam(),\n            queryType: \"analysis_workshop_apply_action\",\n            analysis_workshop_table_name: tableName,\n            analysis_workshop_sql: JSON.stringify(this.sqls)\n         })\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      } catch (e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }\n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${this.getLastApplyTable().tableName} as ${tableName};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n\n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <Transfer\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table \n                    pagination={{pageSize:3}}   \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch onChange={(checked)=>this.enableGroupByField(checked,record)} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <Button dataref={record} onClick={() => { this.showAggFuncsAndApply(record) }}>Choose function</Button>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{\n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}>\n          <Input placeholder={\"input the new name here\"} />\n          </Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button dataref={record} onClick={() => { this.showAggFuncsAndApply(record) }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../order/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../order/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { SetStateAction, SetStateActionHandler } from \"../../app_console/admin/actions/SetStateAction\";\nimport { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"./AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"./RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../../app_console/admin/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport { OrderStationActionNames } from '../order/actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\nimport {FormattedMessage} from 'react-intl'\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return  <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab={<FormattedMessage id=\"select_columns\"/>} key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"rename_columns\"/>} key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"transform_columns\"/>} key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"cast_columns_type\"/>} key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                </Tabs>\n            </div>                \n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Input, Form } from 'antd';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport Tools from '../../../common/Tools';\n\nconst ExpressionConst = {\n    EQUAL: \"=\",\n    NON_EQUAL: \"!=\",\n    IN: \"in\",\n    CONTAINS: \"contains\",\n    STARTS_WITH: \"startsWith\",\n    ENDS_WITH: \"endsWith\",\n    LIKE: \"like\",\n    IS_NULL: \"is null\",\n    IS_NOT_NULL: \"is not null\",\n    IS_EMPTY: \"is empty\",\n    IS_NOT_EMPTY: \"is not empty\",\n\n}\n\nconst buildExpression = (item) => {\n    const { field, dataType, compare, condition } = item\n    if (compare === ExpressionConst.IN) {\n\n        let conTemp = \"\"\n\n        switch (dataType) {\n            case \"integer\": case \"long\": case \"float\": case \"double\":\n                conTemp = condition.map(cond => {\n                    return cond\n                }).join(\",\")\n                break\n            default:\n                conTemp = condition.map(cond => {\n                    return `\"${Tools.escapeQuote(cond)}\"`\n                }).join(\",\")\n        }\n        const con = `(${conTemp})`\n        return `${Tools.getField(field)} ${compare} ${con}`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_NULL || compare === ExpressionConst.IS_NULL) {\n        return `${Tools.getField(field)} ${compare}`\n    }\n\n    if (compare === ExpressionConst.IS_EMPTY) {\n        return `${Tools.getField(field)} = \"\"`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_EMPT) {\n        return `${Tools.getField(field)} != \"\"`\n    }\n\n    if (compare === ExpressionConst.LIKE) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}\"`\n    }\n\n    if (compare === ExpressionConst.STARTS_WITH) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}%\"`\n    }\n\n    if (compare === ExpressionConst.ENDS_WITH) {\n        return `${Tools.getField(field)} like \"%${Tools.escapeQuote(condition)}\"`\n    }\n\n    let con = \"\"\n    switch (dataType) {\n        case \"string\":\n            con = `\"${Tools.escapeQuote(condition)}\"`\n            break\n        default: con = condition;\n    }\n    return `${Tools.getField(field)} ${compare} ${con}`\n}\nfunction FilterCondition(props) {\n    const { record, workshop } = props\n    const [compare, setCompare] = useState(undefined)\n    const { dataType, field } = record\n    const [inCandidate, setInCandidate] = useState([])\n    const [inCandidateLoading, setInCandidateLoading] = useState(false)\n    const [form] = Form.useForm()\n    props.forms[field] = form\n\n    const fetch = async () => {\n        if (inCandidate.length === 0 && compare === \"in\") {\n            setInCandidateLoading(true)\n            \n            const res =  await workshop.runSQLAtCurrentTable(`select distinct(${Tools.getField(field)}) as name \n            from ${workshop.getLastApplyTable().tableName} \n            as ${Tools.getTempTableName()};`,{outputSize: 5000, timeout: 10000 })\n            \n            if (res.status === 200) {\n                setInCandidate(res.content.data)\n            }\n            setInCandidateLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [compare])\n\n    const condition = () => {\n        switch (compare) {\n            case ExpressionConst.IS_NULL:\n                return <></>\n            case ExpressionConst.IS_NOT_NULL:\n                return <></>\n            case ExpressionConst.IN:\n                return <Select loading={inCandidateLoading} mode=\"tags\" style={{ width: '300px' }}>\n                    {inCandidate.map(item => {\n                        return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n                    })}\n                </Select>\n\n            case ExpressionConst.LIKE:\n                return <><Input/><span>LIKE 'a%o' means Finds any values that start with 'a' and ends with 'o' </span></>\n\n            default:\n                return <Input />\n        }\n    }\n\n    const ui = () => {\n        return <Form form={form} layout={\"inline\"}>\n            <Form.Item name=\"compare\">\n                <Select initialValue={\"=\"}\n                    onChange={(value) => {\n                        setCompare(value)\n                    }}\n                    placeholder=\"compare\" style={{width:\"200px\"}}>\n                    <Select.Option value=\"=\">=</Select.Option>\n                    <Select.Option value=\"<\">{'<'}</Select.Option>\n                    <Select.Option value=\">\">{'>'}</Select.Option>\n                    <Select.Option value=\">=\">{'>='}</Select.Option>\n                    <Select.Option value=\"<=\">{'<='}</Select.Option>\n                    <Select.Option value=\"!=\">{'!='}</Select.Option>\n                    <Select.Option value={ExpressionConst.LIKE}>{'like'}</Select.Option>\n                    <Select.Option value={ExpressionConst.STARTS_WITH}>{'startsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.ENDS_WITH}>{'endsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IN}>{'in'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NULL}>{'is null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_NULL}>{'is not null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_EMPTY}>{'is empty'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_EMPTY}>{'is not empty'}</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"condition\">\n                {condition()}\n            </Form.Item>\n        </Form>\n    }\n    return ui()\n}\nexport { FilterCondition, ExpressionConst, buildExpression }","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider, Collapse } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport { FilterCondition } from \"./FilterCondition\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.forms = {}\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <FilterCondition forms={this.forms} record={record} workshop ={this.workshop}/>\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    buildSelectedRows = ()=>{\n        const fieldToDataType = {}\n        this.state.data.forEach(item=>{\n            fieldToDataType[item.field] = item.dataType\n        })\n\n        const params = Object.entries(this.forms).map(([key,value])=>{\n            const {compare,condition} = value.getFieldsValue()\n            if(compare){\n                return {field:key,compare,condition,dataType:fieldToDataType[key]}\n            }\n            return {}\n        })\n        if(!this.selectedRowKeys) {\n            return []\n        }\n        return params.filter(item => this.selectedRowKeys.includes(item.field))\n    }\n\n    addGroup = (values) => {        \n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        if(!this.selectedRowKeys){\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        \n        const selectedRows = this.buildSelectedRows()\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }        \n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div className=\"common-one-hundred-percent-width\">\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form> \n             \n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.buildSelectedRows()\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table pagination={{pageSize:3}}  rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\nimport { buildExpression } from \"./FilterCondition\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {}\n        this.currentConditions = {}\n    }\n\n    static buildCondition = (items) => {\n        return items.map(item => {\n            return buildExpression(item)\n        })\n    }\n\n    onNonGroupFilterApply = async (selectedRows) => {\n        if (selectedRows.length === 0) {\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        const filterStr = selectedRows.flatMap(item => {\n            return FilterStation.buildCondition([item])\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${FilterStation.buildCondition(group.data).join(\" and \")})`\n                } else return `(${FilterStation.buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n\n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">\n                        <Compare ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport { LimitStation } from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nimport { FormattedMessage } from 'react-intl'\nimport { Resizable } from \"re-resizable\";\nimport AnalysisWorkshop from \"./workshop\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = AnalysisWorkshop.workshop\n        this.state = { key: Math.random() }\n    }\n\n    reload = () => {\n        this.setState({ key: Math.random() })\n    }\n\n    render() {\n        return <div className=\"os-pane\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"os-tabs\">\n                <Resizable style={{ borderBottom: \"solid\", width: \"100%\", overflow: \"scroll\" }}>\n                    <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>\n                        <TabPane tab={<FormattedMessage id=\"project\" />} key={1} >\n                            <ProjectStation parent={this}></ProjectStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"filter\" />} key={2} >\n                            <FilterStation parent={this}></FilterStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"agg\" />} key={4} >\n                            <AggStation parent={this}></AggStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"order\" />} key={5} >\n                            <OrderStation parent={this}></OrderStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"more\" />} key={100}>\n                            <Tabs tabPosition=\"left\">\n                                <TabPane tab={<FormattedMessage id=\"join\" />} key={3}>\n                                    <JoinStation parent={this}></JoinStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"limit\" />} key={6} >\n                                    <LimitStation parent={this}></LimitStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"window\" />} key={7} >\n                                    <WindowStation parent={this}></WindowStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"dash\" />} key={8} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane>\n                                {/* <TabPane tab={<FormattedMessage id=\"datasource\" />} key={9} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane> */}\n                            </Tabs>\n                        </TabPane>\n\n                    </Tabs>\n                </Resizable>\n            </div>\n\n        </div >\n    }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.setState({reloaWorkshop:Tools.getJobName()})\n    }\n    \n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\nimport AnalysisWorkshop from \"./workshop\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = AnalysisWorkshop.workshop\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n\n        if ((typeof type) === \"object\") {\n            return (value, record) => {                \n                return JSON.stringify(value)\n            }\n        }\n\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return value\n            }\n            default:\n                return (value, record) => { return value }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        }\n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows, isDash })\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table \n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: true }}\n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <ReactMarkdown source={this.state.view.content || \"\"} />\n            </Modal>\n        </div>\n        )\n    }\n\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport OperateStation from './OperateStation';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components'\n\nfunction OperateStationWrapper(props) {\n    const ButtonGroup = styled.div`\n      display:flex;\n      align-items:right;    \n    ` \n    const handle = useFullScreenHandle();\n    return (\n        <div className=\"common-one-hundred-percent-width\">\n            <Collapse style={{marginBottom:\"10px\"}}>\n                <Collapse.Panel header={<>\n                    <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n                <Divider type=\"vertical\"/>\n                <FormattedMessage id=\"operate_panel\"/>                \n                {/* <span style={{marginLeft:\"50px\",border:\"2px dash\"}}>\n                 <Button type=\"primary\">Apply</Button> \n                 <Divider type=\"vertical\"/> <Button type=\"primary\">Save As</Button> \n                 <Divider type=\"vertical\"/> <Button>Rollback</Button> \n                </span> */}\n                \n                </>}>                    \n                    <FullScreen handle={handle}>\n                        <OperateStation ref={(et) => AnalysisWorkshop.workshop.stationRef = et} />\n                    </FullScreen>\n                </Collapse.Panel>\n            </Collapse>\n\n        </div>\n    )\n}\nexport { OperateStationWrapper }","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport RealTimeViewTable from './RealTimeViewTable';\nimport { Button, Card, Collapse, Divider } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl';\n\nfunction RealTimeTableWrapper(props) {\n    const handle = useFullScreenHandle();\n    return (\n        <Collapse defaultActiveKey={\"1\"} style={{ marginBottom: \"30px\",width: \"100%\" }}>\n            <Collapse.Panel key=\"1\" header={<>\n            {AnalysisWorkshop.workshop.sessionId && <>            \n            <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n            <Divider type=\"vertical\"/>\n            </>}            \n            <FormattedMessage id=\"data_panel\" /></>}>\n                <FullScreen handle={handle}>                    \n                    <RealTimeViewTable tableStyle={{ width: \"90%\" }} ref={(et) => AnalysisWorkshop.workshop.displayRef = et} />\n                </FullScreen>\n            </Collapse.Panel>\n        </Collapse>\n    )\n}\nexport { RealTimeTableWrapper }","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { OperateStationWrapper } from \"./OperateStationWrapper\";\nimport { RealTimeTableWrapper } from \"./RealTimeTableWrapper\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"delta\", \"public\", \"simpleData\", { header: \"true\" })\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            //return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n            return <OperateStationWrapper />\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <div className=\"ws-table-pane\">\n                    <RealTimeTableWrapper />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister, enableLogin, enableConsole } = action.data\n    const params = {}\n    if(enableRegister !== undefined){\n        params.register = enableRegister\n    }\n    if(enableLogin !== undefined){\n        params.login = enableLogin\n    }\n    if(enableConsole !== undefined){\n        params.console = enableConsole\n    }    \n    \n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, params)\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    enableConsole: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,\n        enableConsole,\n        applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableRegister: Boolean(appInfo.content.register),\n                    enableConsole: Boolean(appInfo.content.console),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Enable Console(SQL)\"\n                        name=\"enableConsole\"\n                    >\n                        <Switch defaultChecked={enableConsole} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit, remove: externalRemove } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error, setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => {\n                            if (externalRemove) {\n                                externalRemove(row)\n                            }\n                            remove(index)\n                        }\n                        }>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {\n        if (!editorMode) {\n            const newColumns = columns.map(item => {\n                item[\"render\"] = (text, row, index) => {\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n                columns={newColumns}\n                dataSource={data}\n                pagination={false}\n            />\n        }\n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error} />}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading, setEditorMode, setError }\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Input, Form, Card, Button, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\n\nfunction ChangePassword() {\n    const [error, setError] = useState(undefined)\n    const [applySuccess, setApplySuccess] = useState(undefined)\n\n    const submit = useCallback(async (values) => {\n        const { password, newPassword, _newPassword } = values\n        if (newPassword !== _newPassword) {\n            setError(\"Two new passwords are not the same\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = proxy.post(RemoteAction.USER_CHANGE_PASSWORD, values)\n        setApplySuccess(\"Update password successfully.\")\n    }, [])\n\n    return <Card className=\"common-child-center\">\n        {applySuccess && <Alert\n            closable\n            message=\"Success\"\n            description=\"Apply Success\"\n            type=\"success\"\n            showIcon\n        />}\n        {error && <Alert\n            closable\n            message=\"Fail\"\n            description={error}\n            type=\"error\"\n            showIcon\n        />}\n        <Form className=\"login-form\" onFinish={(values) => {\n            submit(values)\n        }}>\n\n            <Form.Item\n                label=\"Oringinal Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your oringinal password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"_newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password again!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    </Card>\n}\n\nexport default ChangePassword","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\nimport ChangePassword from './pages/ChangePassword';\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"website-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['website-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"website-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"website-settings\"}\n                                })\n                            }}>Website Settings</Menu.Item>                                                         \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"website-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                      \n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Button } from 'antd';\nimport AlertBox from '../../../AlertBox';\nimport { FormattedMessage } from 'react-intl';\n\n\nfunction useUserConfig(props) {\n    const [error, setError] = useState(undefined)\n    const [success, setSuccess] = useState(undefined)\n    const [current, setCurrent] = useState(undefined)\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    const getParams = () => {\n        return form.getFieldsValue()\n    }\n    const ui = ({ formItems, title, submit }) => (\n        <div className=\"common-margin common-child-center\">\n            <Card title={title} style={{ width: \"50%\" }}>\n                <Form form={form}>\n                    {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                    {formItems}\n                </Form>\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        submit\n                    }><FormattedMessage id=\"apply\" /></Button>\n                </Form.Item>\n            </Card>\n        </div>\n    )\n    return { ui, form, setError, setLoading, getParams,setCurrent,current,setSuccess}\n}\nexport { useUserConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\n\n\nfunction DefaultBackend(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const [engine,setEngine] = useState(undefined)\n    const submit = async () => {\n        if(!engine){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_default_backend\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item></>\n    })\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\nimport { useIntegerStep } from '../../../analysis/common/pages/useIntegerStep';\n\n\nfunction ApplyTimeout(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const {ui:timeoutUi,value:timoutValue} = useIntegerStep({\n        initialValue:UIMaker.extraOption()[\"apply_timeout\"] || 10\n    })    \n    const submit = async () => {\n        if(!timoutValue){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { apply_timeout: timoutValue })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_apply_timeout\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {timoutValue}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                {timeoutUi()}\n            </Form.Item></>\n    })\n}\nexport { ApplyTimeout }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Teams(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.TEMA_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Teams }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Input, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport { useUserConfig } from '../../common/pages/useUserConfig';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\nfunction MySQL() {\n    const { ui, setError, setSuccess, form } = useUserConfig()\n    const submit = async () => {\n        let { host, port, db, user, password, name } = form.getFieldsValue()\n        if (!name) {\n            name = db\n        }\n        if (!port) {\n            port = \"3306\"\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.DS_ADD, { \n            host, port, db, user, password, name, format: \"jdbc\",jType:\"mysql\" })\n        if (res.status === 200) {\n            setSuccess(\"Create Connect Success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n    return ui(\n        {\n            title: <FormattedMessage id=\"connect_mysql\" />,\n            submit,\n            formItems: <>\n                <Form.Item name=\"host\" required={true} label={<FormattedMessage id=\"host\" />}>\n                    <Input placeholder=\"127.0.0.1\" />\n                </Form.Item>\n                <Form.Item name=\"port\" initialValue={\"3306\"} label={<FormattedMessage id=\"port\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"db\" required={true} label={<FormattedMessage id=\"db\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"user\" required={true} label={<FormattedMessage id=\"user\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"password\" required={true} label={<FormattedMessage id=\"password\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"name\" label={<FormattedMessage id=\"alias\" />}>\n                    <Input />\n                </Form.Item>\n            </>\n        }\n    )\n}\nexport { MySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction ListMySQL() {\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        remove: async(row) =>{\n            const res = await proxy.post(RemoteAction.DS_REMOVE,{id:row.id})\n            if(res.status === 200){\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.DS_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\nexport { ListMySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\nimport { FormattedMessage } from 'react-intl';\nimport { ApplyTimeout } from './ApplyTimeout';\nimport ChangePassword from './ChangePassword';\nimport { Teams } from './Teams';\nimport { MySQL } from '../../../analysis/datasource/pages/MySQL';\nimport { ListMySQL } from '../../../analysis/datasource/pages/ListMySQL';\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage, setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['default-backend']}\n                    defaultOpenKeys={['analysis-workshop']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"analysis-workshop\"\n                        title={\n                            <span>\n                                <MailOutlined />\n                                <span><FormattedMessage id=\"analysis_workshop\" /></span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"default-backend\" onClick={() => {\n                            setCurrentPage(\"default-backend\")\n                        }}><FormattedMessage id=\"set_engine\" /></Menu.Item>\n                        <Menu.Item key=\"set-timeout\" onClick={() => {\n                            setCurrentPage(\"set-timeout\")\n                        }}><FormattedMessage id=\"set_timeout\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"user\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"user_settings\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"change-admin-password\"\n\n\n                            onClick={() => {\n                                setCurrentPage(\"change-admin-password\")\n                            }}><FormattedMessage id=\"change_password\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"team\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"team\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"team_manager\"\n                            onClick={() => {\n                                setCurrentPage(\"team_manager\")\n                            }}><FormattedMessage id=\"team_manager\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"datasource\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"datasource\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"mysql\")\n                            }}><FormattedMessage id=\"connect_mysql\" /></Menu.Item>\n                        <Menu.Item key=\"list_mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"list_mysql\")\n                            }}><FormattedMessage id=\"list_mysql\" /></Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"default-backend\" && <DefaultBackend />}\n                {currentPage === \"set-timeout\" && <ApplyTimeout />}\n                {currentPage === \"change-admin-password\" && <ChangePassword></ChangePassword>}\n                {currentPage === \"team_manager\" && <Teams></Teams>}\n                {currentPage === \"mysql\" && <MySQL />}\n                {currentPage === \"list_mysql\" && <ListMySQL />}\n            </div>\n        </div>\n    )\n}\nexport { Settings }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport { Settings } from './admin/pages/Settings';\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole(props) {\n    const {appInfo} = props\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>            \n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader appInfo={appInfo} userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>        \n\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","const zh_CN = {    \n    login: \"登录\",\n    register: \"注册\",\n    console: \"控制台\",\n    analysis_workshop: \"分析工坊\",\n    settings: \"设置\",\n    admin: \"管理员\",\n    more: \"更多\",\n    apply: \"应用\",\n    set_default_backend: \"设置默认Engine\",\n    set_default_backend_error: \"请选择一个引擎进行设置\",\n    set_engine: \"设置引擎\",\n    curent_value: \"当前值\",\n    choose: \"选择\",\n    done: \"完成\",\n    congratulation: \"恭喜\",\n    set_timeout: \"超时设置\",\n    set_apply_timeout: \"设置【应用】超时（单位秒）\",\n    table_workshop: \"暂存区\",\n    delta_lake: \"数据湖\",\n    file_system: \"文件系统\",\n    project: \"字段\",\n    filter: \"过滤\",\n    join: \"关联\",\n    window: \"窗口\",\n    dash: \"可视化\",\n    limit: \"条数\",\n    agg: \"聚合\",\n    order: \"排序\",\n    select_columns: \"筛选字段\",\n    rename_columns: \"重命名字段\",\n    transform_columns: \"转换字段\",\n    cast_columns_type: \"修改字段类型\",\n    hive: \"数仓\",\n    operate_panel: \"操作区\",\n    data_panel:\"数据区\",\n    user_settings:\"用户设置\",\n    change_password:\"修改密码\",\n    team:\"团队\",\n    team_manager: \"团队管理\",\n    datasource: \"数据源\",\n    analysis_range: \"请选择表分析区间\",\n    table_start: \"选择开始区间[包含]\",\n    table_end: \"选择结束区间[包含]\",\n    table_random: \"选择任意值\",\n    or: \"或者\",\n    no_partition_msg: \"该表没有分区信息。请直接点击【确认】\",\n    ds_mysql: \"MySQL管理\",\n    host: \"主机名\",\n    port: \"端口\",    \n    db: \"数据库名\",\n    user: \"用户名\",\n    password: \"密码\",\n    alias: \"别名\",\n    connect_mysql: \"连接 MySQL\",\n    list_mysql: \"MySQL列表\",\n    mysql: \"MySQL\",\n    partitionColumn:\"分区列\",\n    lowerBound:\"最低值\",\n    upperBound:\"最大值\",\n    numPartitions:\"分区数\",\n    mysql_parallel:\"MySQL打开并行度设置\",\n    no_mysql_parallel:\"该表没有数字类型的列，无法设置并行度。请直接点击【确定】\",\n    \n}\nexport default zh_CN;","const en_US = {\n    login: \"Login\",\n    register: \"Register\",\n    console: \"Console\",\n    analysis_workshop: \"Analysis Workshop\",\n    settings: \"Settings\",\n    admin: \"Admin\",\n    more: \"More\",\n    apply: \"Apply\",\n    set_default_backend: \"Set Default Backend\",\n    set_default_backend_error: \"Please select at least one engine\",\n    set_engine: \"Set Engine\",\n    curent_value: \"Current Value\",\n    choose: \"Choose\",\n    done: \"Done\",\n    congratulation: \"Congratulation\",\n    set_timeout: \"Set Timout\",\n    set_apply_timeout: \"Set  [Apply] Timeout（Unit: Second）\",\n    table_workshop: \"Table Workshop\",\n    delta_lake: \"DeltaLake\",\n    file_system: \"FileSystem\",\n    project: \"Project\",\n    filter: \"Filter\",\n    join: \"Join\",\n    order: \"Order\",\n    window: \"Window\",\n    dash: \"Dash\",\n    agg: \"Agg\",\n    limit: \"Limit\",\n    select_columns: \"Select Columns\",\n    rename_columns: \"Rename Columns\",\n    transform_columns: \"Transform Columns\",\n    cast_columns_type: \"Cast Column Type\",\n    hive: \"Hive\",\n    operate_panel: \"Operate Panel\",\n    data_panel: \"Data Panel\",\n    user_settings: \"User Settings\",\n    change_password: \"Change Password\",\n    team: \"Team\",\n    team_manager: \"Team Control\",\n    datasource: \"Data Source\",\n    analysis_range: \"Select Table Range\",\n    table_start: \"Select start value\",\n    table_end: \"Select end value\",\n    table_random: \"Select values\",\n    or: \"Or\",\n    no_partition_msg: \"This table have no partition message. Please click Ok.\",\n    ds_mysql: \"MySQL\",\n    host: \"Host\",\n    port: \"Port\",\n    db: \"Database Name\",\n    user: \"User Name\",\n    password: \"Password\",\n    alias: \"Alias\",\n    connect_mysql: \"Connect MySQL\",\n    list_mysql: \"MySQL List\",\n    mysql: \"MySQL\",\n    partitionColumn:\"partitionColumn\",\n    lowerBound:\"lowerBound\",\n    upperBound:\"upperBound\",\n    numPartitions:\"numPartitions\",\n    mysql_parallel:\"MySQL Parallel\",    \n    no_mysql_parallel:\"No number columns in this table, Please click [Ok]\",\n}\nexport default en_US","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ConfigProvider } from 'antd';\nimport {IntlProvider} from \"react-intl\"\nimport zh_CN from './locale/zh_CN';\nimport en_US from './locale/en_US';\nimport AntZhCN from 'antd/lib/locale-provider/zh_CN';\n\nconst initState = {\n    appConfigured: false,\n    loading: true,\n    lang: \"zh\",\n    enableConsole: false\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading,lang,enableConsole } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { \n                    appConfigured: appInfo.content.configured, \n                    enableConsole: appInfo.content.console || false, \n                    loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <IntlProvider locale={lang} messages={zh_CN}>\n        <ConfigProvider locale={AntZhCN}>\n            <AppContext.Provider value={{ dispacher }}>                \n                {loading && <SpinBox />}\n                {!loading && !appConfigured && <AppSetup />}\n                {!loading && appConfigured && <AppConsole appInfo={{enableConsole}}/>}\n            </AppContext.Provider>\n        </ConfigProvider>\n        </IntlProvider>\n\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n    static ANALYSIS_TABLE_DELETE = \"/api_v1/analysis/table/delete\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n    static USER_CHANGE_PASSWORD = \"/api_v1/changepassword\"\n\n    static APPLY_GET = \"/api_v1/analysis/apply\"\n\n    static TEMA_LIST = \"/api_v1/team\" \n    \n    static DS_ADD = \"/api_v1/ds/add\" \n    static DS_LIST = \"/api_v1/ds/list\"\n    static DS_REMOVE = \"/api_v1/ds/remove\" \n\n    static DS_MYSQL_DBS= \"/api_v1/ds/mysql/dbs\"\n\n    static DS_MYSQL_CONNECT = \"/api_v1/ds/mysql/connect/get\"\n    static DS_MYSQL_COLUMN_INFO = \"/api_v1/ds/mysql/column\"\n\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}