{"version":3,"sources":["v1/analysis/common/actions/SetStateAction.js","v1/ActionMaker.js","serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","v1/service/CodeIntellegence.js","service/HTTPMethod.js","service/BackendConfig.js","user/MLSQLAuth.js","service/MLSQLAPI.js","components/et/ButtonToCommand.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/async_execute/ResourceProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","common/tool.js","components/MLSQLQueryDisplay.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/async_execute/QueryHistory.js","components/query/MLSQLDash.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/workshop_tables/actions/LoadAction.js","v1/analysis/workshop_tables/actions/OpenAction.js","v1/analysis/workshop_tables/actions/DeleteAction.js","v1/analysis/workshop_tables/actions/ExportToAction.js","v1/analysis/workshop_tables/actions/WorkshopTablesReducer.js","v1/analysis/workshop_tables/WorkshopTables.js","v1/analysis/hive/actions/LoadAction.js","v1/analysis/hive/actions/OpenAction.js","v1/analysis/hive/actions/SearchAction.js","v1/analysis/hive/actions/HiveTablesReducer.js","v1/analysis/hive/HiveTables.js","v1/analysis/hive/pages/usePartitionSelect.js","v1/analysis/datasource/actions/OpenMySQLTableAction.js","v1/analysis/datasource/actions/MysqlTreeReducer.js","v1/analysis/common/pages/useIntegerStep.js","v1/analysis/datasource/pages/MysqlTree.js","v1/analysis/datasource/pages/useMySQLPartition.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/agg/AggStationOp.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/common/actions/RemoveFieldAction.js","v1/analysis/common/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/project/CastFields.js","v1/analysis/common/CommonActionNames.js","v1/analysis/project/AddJsonField.js","v1/analysis/project/actions/AddFieldAction.js","v1/analysis/project/actions/RemoveFieldAction.js","v1/analysis/project/actions/JsonFieldsApplyAction.js","v1/analysis/project/actions/JsonFieldsReducer.js","v1/analysis/project/JsonFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/filter/FilterCondition.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/common/actions/ApplyAction.js","v1/analysis/union/actions/UnionApplyAction.tsx","v1/analysis/union/actions/UnionStationReducer.js","v1/analysis/union/SelectUnionTable.tsx","v1/analysis/union/UnionStation.tsx","v1/analysis/pivot/actions/PivotApplyAction.tsx","v1/analysis/pivot/actions/PivotStationReducer.js","v1/analysis/pivot/useAggCheck.tsx","v1/analysis/pivot/PivotStation.tsx","v1/analysis/OperateStation.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/RealTimeViewTable.js","v1/analysis/OperateStationWrapper.js","v1/analysis/RealTimeTableWrapper.js","v1/analysis/workshop.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/SetStateAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/pages/ChangePassword.js","v1/app_console/admin/AdminSetting.js","v1/analysis/common/pages/useUserConfig.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/ApplyTimeout.js","v1/app_console/admin/pages/Teams.js","v1/analysis/datasource/pages/MySQL.js","v1/analysis/datasource/pages/ListMySQL.js","v1/app_console/admin/pages/Settings.js","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","locale/zh_CN.js","locale/en_US.js","App.js","index.js","backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","backend_service/RemoteAction.js","backend_service/backend/RestConst.js"],"names":["ActionMaker","buildHandler","action","a","data","SetStateActionHandler","handler","SetStateAction","eventCallBack","dispatch","getState","signal","dispacher","__state","type","state","name","params","Boolean","window","location","hostname","match","currentPage","client","ActionProxy","post","RemoteAction","LOGOUT","sessionStorage","removeItem","AccessToken","logined","SwitchActionHandler","SwitchAction","UIMaker","res","user","userName","content","role","extraOption","backendTags","token","resp","headers","get","setItem","JSON","stringify","Cookies","set","path","userStr","getItem","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","setState","AppConsoleReducer","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","appInfo","useContext","AppConsoleContext","useState","current","setCurrent","setLogined","isAdmin","setIsAdmin","undefined","leave","setLeave","tempCurrent","useRef","useEffect","Provider","title","visible","onCancel","onOk","buildEvent","cancelText","okText","description","onClick","key","domEvent","preventDefault","stopPropagation","selectedKeys","mode","Item","style","fontSize","icon","LoginOutlined","id","SelectOutlined","enableConsole","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","password","password2","error","REGISTER","status","msg","setupLogin","RegisterActionHandler","RegisterAction","LOGIN","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","LoginRegisterReducer","AlertBoxW","styled","div","AlertBox","closable","message","RegisterContext","initState","Register","appConsoleDispacher","formLayout1","useReducerAsync","value","className","onFinish","values","label","rules","required","Password","htmlType","LoginContext","Login","require","default","CodeIntellegence","sql","lineNum","columnNum","restClient","RUN","executeMode","isDebug","queryType","wordList","Method","Status","RUN_SCRIPT","MLSQLAuth","isLogin","HTTP","callback","MLSQLAPI","request","apiResponse","then","s","catch","m","console","log","request2","json","str","login","_sCallBack","_errorCallBack","this","registerOrLogin","logout","register","url","body","accessToken","serverError","uuidv4","ServerError","constructor","APIResponse","process","jsonErr","jsonObj","successCallback","serverErrorCallback","ok","wow","fail","toString","runScript","auth","Auth","jobName","self","jsonRes","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","Object","assign","background","async","method","toUpperCase","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","fetch","timeout","text","newRunScript","okFun","failFun","new_request","resStatus","extractMsg","err","ButtonToCommand","makeSQL","EditorOp","consoleComp","inner","session","editor","setText","setValue","append","insert","row","getLength","column","insertAfterCursor","p","getCursorPosition","focus","comp","super","getText","getValue","getSelection","selectionRange","getSelectionRange","getTextRange","EngineService","JOB_KILL","block","ANALYSIS_TABLES","tableName","ANALYSIS_TABLE_INFO","empty_res","currentJobIndex","totalJobs","progress","totalJob","res2","completedJobsNum","activeJobsNum","totalCores","activeTasks","AsyncExecuter","queryPanel","enterLoading","commandGroupRef","loading","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","commandGroup","jobProgressRef","taskProgressRef","displayRef","queryApp","display","dashRef","dash","logInfo","closed","prepare","update","measureTime","startTime","Date","getTime","saveFile","scriptId","SAVE_SCRIPT_FILE","run","engineName","intervalTimer","setInterval","monitorJob","monitorLog","queryHistory","reload","enter","cancelMonitor","clearInterval","exit","JOB_DETAIL","jobInfo","reason","response","setData","length","map","item","split","killJob","JobProgress","executor","jobProgress","finalTime","timer","toFixed","parent","render","marginRight","ref","et","Minutes","formatValue","Seconds","percent","margin","ResourceProgress","componentDidMount","resourceInfo","jobs","jobNum","filter","maxWidth","EngineSelectComp","setLoading","engine","setEngine","proxy","ENGINE_LIST","backend","useEngine","onChange","width","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","getAllText","getAceEditor","appendToEditor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","resourceProgressRef","etOver","evt","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","completers","newValue","onDragOver","onDrop","defaultSize","height","onResize","resize","theme","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","CommandGroup","TaskProgress","mark","setTimeout","taskCompute","api","BackendConfig","condition","Error","assert","hasOwnProperty","jsonArray","_jsonObj","numTasks","numActiveTasks","numCompletedTasks","forEach","successPercent","resourceCompute","ReactMarkdown","MLSQLQueryDisplay","setRender","keyColumn","config","isPrototypeOf","substring","keys","basket","rows","dataIndex","index","new_item","columns","rowDoubleClick","event","view","enabled","disablePreview","tableStyle","onRow","onDoubleClick","dataSource","OkText","source","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","fileListStyle","UploadDropzone","Component","files","req","file","attach","end","f","size","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","styles","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","dataTypeToItems","reduce","x","y","z","dataType","prev","Map","_config","scatters","dataTypeConfig","fill","shape","xConfig","dataKey","yConfig","zConfig","top","right","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","titleMap","isStream","renderRawData","MLSQLHTML","MLSQLHTMLPanel","refresh","sandbox","srcDoc","frameBorder","scrolling","ifr","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","cleanSQL","line","includes","executeAgainStatus","defaultRender","record","currentTH","target","parentNode","num","cellIndex","field","whiteSpace","wordWrap","renderConfig","t","cssStyle","runJob","JOB_LIST","processData","detailConsoleMessage","respDisplay","overflow","_display","marginBottom","Panel","Collapse","TabPane","Tabs","MLSQLDash","PureComponent","isNormalXY","xYRender","renderDash","queryResData","header","defaultActiveKey","onTabClick","tab","CodeBlock","originalEditor","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","spin","Engine","show_result","fail_result","code","DataTable","parseData","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","ExecuteUnit","codeBlock","displayGroup","notebook","nextExecuteUnit","codeBlockIsEmpty","getCodeStr","CODE_SPLITTER","NodeBook","createNewExecuteUnit","addRef","instance","executeUnitRefs","slice","isLastEmpty","executeUnits","saveNoteBook","LogMonitor","cancelQueryLog","queryLog","PythonACE","logMonitor","select","finalSQL","runMode","ex","PythonEditor","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabName","newTabIndex","add","getPaneIndexByActiveKey","lastIndex","pane","i","remove","editorRefList","closeEditor","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","func","keyQuote","k","keyPath","getTempTableName","replace","getJobName","escapeQuote","quote","unQuote","startsWith","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","robotFetchParamWithCollect","getField","v","distinct","arrays","Set","tempF","fastCompareObject","deepCompareObject","arg1","arg2","compare2Objects","isNaN","RegExp","String","Number","prototype","leftChain","indexOf","rightChain","pop","ETPopLoad","datasourcesRender","getAttribute","sourceType","sourceTypeV","param","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","rv","whereStr","etpop","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","ignorePath","ignoreTableName","TextArea","ETPopAlgorithm","renderParam","temp","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETBaseTool","outputTableName","outputTableNameV","showTableName","showOutputTableName","pathNameForRender","showPathName","_makeMLSQL","asStr","_render","ETPopTool","ETPopDownload","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","showCode","ETExample","etName","ETRegister","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETDownloadFile","link","document","createElement","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","MLSQLETQuick","itemData","onDragStart","renderPop","etDoubleClick","padding","gutter","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","show","entries","TableOutlined","isLeaf","tip","spinning","FileSystemTree","getFileList","ls","_corrupt_record","root","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","loadData","CommonHandlers","CommonActions","node","consoleApp","SCRIPT_FILE_GET","scriptFile","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","scriptContent","getFieldValue","fileName","createFileError","saveParams","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","element","isExpanded","ExpandActionHandler","ExpandAction","SCRIPT_FILE_REMOVE","DeleteFileActionHandler","DeleteFileAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","expand","ScriptTreeHandlers","ScriptTreeActions","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","list","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","tmpStyle","zIndex","position","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","Form","useForm","SCRIPT_FILE_LIST","builder","treeRes","sort","b","treeData","getList","FolderAddOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","onExpand","autoExpandParent","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","fileSystemTreeRef","MLSQLQueryApp","script","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","sqlContent","createRef","paddingRight","borderRight","leftTreePaneRef","MixinBuilder","superclass","with","mixins","c","mixin","mix","NewSessionOp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","ADeltaLakeTree","tableClick","tablesInWorkshop","sessionId","LoadActionHandler","LoadAction","openTable","OpenActionHandler","OpenAction","ANALYSIS_TABLE_DELETE","DeleteActionHandler","DeleteAction","targetPath","exportTable","buildLoadSQL","runSql","ExportToActionHandler","ExportToAction","WorkshopTablesActionNames","LOAD","OPEN","DELETE","EXPORT_TO","WorkshopTablesHandlers","WorkshopTablesActions","WorkshopTablesReducer","confirm","exportTo","WorkshopTablesContext","WorkshopTables","externalReload","exportForm","FolderOpenOutlined","ContainerOutlined","CloudUploadOutlined","getFieldsValue","resetFields","flatMap","dbName","databaseName","namespace","tables","newdbs","partitionValues","partitionColumn","tableRandom","tableStart","tableEnd","partitionColumnName","inStr","__where__","con","loop","searchValue","beforeStr","substr","afterStr","search_dbs","showKeys","sub","SearchActionHandler","SearchAction","HiveTablesActionNames","SEARCH","HiveTablesHandlers","HiveTablesActions","HiveTablesReducer","HiveTablesContext","HiveTables","AnalysisWorkshop","setOpenTable","setError","setPartitionColumn","noPartition","setNoPartition","partition","reverse","usePartitionSelect","PartitionSelect","partitionForm","setOpenTableForPartition","setPartitionError","partitionNumValue","lowerBound","upperBound","DS_MYSQL_CONNECT","connectRes","tempTable","whereBlock","connect","__sql__","__tableName__","OpenMySQLTableActionHandler","OpenMySQLTableAction","MysqlTreeActionNames","MysqlTreeHandlers","MysqlTreeActions","MysqlTreeReducer","useIntegerStep","initialValue","min","max","MysqlTreeContext","MysqlTree","setColumn","partitionNumUI","__connect__","DS_MYSQL_COLUMN_INFO","columnName","setFieldsValue","data_type","col_name","useMySQLPartition","PartitionUI","DS_MYSQL_DBS","LeftView","reloaWorkshop","WorkshopOp","tableInfo","_whereBlock","tempTableName","sqls","loadingTable","toggleMessage","schema","setCurrentTable","updateDisplay","WorkshopAutoSql","getLastApplyTable","rollback","APPLY_GET","apply","_data","_schema","runSQLAtCurrentTable","analysis_workshop_table_name","analysis_workshop_sql","save","persist","finalSql","persistJobName","extraParams","persistSQL","ANALYSIS_SAVE","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","onApply","disabled","onRollback","StationCommonOp","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","SelectJoinField","currentTableSchema","joinStation","joinInfo","joinTable","currentTableFields","fields","joinTableFields","tableSchema","next","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","componentDidUpdate","prevProps","listStyle","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","danger","SelectJoinTable","Step","Steps","StepContent","JoinStation","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","currentStep","preview","steps","ColumnOperate","pagination","pageSize","AggStationOp","enableGroupByField","fieldName","groupByFields","generateProjectField","newName","aggFields","newFields","concat","FuncDesc","funcValue","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","agg","Math","random","funcPopUp","collect","d","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","defaultChecked","_groupBy","dataref","_agg","columnsRef","handleFunc","applyFuncToFieldRef","RenameFields","formRef","FunctionField","ProjectStationSQLOp","onSelectApply","selectFieldsRef","showInfo","onFuncApply","functionFieldRef","isAggExists","onRenameApply","renameFieldsRef","currentFields","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsActions","CastFieldsReducer","RollbackActionHandler","RollbackAction","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","CastFieldsContext","CastFields","submit","marginTop","onDeselect","CommonActionNames","APPLY","AddJsonField","keyPaths","forms","layout","MinusOutlined","subFields","JsonFieldsContext","targetIndex","splice","formValues","operateFiled","jsonStr","JsonFieldsApplyActionHandler","JsonFieldsApplyAction","JsonFieldsHandlers","JsonFieldsActions","JsonFieldsReducer","JsonFields","tempObjs","obj","PlusOutlined","ProjectStation","ExpressionConst","EQUAL","NON_EQUAL","IN","CONTAINS","STARTS_WITH","ENDS_WITH","LIKE","IS_NULL","IS_NOT_NULL","IS_EMPTY","IS_NOT_EMPTY","FilterCondition","compare","setCompare","inCandidate","setInCandidate","inCandidateLoading","setInCandidateLoading","outputSize","Compare","command","buildSelectedRows","fieldToDataType","selectedRowKeys","addGroup","groupName","groupType","selectedRows","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","hideOnSinglePage","GroupGroup","ApplyGroup","FilterStation","filterStr","buildCondition","onFilterApply","buildFilter","group","currentConditions","items","conTemp","cond","IS_NOT_EMPT","buildExpression","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","OrderStationActions","OrderStationReducer","OrderStationContext","OrderStation","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationActions","WindowStationReducer","useSelectFields","enableApply","fieldWrapper","selectFields","selectFieldsLabel","selectFieldsMode","operateFields","setOperateFields","commands","onClose","BuildGroup","WindowStationContext","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","funcs","setFuncs","setCurrentFunc","fetchFuncs","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","renderItem","Text","WindowStation","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","PLUGIN_LIST","dashPlugins","fetchPlugin","PLUGIN_GET","pluginName","analyzedScriptContent","image","dataValues","dashValues","xColumn","yColumn","ApplyActionHandler","ApplyAction","unionTable","operator","duplicate","UnionApplyHandler","UnionApplyAction","UnionStationActionNames","UnionApply","UnionStationHandlers","UnionStationActions","UnionStationReducer","useSelectUnionTable","Array","setTables","UnionStationContext","UnionStation","SelectUnionTable","unionTableForm","columnHeader","columnLeft","columnSum","sunFunc","PivotApplyHandler","PivotApplyAction","PivotStationActionNames","PivotApply","PivotStationHandlers","PivotStationActions","PivotStationReducer","aggList","CheckboxGroup","Checkbox","PivotStationContext","PivotStation","schemaForList","setDragging","getDragProps","useDrag","onDragEnd","useDrop","onDom","dropPropHeader","isHoveringHeader","isHovering","dropPropsLeftHeader","isHoveringLeftHeader","dropPropsSum","isHoveringSum","tips","isHover","aggs","aggForm","useAggCheck","aggUI","OperateStation","borderBottom","tabPosition","WorkshopMessageOp","showMessage","consoleMessage","showInfoMessage","infoMessage","WorkshopUIOp","stationRef","SearchOp","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","searchInput","onPressEnter","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","wrapper","DropdownMenuUI","dropdownStat","dropdown","menu","BarChartOutlined","overlay","RealTimeViewTable","getDefaultRender","getDefaultSearch","getDefaultTitleRender","isDash","newColumns","textWrap","ellipsis","showTitle","OperateStationWrapper","handle","useFullScreenHandle","FullscreenOutlined","RealTimeTableWrapper","operateStationView","subTitle","enableRegister","enableLogin","APP_SAVE","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","APP_INFO","getAppInfo","showIcon","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","externalRemove","setSchema","setResult","editorMode","setEditorMode","useDynamicList","getKey","move","resetList","sortForm","submitNow","REG","fieldValue","matchFF","exec","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","ENGINE_ADD","ChangePassword","setApplySuccess","newPassword","_newPassword","USER_CHANGE_PASSWORD","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","MailOutlined","useUserConfig","success","setSuccess","formItems","getParams","DefaultBackend","USER_EXTRA","updateUser","ApplyTimeout","timeoutUi","timoutValue","apply_timeout","Teams","TEMA_LIST","MySQL","host","port","DS_ADD","jType","ListMySQL","DS_REMOVE","DS_LIST","Settings","setCurrentPage","AppConsole","textAlign","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","AppSetupHeader","AppSetupBody","AppSetup","zh_CN","analysis_workshop","settings","admin","more","set_default_backend","set_default_backend_error","set_engine","curent_value","choose","done","congratulation","set_timeout","set_apply_timeout","table_workshop","delta_lake","file_system","project","limit","order","select_columns","rename_columns","transform_columns","cast_columns_type","hive","operate_panel","data_panel","user_settings","change_password","team","team_manager","datasource","analysis_range","table_start","table_end","table_random","or","no_partition_msg","ds_mysql","alias","connect_mysql","list_mysql","mysql","numPartitions","mysql_parallel","no_mysql_parallel","as","choose_json_field","json_fields","union","union_table","pivot","column_left","column_header","column_sum","drag_column","drop_column","en_US","App","configured","locale","messages","AntZhCN","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","GlobalParamNames","USER_NAME","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","Backend","fetch_config","BACKEND_URL","basic_config","final_config","GET","POST","PUT"],"mappings":"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","file":"static/js/main.d5c0db5e.chunk.js","sourcesContent":["import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption)\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../analysis/common/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal'\nimport { FormattedMessage  } from 'react-intl'; \nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin,appInfo } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n\n    const [enableConsole,setEnableConsole] = useState(false)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);    \n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => { \n                if(e.key === \"home\"){\n                    e.domEvent.preventDefault()\n                    e.domEvent.stopPropagation()\n                    return\n                }           \n                if (logined && current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item  key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                    <span style={{ fontSize: 11 }}>(Build 20200811.115341)</span>\n                </Menu.Item>\n                <Divider type=\"vertical\"></Divider>\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    <FormattedMessage id=\"login\"/>\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                     <FormattedMessage id=\"register\"/>                    \n                </Menu.Item>}\n\n                {logined && appInfo.enableConsole && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    <FormattedMessage id=\"console\"/>\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                   <FormattedMessage id=\"analysis_workshop\"/>                    \n                </Menu.Item>}\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"settings\"/>                    \n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"admin\"/>\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title={<FormattedMessage id=\"more\"/>}>\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message={props.title || \"Message\"} description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path){ \n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\":\"robot\"})\n        return res        \n    }\n\n    static async killJob(jobName){  \n        const res = await client.runScript(\"!kill \" + jobName+\";\", uuidv4(), {\"queryType\":\"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName:jobName})                        \n        return res\n    }\n\n    static async runJob(sql,block=false){        \n        const res = await client.runScript(sql, uuidv4(),{ \"async\": block}) \n        return res\n    }\n\n    static async showFunctions(){        \n        const res = await client.runScript(\"\",uuidv4(),{executeMode:\"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`,jobName ,{\"queryType\":\"robot\"}) \n        return {jobName,res} \n    }\n\n    static async tablesInDeltaLake(){\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`,jobName ,{\"queryType\":\"robot\"}) \n        return res\n    }\n\n    static async tablesInWorkshop(){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLES ,{}) \n        return res\n    }\n\n    static async tableInfo(tableName){        \n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO ,{tableName}) \n        return res\n    }\n\n    static async jobProgress(jobName){\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})\n        const empty_res =  {currentJobIndex:0,totalJobs:1}\n        if(res.status===200){\n            const jsonObj = res.content[0]\n            if(!jsonObj){\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if(totalJobs===1){\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`,uuidv4(),{\"queryType\":\"robot\"})                                \n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex               \n            }\n            return {currentJobIndex,totalJobs}\n        }\n        return empty_res\n    }\n\n    static async resourceInfo(){\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`,uuidv4(),{\"queryType\":\"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks,totalCores}\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()\n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,                \n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Progress, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={loading:false,progress:0}        \n    }\n\n    enter = (params) => {\n        this.setState({loading:true})  \n        this.intervalTimer = setInterval(async () => {                        \n            const jobName = this.queryPanel.executor.jobName\n            const {currentJobIndex,totalJobs} =  await EngineService.jobProgress(jobName)            \n            this.setState({progress:(currentJobIndex/totalJobs)*100})\n        },1000)\n    }\n\n    exit = () => {        \n        if(this.intervalTimer){            \n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null \n            this.finalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n            this.setState({loading:false})          \n        }\n    }\n\n    render() {\n        if(!this.state.loading) {\n            if(this.finalTime){\n                return <Button type=\"primary\" style={{margin:\"0px 0px 20px 0px\"}}>\n                   Time Cost: {this.finalTime}\n                </Button>\n            }else {\n                return <div></div>\n            }\n        }\n        return <div>                    \n            <Button type=\"primary\" style={{marginRight:\"20px\"}}>\n            Time Cost:<Timer ref={(et)=> this.timer =et}>        \n                <Timer.Minutes formatValue={value => `${value} m. `} /> \n                <Timer.Seconds formatValue={value => `${value} s. `}/>         \n            </Timer></Button>\n            <Progress type=\"circle\" percent={this.state.progress} />\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map(item=>{\n                return <Select.Option value={item.name}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        this.taskProgressRef.current.enter({jobName: jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        this.taskProgressRef.current.exit()        \n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.engineName = engine\n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    cleanSQL = (sql)=> {\n       try{\n        return sql.split(\"\\n\").filter(line=> !line.includes(\"password\")).join(\"\\n\")\n       }catch(e){\n        return sql\n       }\n       \n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.cleanSQL(this.state.detailConsoleMessage)||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","import React from 'react'\nimport AceEditor from \"react-ace\";\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n\n            />\n        )\n    }\n}","import React from 'react'\nimport { Icon } from '@ant-design/compatible';\n\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false, executeUnit: props.executeUnit}\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.state.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.isExecute ? <span onClick={this.cancelExecute}><Icon type=\"sync\" spin/></span> :\n                    <span onClick={this.evtExecute}><Icon type=\"caret-right\"/></span>\n            }\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            return <DataTable data={this.state.displayData} ref={(et) => this.displayTableRef = et}></DataTable>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\n\n\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n\n    render() {\n        return <div>\n            <CodeBlock initialCode={this.props.initialCode} ref={et => {\n                this.codeBlock = et\n            }} executeUnit={this}/>\n            <CommandGroup ref={et => {\n                this.commandGroup = et\n            }} executeUnit={this}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NodeBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {executeUnits: this.executeUnits}\n        this.engine = new Engine(5 * 60 * 1000)\n    }\n\n    createNewExecuteUnit = (initialCode) => {\n        return <ExecuteUnit parent={this} initialCode={initialCode} ref={et => this.addRef(et)}/>\n    }\n\n    addRef = (instance) => {\n        if (instance) {\n            this.executeUnitRefs.push(instance)\n        }\n    }\n\n    nextExecuteUnit = () => {\n        const isLastEmpty = () => {\n            return this.executeUnitRefs.slice(-1)[0].codeBlockIsEmpty()\n        }\n        if (!isLastEmpty()) {\n            this.executeUnits.push(this.createNewExecuteUnit())\n            this.setState({executeUnits: this.executeUnits})\n        }\n        this.saveNoteBook()\n    }\n\n    saveNoteBook = () => {\n        const value = this.executeUnitRefs.map((instance) => {\n            return instance.getCodeStr()\n        }).join(CODE_SPLITTER)\n\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    text = (value, scriptId) => {\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value && value !== \"undefined\") {\n            this.executeUnitRefs = []\n            this.executeUnits = this.initialCode.split(CODE_SPLITTER).map((initialCode) => {\n                return this.createNewExecuteUnit(initialCode)\n            })\n            this.setState({executeUnits: this.executeUnits})\n        }\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.executeUnits\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NodeBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabName, callback) => {    \n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NodeBook parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static quote = (str)=>{\n        if(!str) return str\n        return `\"${Tools.escapeQuote(str)}\"`\n    }\n\n    static unQuote = (str) => {\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true\n        }\n    }\n\n    static keyPath(key,data,func){\n        let keyQuote = key\n        func(keyQuote)\n        if(typeof data === \"object\"){            \n            Object.keys(data).forEach(k=>{                 \n                Tools.keyPath(`${keyQuote}['${k}']`,data[k],func)\n            })            \n        }       \n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }\n\n    static distinct = (arrays, field) => {\n        if(!field){\n         return [...new Set(arrays)]\n        }\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"./actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()    \n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    convert = (item) => {                \n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id || node.key\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };               \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, { useRef, useCallback, useEffect } from 'react';\nimport { Tree, Modal, Menu, Form, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DownOutlined, FileOutlined, FolderOutlined, DeleteOutlined, FileAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames } from './actions/ScriptTreeReducer';\nimport { ActionProxy } from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport { useContextMenuCallback, useContextMenu } from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\n\nconst { DirectoryTree } = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const { consoleApp } = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const { loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return a.id - b.id\n            })\n\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const { id } = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu >\n                <Menu.Item icon={<FolderAddOutlined />} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu >\n                <Menu.Item onClick={() => {                    \n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu >\n            <Menu.Item icon={<FileAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined />} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n\n    return (\n        <ScriptTreeContext.Provider value={{ dispacher }}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: { operateModal: false }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n                <DirectoryTree height={700}\n                    onExpand={(expandedKeys) => {                        \n                        dispacher({\n                            type: ScriptTreeActionNames.expand,\n                            data: { expandedKeys }\n                        })\n                    }}\n                    autoExpandParent={true}\n                    expandedKeys={\n                        expandedKeys\n                    }\n                    onDoubleClick={(evt, node) => {\n                        dispacher({\n                            type: ScriptTreeActionNames.openScriptFile,\n                            data: { consoleApp, node }\n                        })\n                    }}\n                    expandAction=\"click\"\n                    onRightClick={popContextMenu}\n                    switcherIcon={<DownOutlined />}\n                    treeData={nodes}></DirectoryTree>}\n                    \n        </ScriptTreeContext.Provider>\n    )\n}\nexport { ScriptTree, ScriptTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport MLSQLAceEditor from './MLSQLAceEditor'\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport ExecuteUnit from \"./notebook/ExecuteUnit\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\n\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {sqlContent: \"\", displayEditor: \"normal\"}\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n\n        } else {\n            this.editorGroup.current.addFull(script.name, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          //AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree height={700} loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport EngineService from \"../../../service/EngineService\"\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n        const dbs = {}\n        res.content.forEach(item => {\n            if (!dbs[item.sessionId]) {\n                dbs[item.sessionId] = [item.tableName]\n            } else {\n                dbs[item.sessionId].push(item.tableName)\n            }\n        })\n        return {\n            data: {\n                dbs,...action.data\n            }\n        }\n    }\n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:OpenActionHandler,action:OpenAction} = ActionMaker.buildHandler(async (action)=>{\n    const {openTable,workshop} = action.data    \n    workshop.newSession(\"temp\",\"\",openTable)                     \n    return {        \n        data: {}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:DeleteActionHandler,action:DeleteAction} = ActionMaker.buildHandler(async (action)=>{\n    const {id} = action.data\n    const proxy = new ActionProxy()\n    await proxy.get(RemoteAction.ANALYSIS_TABLE_DELETE,{tableName:id})\n    return {        \n        data: {\n            reloading: Tools.getJobName()           \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: ExportToActionHandler, action: ExportToAction } = ActionMaker.buildHandler(async (action) => {\n    const { targetPath, workshop } = action.data\n    const { exportTable } = action.__state\n    const { name: openTable, type } = exportTable\n\n    const { sql, tableName } = await workshop.buildLoadSQL(\"temp\", \"\", openTable)\n\n    const runSql = (name) => {\n        proxy.runScript(`\n             ${sql}\n             save ignore ${tableName} as ${name}.\\`${targetPath}\\`;\n            `, Tools.getJobName(), { async: true })\n    }\n    const proxy = new ActionProxy()\n    switch (type) {\n        case \"hive\":\n            runSql(\"hive\")\n            break\n        case \"file\":\n            runSql(\"parquet\")\n            break\n        case \"delta\":\n            runSql(\"delta\")\n            break\n\n    }\n\n    return {\n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler, LoadAction } from './LoadAction'\nimport { OpenActionHandler, OpenAction } from './OpenAction'\nimport { DeleteActionHandler, DeleteAction } from './DeleteAction'\nimport { ExportToActionHandler, ExportToAction } from './ExportToAction'\nclass WorkshopTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static DELETE = \"delete\"\n    static EXPORT_TO = \"exportTo\"\n}\nconst WorkshopTablesHandlers = {\n    ...CommonHandlers,\n    [WorkshopTablesActionNames.LOAD]:LoadActionHandler,\n    [WorkshopTablesActionNames.OPEN]:OpenActionHandler,\n    [WorkshopTablesActionNames.DELETE]:DeleteActionHandler,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToActionHandler,\n\n}\nconst WorkshopTablesActions = {\n    ...CommonActions,\n    [WorkshopTablesActionNames.LOAD]:LoadAction,\n    [WorkshopTablesActionNames.OPEN]:OpenAction,\n    [WorkshopTablesActionNames.DELETE]:DeleteAction,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToAction,\n}\n\nfunction WorkshopTablesReducer(state, action) {\nreturn WorkshopTablesActions[action.type](state, action.data)    \n}\nexport { WorkshopTablesActionNames, WorkshopTablesReducer, WorkshopTablesHandlers }","import React, { useState, useRef, useEffect } from 'react';\nimport { Tree, Spin, Menu, Form, Modal, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WorkshopTablesReducer, WorkshopTablesHandlers, WorkshopTablesActionNames } from './actions/WorkshopTablesReducer';\nimport { TableOutlined, DeleteOutlined, CloudUploadOutlined, FolderOpenOutlined, ContainerOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nconst { TreeNode, DirectoryTree } = Tree;\nconst { SubMenu } = Menu;\n\nconst initState = {\n    dbs: {},\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n\n    exportTo: false,\n    exportTable: {\n        name: undefined,\n        type: undefined\n    }\n\n}\n\nconst WorkshopTablesContext = React.createContext()\n\nfunction WorkshopTables(props) {\n    const { workshop, reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(WorkshopTablesReducer, initState, WorkshopTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        exportTo, exportTable\n    } = state\n    const contextMenuRef = useRef()\n\n    const [exportForm] = Form.useForm()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.OPEN,\n                    data: {\n                        openTable: id,\n                        workshop\n                    }\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: false\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n\n            <SubMenu icon={<ContainerOutlined />} title=\"Export\">\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"hive\"\n                            },\n                            exportTo: true,\n                            workshop\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.1}>to Hive</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"delta\"\n                            },\n                            exportTo: true,\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.2}>to Delta</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"file\"\n                            },\n                            exportTo: true,\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.3}>to FileSystem</Menu.Item>\n            </SubMenu>\n\n            <Menu.Item onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.DELETE,\n                    data: {\n                        id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2} icon={<DeleteOutlined />}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: WorkshopTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n    return (\n        <WorkshopTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={`Export to ${exportTable.type}`}\n                visible={exportTo}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTo: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    const { targetPath } = exportForm.getFieldsValue()\n                    exportForm.resetFields()\n                    dispacher({\n                        type: WorkshopTablesActionNames.EXPORT_TO,\n                        data: { exportTo: false, targetPath, workshop }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <Form form={exportForm}>\n                    <Form.Item rules={[\n                        {\n                            required: true,\n                            message: 'Target is required.',\n                        },\n                    ]}\n                        label=\"Target\"\n                        name=\"targetPath\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Modal\n                title={`Open Table`}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: \"dispatch\",\n                        data: { openTable }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                {`Open ${openTable}?`}\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <DirectoryTree height={700} onDoubleClick={(evt, node) => {\n                    dispacher({\n                        type: WorkshopTablesActionNames.OPEN,\n                        data: {\n                            openTable: node.id,\n                            workshop\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }} onRightClick={popContextMenu}>\n                    {\n                        Object.entries(dbs).flatMap(([key, value]) => {\n                            return value.map(item => {\n                                return <TreeNode icon={<TableOutlined />} id={item} table={item} db={key} title={item} key={item} isLeaf />\n                            })\n                        })\n                    }\n                </DirectoryTree>\n            </Spin>\n        </WorkshopTablesContext.Provider>\n    )\n}\nexport { WorkshopTables, WorkshopTablesContext }","import * as React from \"react\";\nimport ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\nimport { TableOutlined } from '@ant-design/icons'\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const {dbName,node} = action.data\n    const proxy = new ActionProxy()\n    if(!dbName){        \n        let res = await proxy.runScript(`!profiler sql \"show databases\";`,Tools.getJobName(),Tools.robotFetchParam())                      \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"databaseName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"databaseName\":\"adl\"}]}}\n        if (res.status === 200) {        \n            const dbs  = res.content.data.map(item=>{                \n                item[\"key\"] = item.databaseName || item.namespace\n                item[\"title\"] = item.key\n                item[\"isLeaf\"] = false\n                item[\"children\"] = []\n                return item\n            })\n            return {\n                data: {\n                    dbs,...action.data\n                }\n            }\n        }\n    }\n\n    if(dbName){\n        await proxy.runScript(`!profiler sql \"use ${dbName}\";`,Tools.getJobName(),Tools.robotFetchParam())    \n        let res = await proxy.runScript(`!profiler sql \"show tables\";`,Tools.getJobName(),Tools.robotFetchParam())                             \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"database\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"tableName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"isTemporary\",\"type\":\"boolean\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"database\":\"adl\",\"tableName\":\"after_sale_df\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_awake_di\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_daily_active_user_com_di\",\"isTemporary\":false}]}}\n        if (res.status === 200) {        \n            const tables  = res.content.data.filter(item=>{\n                const db = item.database || item.namespace\n                return db === dbName\n            }).map(item=>{\n                item[\"key\"] = `${dbName}.${item.tableName}`\n                item[\"title\"] = item.tableName\n                item[\"isLeaf\"] = true\n                item[\"icon\"]=<TableOutlined />\n                return item\n            }) \n            const {dbs} = action.__state\n            const newdbs = dbs.map(db => {\n                if(db.key===dbName){\n                    db.children = tables\n                }\n                return db\n            });            \n            return {\n                data: {...action.data,dbs:newdbs}\n            }\n        }\n    }\n    \n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: OpenActionHandler, action: OpenAction } = ActionMaker.buildHandler(async (action) => {\n    const { openTable, workshop, partitionValues,partitionColumn} = action.data\n    const [db, table] = openTable.split(\".\")\n\n    const { tableRandom, tableStart, tableEnd } = partitionValues\n    const partitionColumnName = partitionColumn && Tools.getField(partitionColumn)\n    if (partitionColumn && tableRandom) {\n        const inStr = partitionColumnName +\" in (\" + tableRandom.map(item=>`\"${Tools.escapeQuote(item)}\"`).join(\",\") + \")\"\n        workshop.newSession(\"hive\", db, table,{__where__: inStr})\n    }\n    else if (partitionColumn && tableStart && tableEnd) {\n        const con = `${partitionColumnName} >= ${Tools.quote(tableStart)} and ${Tools.quote(tableEnd)} >= ${partitionColumnName}  `\n        workshop.newSession(\"hive\", db, table,{__where__: con})\n    }else {\n        workshop.newSession(\"hive\", db, table) \n    }\n    return {\n        data: {}\n    }\n})","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport Tools from '../../../../common/Tools';\n\nconst loop = (data, searchValue) =>\n    data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n            index > -1 ? (\n                <span>\n                    {beforeStr}\n                    <span className=\"site-tree-search-value\">{searchValue}</span>\n                    {afterStr}\n                </span>\n            ) : (\n                    <span>{item.title}</span>\n                );\n\n        if (item.children) {\n            return { ...item, title, children: loop(item.children, searchValue) }\n        }\n\n        return { ...item, title }\n    });\n\nexport const { handler: SearchActionHandler, action: SearchAction } = ActionMaker.buildHandler(async (action) => {\n    const { dbs } = action.__state\n    const { searchValue } = action.data\n    if (!searchValue) {\n        return {\n            data: {\n                expandedKeys: [], search_dbs: dbs\n            }\n        }\n    }\n\n    let showKeys = []\n    let expandedKeys = dbs\n        .flatMap(item => {            \n            const wow = item.children?.map(sub => {\n                if (sub.title.indexOf(searchValue) > -1) {\n                    return item.key\n                }\n                return null\n            }).filter(item => item) || []\n\n            if(item.title.indexOf(searchValue) > -1){                  \n                showKeys.push(item.key)\n            }\n            return wow\n        })\n   \n    expandedKeys = Tools.distinct(expandedKeys)    \n    const search_dbs = loop(dbs, searchValue).filter(item => {\n        return expandedKeys.includes(item.key) || showKeys.includes(item.key)\n    })\n    return {\n        data: {\n            expandedKeys, search_dbs\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler,LoadAction } from './LoadAction'\nimport { OpenAction, OpenActionHandler } from './OpenAction'\nimport { SearchAction, SearchActionHandler } from './SearchAction'\nclass HiveTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static SEARCH = \"search\"\n}\nconst HiveTablesHandlers = {\n    ...CommonHandlers,\n    [HiveTablesActionNames.LOAD]:LoadActionHandler,\n    [HiveTablesActionNames.OPEN]: OpenActionHandler,\n    [HiveTablesActionNames.SEARCH]: SearchActionHandler\n}\nconst HiveTablesActions = {\n    ...CommonActions,\n    [HiveTablesActionNames.LOAD]:LoadAction,\n    [HiveTablesActionNames.OPEN]: OpenAction,\n    [HiveTablesActionNames.SEARCH]: SearchAction\n}\n\nfunction HiveTablesReducer(state, action) {\nreturn HiveTablesActions[action.type](state, action.data)    \n}\nexport { HiveTablesActionNames, HiveTablesReducer, HiveTablesHandlers }","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Tree, Spin, Menu, Input, Modal } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { HiveTablesReducer, HiveTablesHandlers, HiveTablesActionNames } from './actions/HiveTablesReducer';\nimport { TableOutlined, DeleteOutlined, FolderOpenOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nimport AnalysisWorkshop from '../workshop';\nimport { FormattedMessage } from 'react-intl';\nimport { usePartitionSelect } from './pages/usePartitionSelect';\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst initState = {\n    dbs: [],\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n    expandedKeys: []\n}\n\nconst HiveTablesContext = React.createContext()\n\nfunction HiveTables(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const { reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(HiveTablesReducer, initState, HiveTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        search_dbs, expandedKeys\n    } = state\n\n    const { ui: PartitionSelect,\n        form: partitionForm,\n        setOpenTable: setOpenTableForPartition,\n        setError: setPartitionError,\n        partitionColumn,noPartition\n    } = usePartitionSelect()\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n        console.log(id)\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: HiveTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n\n    useEffect(() => {\n        setOpenTableForPartition(openTable)\n    }, [setOpenTableForPartition, openTable])\n\n    return (\n        <HiveTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={<FormattedMessage id=\"analysis_range\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    if (!noPartition && !partitionValues.tableRandom && !(partitionValues.tableStart && partitionValues.tableEnd)) {\n                        setPartitionError(\"Partitions is required.\")\n                        return\n                    }\n                    dispacher({\n                        type: HiveTablesActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionColumn\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionSelect />\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <Input style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={\n                    (e) => {\n                        dispacher({\n                            type: HiveTablesActionNames.SEARCH,\n                            data: { searchValue: e.target.value }\n                        })\n                    }\n                } />\n                <DirectoryTree height={700}\n                    expandedKeys={expandedKeys}\n                    treeData={search_dbs || dbs}\n                    loadData={\n                        async (node) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { loading: true }\n                            })\n                            dispacher({\n                                type: HiveTablesActionNames.LOAD,\n                                data: { dbName: node.key, node, loading: false }\n                            })\n                        }\n                    } expandAction=\"click\" onExpand={(expandedKeys) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { expandedKeys }\n                        })\n                    }} onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>\n        </HiveTablesContext.Provider>\n    )\n}\nexport { HiveTables, HiveTablesContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport Tools from '../../../../common/Tools';\n\nfunction usePartitionSelect() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [partitionColumn, setPartitionColumn] = useState(undefined)\n    const [noPartition, setNoPartition] = useState(false)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    useEffect(() => {\n        const fetch = async () => {\n            if (!openTable) return\n            const [db, table] = openTable.split(\".\")\n            setLoading(true)\n            \n            const res = await proxy.runScript(`!profiler sql 'show partitions ${db}.${table}';`,\n              Tools.getJobName(),Tools.robotFetchParam()\n            )\n            if (res.status === 200) {\n                const data = res.content.data.map(item => {\n                    //dt=2020-08-03/hour=12                    \n                    const [column, value] = item.partition.split(\"/\")[0].split(\"=\")\n                    if (!partitionColumn) {\n                        setPartitionColumn(column)\n                    }\n                    return { column, value }\n                })\n                setData(data)\n                setNoPartition(false)\n                if (data.length === 0) {\n                    setNoPartition(true)\n                }\n                // if (false) {\n                //     setData([{ column: \"hp_stat_date\", value: \"2017-01-02\" }])\n                //     setPartitionColumn(\"hp_stat_date\")\n                //     setNoPartition(false)\n                // }\n\n            }else {\n                setData([])\n                setNoPartition(true)                \n            }\n            setLoading(false)\n        }\n        fetch()\n    }, [openTable])\n\n    const options = data.reverse().map(item => {\n        return <Select.Option value={item.value}>{item.value}</Select.Option>\n    })\n    const ui = () => {\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                {\n                    noPartition && <FormattedMessage id=\"no_partition_msg\" />\n                }\n                {\n                    !noPartition && <Form form={form}>\n                        <Form.Item name=\"tableStart\" label={<FormattedMessage id=\"table_start\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"tableEnd\" label={<FormattedMessage id=\"table_end\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n\n                        <Divider />\n                        <Form.Item name=\"tableRandom\" label={<FormattedMessage id=\"table_random\" />}>\n                            <Select mode=\"tags\">\n                                {options}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                }\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError, partitionColumn, noPartition }\n}\nexport { usePartitionSelect }","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:OpenMySQLTableActionHandler,action:OpenMySQLTableAction} = ActionMaker.buildHandler(async (action)=>{\n    const {partitionValues,openTable,partitionNumValue,workshop} = action.data\n    const [db,table] = openTable.split(\".\")\n    const {partitionColumn,lowerBound,upperBound} = partitionValues\n    const proxy = new ActionProxy()\n    \n    const connectRes = await proxy.get(RemoteAction.DS_MYSQL_CONNECT,{name:db}) \n    const tempTable = Tools.getTempTableName()\n    let whereBlock = \"\"\n    if(partitionColumn){         \n        whereBlock = `where partitionColumn=\"${partitionColumn}\" \n        and lowerBound=\"${lowerBound}\" \n        and upperBound=\"${upperBound}\"\n        and numPartitions=\"${partitionNumValue}\"\n        `\n    }\n\n    const sql = `\n      ${connectRes.content.connect}\n      load jdbc.\\`${openTable}\\` ${whereBlock} as ${tempTable};    \n    `\n    workshop.newSession(\"jdbc\", db, table,{__sql__: sql,__tableName__:tempTable})               \n\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { OpenMySQLTableActionHandler, OpenMySQLTableAction } from './OpenMySQLTableAction'\nclass MysqlTreeActionNames {\n    static OPEN = \"open\"\n}\nconst MysqlTreeHandlers = {\n    ...CommonHandlers,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableActionHandler\n}\nconst MysqlTreeActions = {\n    ...CommonActions,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableAction\n}\n\nfunction MysqlTreeReducer(state, action) {\nreturn MysqlTreeActions[action.type](state, action.data)    \n}\nexport { MysqlTreeActionNames, MysqlTreeReducer, MysqlTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\n\n\nfunction useIntegerStep(props) {\n    const [value,setValue] = useState(props.initialValue || 10)\n    const ui =  ()=>(\n        <Row>\n        <Col span={12}>\n          <Slider\n            min={props.min||10}\n            max={props.max||300}\n            onChange={(value)=>{setValue(value)}}\n            value={value}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={props.min||10}\n            max={props.max||300}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(value)=>{setValue(value)}}\n          />\n        </Col>\n      </Row> \n    )\n    return {ui,value}\n}\nexport {useIntegerStep}","import React, {  useRef, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { MysqlTreeReducer, MysqlTreeHandlers, MysqlTreeActionNames } from '../actions/MysqlTreeReducer';\nimport { useContextMenu } from '../../../script_console/pages/ContextMenu';\nimport { Menu,Spin,Tree,Modal } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport { FolderOpenOutlined, TableOutlined } from '@ant-design/icons';\nimport { useMySQLPartition } from './useMySQLPartition';\nimport AnalysisWorkshop from '../../workshop';\nimport { FormattedMessage } from 'react-intl';\n\nconst {DirectoryTree} = Tree\nconst initState = {\n    dbs: [],    \n    loading:false,\n    confirm:false,\n    openTable: undefined,\n    error: undefined     \n}\n\nconst MysqlTreeContext = React.createContext()\n\nfunction MysqlTree() {\n    const workshop = AnalysisWorkshop.workshop\n    const [state, dispacher] = useReducerAsync(MysqlTreeReducer, initState, MysqlTreeHandlers)\n    const {dbs,loading,confirm,openTable,error} = state\n\n    const {ui:PartitionUI,form:partitionForm,setOpenTable,setError:setPartitionError,partitionNumValue} = useMySQLPartition()\n\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem        \n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        const fetch = async () => {\n            dispacher({\n                type: \"setState\",\n                data: { loading: true }\n            })\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n            if (res.status === 200) {\n                const treeData = res.content.data.map(item=>{\n                    item.key = item.name\n                    item.title = item.name\n                    item.isLeaf = false\n                    item.children = item.tables.map(table=>{\n                        return {\n                            id: `${item.name}.${table}`,\n                            key: `${item.name}.${table}`,\n                            title: table,\n                            isLeaf: true,\n                            icon: <TableOutlined/>\n                        }\n                    })\n                    return item\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: { dbs: treeData}\n                })                \n            }\n\n            dispacher({ \n                type: \"setState\",               \n                data: { loading:false}\n            }) \n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{\n        setOpenTable(openTable)\n    },[openTable,setOpenTable])\n   \n\n    return (\n        <div className=\"leftview-box\">\n        <MysqlTreeContext.Provider value={{ dispacher }}> \n        <Modal\n                title={<FormattedMessage id=\"mysql_parallel\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    const {partitionColumn,lowerBound,upperBound} = partitionValues\n                    if(partitionColumn){\n                        if(!lowerBound || !upperBound && partitionNumValue){\n                            setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                            return\n                        }\n                    }\n                    \n                    dispacher({\n                        type: MysqlTreeActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionNumValue                            \n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionUI />\n            </Modal>           \n           <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}                \n                <DirectoryTree height={700}                   \n                    treeData={dbs}\n                    expandAction=\"click\" \n                    onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }                        \n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>  \n        </MysqlTreeContext.Provider>\n        </div>\n    )\n}\nexport { MysqlTree, MysqlTreeContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert, Input } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport { useIntegerStep } from '../../common/pages/useIntegerStep';\nimport Tools from '../../../../common/Tools';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\nfunction useMySQLPartition() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [column, setColumn] = useState(undefined)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    const { ui: partitionNumUI, value: partitionNumValue } = useIntegerStep({\n        initialValue: 10,\n        min: 2,\n        max: 100\n    })\n\n    useEffect(() => {\n        if (openTable) {\n            const [db, table] = openTable.split(\".\")\n            const tempTable = Tools.getTempTableName()\n            const fetch = async () => {                 \n                const res = await proxy.runScript(`                \n                load jdbc.\\`${openTable}\\` as ${tempTable};\n                !desc ${tempTable};\n               `, Tools.getJobName(), {...Tools.robotFetchParam(),__connect__:db})\n               if(res.status===200){\n                  setData(res.content.data)\n               }else {\n                   setData([])\n               }\n            }\n            fetch()\n        }\n    }, [openTable])\n\n   useEffect(()=>{\n       if(column){\n         const fetch = async ()=>{\n             const [db, table] = openTable.split(\".\")\n\n             const res = await proxy.get(RemoteAction.DS_MYSQL_COLUMN_INFO,{\n                dbName:db,tableName:table, columnName:column\n             }) \n             if(res.status === 200){                 \n                 form.setFieldsValue({\n                    lowerBound: res.content.min,\n                    upperBound: res.content.max\n                 })\n             } \n         }\n         fetch()\n       }\n   },[column,openTable])\n\n    //\n    const options = data.filter(item=>item.data_type !== \"string\").map(item => {\n        return <Select.Option value={item.col_name}>{item.col_name}</Select.Option>\n    })\n    const ui = () => {\n        if(options.length === 0){\n            return <><FormattedMessage id=\"no_mysql_parallel\"/></>\n        }\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                <Form form={form}>\n                    <Form.Item name=\"partitionColumn\" label={<FormattedMessage id=\"partitionColumn\" />}>\n                        <Select onChange = {(value)=>{                            \n                            setColumn(value) \n                        }}>\n                            {options}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lowerBound\" label={<FormattedMessage id=\"lowerBound\" />}>\n                        <Input />\n                    </Form.Item>\n\n                    <Divider />\n                    <Form.Item name=\"upperBound\" label={<FormattedMessage id=\"upperBound\" />}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"numPartitions\" label={<FormattedMessage id=\"numPartitions\" />}>\n                        {partitionNumUI()}\n                    </Form.Item>\n                </Form>\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError,partitionNumValue }\n}\nexport { useMySQLPartition }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport \"./leftview.scss\"\nimport { FormattedMessage } from 'react-intl'\nimport { WorkshopTables } from \"./workshop_tables/WorkshopTables\";\nimport { HiveTables } from \"./hive/HiveTables\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../backend_service/RemoteAction\";\nimport { MysqlTree } from \"./datasource/pages/MysqlTree\";\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = {\n            reloaWorkshop: undefined\n        }\n    }\n\n    render() {\n        return <Tabs defaultActiveKey=\"1\" onTabClick={(key) => {\n            if (key === \"3\") {\n                if (this.deltaLakeTreeRef) {\n                    this.deltaLakeTreeRef.reload()\n                }\n            }\n            if (key === \"4\") {\n                if (this.fileSystemTreeRef) {\n                    this.fileSystemTreeRef.reload()\n                }\n            }\n        }}>\n            <TabPane tab={<FormattedMessage id=\"table_workshop\" />} key=\"1\">\n                <div className=\"leftview-box\" >\n                    <WorkshopTables reload={this.state.reloaWorkshop} workshop={this.workshop}></WorkshopTables>\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"hive\" />} key=\"2\">\n                <div className=\"leftview-box\" >\n                    <HiveTables />\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"delta_lake\" />} key=\"3\">\n                <div className=\"leftview-box\" >\n                    <ADeltaLakeTree ref={(et) => this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"file_system\" />} key=\"4\">\n                <div className=\"leftview-box\">\n                    <AFileSystemTree ref={(et) => this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"mysql\" />} key=\"5\">\n                <MysqlTree />\n            </TabPane>\n        </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n\n    buildLoadSQL = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let whereBlock = \"where \"\n        if (options) {\n            whereBlock = whereBlock + Object.keys(options).\n                filter(k => \n                    k !== \"__where__\" \n                    && k !== \"__sql__\"\n                    && k !== \"__tableName__\"\n                    ).\n                map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            if (whereBlock === \"where \") {\n                whereBlock = \"\"\n            }\n        } else whereBlock = \"\"\n\n        // let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        let sql = `load ${prefix}.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n        }\n\n        if(prefix === \"jdbc\"){\n            sql = options.__sql__ || `load jdbc.\\`${db}.${table}\\` ${whereBlock} as ${tableName};` \n            tableName = options.__tableName__ || tableName\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 200) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${Tools.getField(tableInfo.tableName)};\n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        if (prefix === \"hive\") {\n            let _whereBlock = \"where \"\n            if (options && options.__where__) {\n                _whereBlock = _whereBlock + options.__where__\n            } else _whereBlock = \"\"\n\n            const tempTableName = Tools.getTempTableName()\n            sql = `load hive.\\`${db}.${table}\\` ${whereBlock} as ${tempTableName};`\n            sql = sql + `select * from ${tempTableName} ${_whereBlock} as ${tableName};`\n        }\n\n        return { sql, tableName }\n    }\n    showTable = async (prefix, db, table, options) => {\n\n        //an new session,clear the sqls\n        this.sqls = []\n\n        const { tableName, sql } = await this.buildLoadSQL(prefix, db, table, options)\n\n        this.sqls.push({ tableName, sql })\n        this.setState({ loadingTable: true })\n\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({ loadingTable: false })\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId: this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data, schema)\n    }\n\n}","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params) => {\n      if (this.sqls.length < 2) {\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      const res = await this.client.get(RemoteAction.APPLY_GET, { name: currentTable.tableName })\n      if (res.status === 200) {\n         const { data, schema } = JSON.parse(res.content.response)\n         await this.apply({ ...currentTable, _data: data, _schema: schema })\n      }\n      else {\n         await this.apply(currentTable)\n      }\n\n   }\n\n   runSQLAtCurrentTable = async (sql,params) => {      \n      const view = this.sqls.map(item => item.sql).join(\"\")\n      const res = await this.client.runScript(\n         `${view}\n          ${sql}`,\n         Tools.getJobName(),\n         { ...Tools.robotFetchParam(), ...params })\n      return res\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql, _data, _schema } = params\n      this.sqls.push({tableName,sql})\n\n      if (_data && _schema) {\n         this.setCurrentTable(\"\", \"\", tableName, _schema, _data)\n         return 200\n      }\n\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try {\n         const res = await this.client.runScript(view, Tools.getJobName(), {\n            ...Tools.robotFetchParam(),\n            queryType: \"analysis_workshop_apply_action\",\n            analysis_workshop_table_name: tableName,\n            analysis_workshop_sql: JSON.stringify(this.sqls)\n         })\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      } catch (e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }\n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${Tools.getField(this.getLastApplyTable().tableName)} as ${Tools.getField(tableName)};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n\n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <div style={{marginBottom:\"30px\"}}>\n      <Transfer\n    listStyle={{\n      width: 400,\n      height: 300,\n    }}\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n    </div>\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table \n                    pagination={{pageSize:6}}   \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch key={record.field} defaultChecked={record._groupBy} onChange={(checked)=>{\n                        this.enableGroupByField(checked,record)\n                        record._groupBy = checked\n                    }} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <>\n                    <Button key={record.field} style={{marginRight:\"30px\"}} dataref={record} onClick={() => {                         \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button><span>{record._agg && `(${record._agg})`||\"\"}</span></>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{ \n      this.applyFuncToFieldRef.operateField = this.operateField       \n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()              \n      const record = this.columnsRef.state.data.filter(item=>item.field === field)[0]\n      record._agg = `${transformCode} as ${columnName}`\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}>\n          <Input placeholder={\"input the new name here\"} />\n          </Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button key={record.field} dataref={record} onClick={() => { \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        this.applyFuncToFieldRef.operateField = this.operateField\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../common/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../common/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\nimport { SetStateActionHandler, SetStateAction } from '../../analysis/common/actions/SetStateAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\nimport AnalysisWorkshop from '../analysis/workshop.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop || AnalysisWorkshop.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","class CommonActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n    static APPLY = \"apply\"\n    static setState = \"setState\"\n}\n\nexport {CommonActionNames} \n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nfunction AddJsonField(props) {\n    const [form] = Form.useForm() \n    const {context,keyPaths} = props\n    const {dispacher} = useContext(context)\n    useEffect(()=>{\n        props.forms.push(form)\n    },[])\n    return (\n        <Form layout=\"inline\" form={form} style={{marginBottom:\"30px\"}}>                                \n        <Form.Item >\n            <Button danger icon={<MinusOutlined />} onClick={() => {\n                dispacher({\n                    type: CommonActionNames.REMOVE_FIELD,\n                    data: {form}\n                })\n            }}></Button>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"add\"/>} name={\"path\"} style={{ width: \"300px\" }}>\n            <Select>\n                {keyPaths.map(item => <Option key={item}>{item}</Option>)}\n            </Select>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"as\"/>} name={\"column\"} style={{ width: \"100px\" }}>\n            <Input />\n        </Form.Item>                        \n</Form>\n    )\n}\nexport {AddJsonField}","import React, { useState, useCallback, useEffect } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport { AddJsonField } from \"../AddJsonField\"\nimport { JsonFieldsContext } from \"../JsonFields\"\nimport Tools from '../../../../common/Tools';\n\nexport const {handler:AddFieldActionHandler,action:AddFieldAction} = ActionMaker.buildHandler(async (action)=>{\n    const {subFields,keyPaths,forms} = action.__state\n    subFields.push(<AddJsonField key={Tools.getJobName()} context={JsonFieldsContext} keyPaths={keyPaths} forms={forms} />)    \n    return {        \n        data: {\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const { form } = action.data\n    const { forms, subFields } = action.__state\n    const targetIndex= forms.indexOf(form)    \n    forms.splice(targetIndex,1)    \n    subFields.splice(targetIndex,1)\n    return {\n        data: {\n            forms,\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\n\nexport const {handler:JsonFieldsApplyActionHandler,action:JsonFieldsApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            const {formValues,operateFiled} = values\n            if (!operateFiled || formValues.length === 0) {\n                return \"Please configure fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n\n            const {formValues,operateFiled} = values\n            const jsonStr = formValues.map(item=>{\n                return `get_json_object(${Tools.getField(operateFiled)},\"${item.path}\") as ${Tools.getField(item.column)}`\n            }).join(\",\")            \n\n            const sql = `select *,${jsonStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { CommonActionNames } from '../../common/CommonActionNames'\nimport { AddFieldAction,AddFieldActionHandler } from './AddFieldAction'\nimport { RemoveFieldAction,RemoveFieldActionHandler } from './RemoveFieldAction'\nimport { JsonFieldsApplyActionHandler, JsonFieldsApplyAction } from './JsonFieldsApplyAction'\n\nclass JsonFieldsActionNames {\n    \n}\n\nconst JsonFieldsHandlers = {\n    ...CommonHandlers,\n    [CommonActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    [CommonActionNames.APPLY]: JsonFieldsApplyActionHandler,\n}\nconst JsonFieldsActions = {\n    ...CommonActions,\n    [CommonActionNames.ADD_FIELD]: AddFieldAction,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    [CommonActionNames.APPLY]: JsonFieldsApplyAction,\n}\n\nfunction JsonFieldsReducer(state, action) {\nreturn JsonFieldsActions[action.type](state, action.data)    \n}\nexport { JsonFieldsActionNames, JsonFieldsReducer, JsonFieldsHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch, Card } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nimport AnalysisWorkshop from '../workshop';\nimport { JsonFieldsReducer, JsonFieldsHandlers } from './actions/JsonFieldsReducer';\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport Tools from '../../../common/Tools';\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFiled: undefined,\n    keyPaths: [],\n    forms: [],\n    subFields: []\n}\n\nconst JsonFieldsContext = React.createContext()\n\nfunction JsonFields(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const data = workshop.currentTable.data.slice(0, 10)\n\n    const [state, dispacher] = useReducerAsync(JsonFieldsReducer, initState, JsonFieldsHandlers)\n    const { operateFiled,\n        keyPaths,\n        error,\n        applySaveRollbackDispacher,\n        forms,\n        subFields\n    } = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(() => {\n        if (operateFiled) {            \n            dispacher({\n                type: CommonActionNames.setState,\n                data:{\n                    subFields:[],\n                    forms: []\n                }\n            })    \n\n            const temp = new Set()            \n            const tempObjs = data.map(item => {\n                try{\n                    return JSON.parse(item[operateFiled])\n                }catch(e){\n                    return undefined\n                }\n            }).filter(item=>  item !== undefined && \n                (typeof(item) === \"object\" || typeof(item) === \"array\"))\n\n            console.log(tempObjs)\n\n            tempObjs.forEach(obj => {\n                Tools.keyPath(\"$\", obj, (key) => {\n                    temp.add(key)\n                })\n            })\n\n            dispacher({\n                type: CommonActionNames.setState,\n                data: { keyPaths: [...temp] }\n            })\n        }\n    }, [operateFiled])\n\n    useEffect(() => {\n        if (applySaveRollbackDispacher) {\n            form.submit()\n        }\n    }, [applySaveRollbackDispacher])\n\n    const apply = useCallback(({workshop,values,forms})=>{\n         console.log(values)\n         console.log(forms.map(item=>{\n             return item.getFieldsValue()\n         })) \n         applySaveRollbackDispacher.dispacher({\n             type:\"setState\",\n             data:{loading:false}\n         })\n    },[applySaveRollbackDispacher])\n\n    return (\n        <JsonFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"600px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    const formValues = forms.map(item=>item.getFieldsValue())\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values: {formValues,operateFiled}\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={JsonFieldsContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item label={<FormattedMessage id=\"choose_json_field\"/>} style={{ width: \"300px\" }}>\n                        <Select\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CommonActionNames.setState,\n                                    data: { operateFiled: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n                </Form>\n                {\n                    operateFiled && <Card title={<Button icon={<PlusOutlined />} onClick={() => {\n                        dispacher({\n                            type: CommonActionNames.ADD_FIELD,\n                            data: {}\n                        })\n                    }}></Button>}>\n                        {\n                            subFields\n                        }\n                    </Card>\n                }\n\n\n\n            </div>\n        </JsonFieldsContext.Provider>\n    )\n}\nexport { JsonFields, JsonFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\nimport {FormattedMessage} from 'react-intl'\nimport { JsonFields } from \"./JsonFields\";\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return  <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab={<FormattedMessage id=\"select_columns\"/>} key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"rename_columns\"/>} key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"transform_columns\"/>} key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"cast_columns_type\"/>} key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"json_fields\"/>} key=\"5\"> \n                       <JsonFields/>                                         \n                    </TabPane>\n                </Tabs>\n            </div>                \n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Input, Form } from 'antd';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport Tools from '../../../common/Tools';\n\nconst ExpressionConst = {\n    EQUAL: \"=\",\n    NON_EQUAL: \"!=\",\n    IN: \"in\",\n    CONTAINS: \"contains\",\n    STARTS_WITH: \"startsWith\",\n    ENDS_WITH: \"endsWith\",\n    LIKE: \"like\",\n    IS_NULL: \"is null\",\n    IS_NOT_NULL: \"is not null\",\n    IS_EMPTY: \"is empty\",\n    IS_NOT_EMPTY: \"is not empty\",\n\n}\n\nconst buildExpression = (item) => {\n    const { field, dataType, compare, condition } = item\n    if (compare === ExpressionConst.IN) {\n\n        let conTemp = \"\"\n\n        switch (dataType) {\n            case \"integer\": case \"long\": case \"float\": case \"double\":\n                conTemp = condition.map(cond => {\n                    return cond\n                }).join(\",\")\n                break\n            default:\n                conTemp = condition.map(cond => {\n                    return `\"${Tools.escapeQuote(cond)}\"`\n                }).join(\",\")\n        }\n        const con = `(${conTemp})`\n        return `${Tools.getField(field)} ${compare} ${con}`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_NULL || compare === ExpressionConst.IS_NULL) {\n        return `${Tools.getField(field)} ${compare}`\n    }\n\n    if (compare === ExpressionConst.IS_EMPTY) {\n        return `${Tools.getField(field)} = \"\"`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_EMPT) {\n        return `${Tools.getField(field)} != \"\"`\n    }\n\n    if (compare === ExpressionConst.LIKE) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}\"`\n    }\n\n    if (compare === ExpressionConst.STARTS_WITH) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}%\"`\n    }\n\n    if (compare === ExpressionConst.ENDS_WITH) {\n        return `${Tools.getField(field)} like \"%${Tools.escapeQuote(condition)}\"`\n    }\n\n    let con = \"\"\n    switch (dataType) {\n        case \"string\":\n            con = `\"${Tools.escapeQuote(condition)}\"`\n            break\n        default: con = condition;\n    }\n    return `${Tools.getField(field)} ${compare} ${con}`\n}\nfunction FilterCondition(props) {\n    const { record, workshop } = props\n    const [compare, setCompare] = useState(undefined)\n    const { dataType, field } = record\n    const [inCandidate, setInCandidate] = useState([])\n    const [inCandidateLoading, setInCandidateLoading] = useState(false)\n    const [form] = Form.useForm()\n    props.forms[field] = form\n\n    const fetch = async () => {\n        if (inCandidate.length === 0 && compare === \"in\") {\n            setInCandidateLoading(true)\n            \n            const res =  await workshop.runSQLAtCurrentTable(`select distinct(${Tools.getField(field)}) as name \n            from ${workshop.getLastApplyTable().tableName} \n            as ${Tools.getTempTableName()};`,{outputSize: 5000, timeout: 10000 })\n            \n            if (res.status === 200) {\n                setInCandidate(res.content.data)\n            }\n            setInCandidateLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [compare])\n\n    const condition = () => {\n        switch (compare) {\n            case ExpressionConst.IS_NULL:\n                return <></>\n            case ExpressionConst.IS_NOT_NULL:\n                return <></>\n            case ExpressionConst.IN:\n                return <Select loading={inCandidateLoading} mode=\"tags\" style={{ width: '100px' }}>\n                    {inCandidate.map(item => {\n                        return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n                    })}\n                </Select>\n\n            case ExpressionConst.LIKE:\n                return <><Input style={{ width: '100px' }} /><span>LIKE 'a%o' means Finds any values that start with 'a' and ends with 'o' </span></>\n\n            default:\n                return <Input style={{ width: '100px' }} />\n        }\n    }\n\n    const ui = () => {\n        return <Form form={form} layout={\"inline\"}>\n            <Form.Item name=\"compare\" initialValue={record.compare}>\n                <Select initialValue={\"=\"}\n                    onChange={(value) => {\n                        setCompare(value)\n                        record.compare = value\n                    }}\n                    placeholder=\"compare\" style={{width:\"100px\"}}>\n                    <Select.Option value=\"=\">=</Select.Option>\n                    <Select.Option value=\"<\">{'<'}</Select.Option>\n                    <Select.Option value=\">\">{'>'}</Select.Option>\n                    <Select.Option value=\">=\">{'>='}</Select.Option>\n                    <Select.Option value=\"<=\">{'<='}</Select.Option>\n                    <Select.Option value=\"!=\">{'!='}</Select.Option>\n                    <Select.Option value={ExpressionConst.LIKE}>{'like'}</Select.Option>\n                    <Select.Option value={ExpressionConst.STARTS_WITH}>{'startsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.ENDS_WITH}>{'endsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IN}>{'in'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NULL}>{'is null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_NULL}>{'is not null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_EMPTY}>{'is empty'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_EMPTY}>{'is not empty'}</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"condition\" initialValue={record.condition} onChange={(value)=>{\n                if(typeof value !== \"string\"){\n                    record.condition = value.target.value\n                }else record.condition = value\n                \n            }}>\n                {condition()}\n            </Form.Item>\n        </Form>\n    }\n    return ui()\n}\nexport { FilterCondition, ExpressionConst, buildExpression }","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider, Collapse } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport { FilterCondition } from \"./FilterCondition\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.forms = {}\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <FilterCondition forms={this.forms} record={record} workshop ={this.workshop}/>\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    buildSelectedRows = ()=>{\n        const fieldToDataType = {}\n        this.state.data.forEach(item=>{\n            fieldToDataType[item.field] = item.dataType\n        })\n\n        const params = Object.entries(this.forms).map(([key,value])=>{\n            const {compare,condition} = value.getFieldsValue()\n            if(compare){\n                return {field:key,compare,condition,dataType:fieldToDataType[key]}\n            }\n            return {}\n        })\n        if(!this.selectedRowKeys) {\n            return []\n        }\n        return params.filter(item => this.selectedRowKeys.includes(item.field))\n    }\n\n    addGroup = (values) => {        \n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        if(!this.selectedRowKeys){\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        \n        const selectedRows = this.buildSelectedRows()\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }        \n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div className=\"common-one-hundred-percent-width common-column-layout\">                     \n            <div style={{marginRight:\"30px\"}}>\n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.buildSelectedRows()\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table pagination={{pageSize:5,hideOnSinglePage:true}}            \n            rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n            </div>\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form> \n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\nimport { buildExpression } from \"./FilterCondition\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {}\n        this.currentConditions = {}\n    }\n\n    static buildCondition = (items) => {\n        return items.map(item => {\n            return buildExpression(item)\n        })\n    }\n\n    onNonGroupFilterApply = async (selectedRows) => {\n        if (selectedRows.length === 0) {\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        const filterStr = selectedRows.flatMap(item => {\n            return FilterStation.buildCondition([item])\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${FilterStation.buildCondition(group.data).join(\" and \")})`\n                } else return `(${FilterStation.buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n\n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">\n                        <Compare ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"../../common/actions/AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"../../common/actions/RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../common/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import ActionMaker from \"../../../ActionMaker\"\n\n\nexport const {handler:ApplyActionHandler,action:ApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    const {apply} = action.data     \n    if(apply){\n        apply(action.data)\n    }\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\n\nexport interface UnionApplyValues{\n    unionTable:string,\n    duplicate:boolean\n }\nexport const { handler: UnionApplyHandler, action: UnionApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:UnionApplyValues) => {\n            if (!values.unionTable ) {\n                return \"UnionTable is required.\"\n            }            \n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:UnionApplyValues) => {            \n            const tableName = Tools.getTempTableName()\n\n            let operator = \"union\"\n            if(values.duplicate){\n               operator = \"UNION ALL\" \n            }\n            \n            const sql = `\n            select * from ${workshop.getLastApplyTable().tableName}\n            ${operator}\n            select * from ${Tools.getField(values.unionTable)}\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {UnionApplyHandler,UnionApplyAction} from \"./UnionApplyAction\"\n// --import--\n\nclass UnionStationActionNames {\nstatic UnionApply = \"UnionApply\"\n// --name--\n}\nconst UnionStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[UnionStationActionNames.UnionApply]: UnionApplyHandler,\n// --handler--\n}\nconst UnionStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[UnionStationActionNames.UnionApply]: UnionApplyAction,\n// --action--\n}\n\nfunction UnionStationReducer(state, action) {\nreturn UnionStationActions[action.type](state, action.data)    \n}\nexport { UnionStationActionNames, UnionStationReducer, UnionStationHandlers }","import * as React from 'react'\nimport { Form, Select } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport EngineService from '../../service/EngineService'\n\n\ninterface Props {\n}\n\ninterface TableInWorkshop {\n    tableName:string\n}\nconst { Option } = Select\nconst useSelectUnionTable = () => {\n    // const {dispacher} = React.useContext(UnionStationContext)\n    const [tables,setTables] = React.useState(Array<TableInWorkshop>())    \n    const [form] = Form.useForm()\n    React.useEffect(()=>{\n        const fetch = async()=>{\n            const res = await EngineService.tablesInWorkshop()\n            if(res.status === 200){\n                const tables = res.content as Array<TableInWorkshop>\n                setTables(tables)\n            }\n        }\n        fetch()\n    },[])\n\n    const items = tables.map(table=>{\n        return <Option value={table.tableName}>{table.tableName}</Option>\n    })\n    const ui = ()=>{\n        return (\n          \n            <Form form={form} className=\"login-form\" >           \n                <Form.Item label={<FormattedMessage id=\"union_table\" />} name=\"unionTable\" rules={[{ required: true, message: 'Please select union table!' }]}>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Choose Join Table\"\n                        optionFilterProp=\"children\"                    \n                    > \n                    {items}                   \n                    </Select>\n                </Form.Item> \n                <Form.Item label={<FormattedMessage id=\"allow_duplicate\" />} name=\"duplicate\" rules={[{ required: true, message: 'Please select!' }]}>\n                    <Select                        \n                        style={{ width: 200 }}                        \n                    > \n                      <Option value=\"true\">true</Option>               \n                      <Option value=\"false\">false</Option>               \n                    </Select>\n                </Form.Item>            \n            </Form>\n        )\n    }\n    return {ui,form}\n}\n\nexport { useSelectUnionTable }","import React,{useEffect} from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { UnionStationReducer, UnionStationHandlers, UnionStationActionNames } from './actions/UnionStationReducer'\nimport {useSelectUnionTable} from './SelectUnionTable'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport AnalysisWorkshop from '../workshop'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport { UnionApplyValues } from './actions/UnionApplyAction'\n\ninterface Props {   \n}\n\nconst initState = {\n  applySaveRollbackDispacher: undefined,\n  error:undefined\n}\n\nconst UnionStationContext = React.createContext<{state:any,dispacher:React.Dispatch<any>}|null>(null)\n\nconst UnionStation:React.FunctionComponent<Props> = (props) => {\n    const [state, dispacher] = useReducerAsync(UnionStationReducer, initState, UnionStationHandlers)\n    const {applySaveRollbackDispacher,error} = state\n\n    const {ui:SelectUnionTable, form:unionTableForm} = useSelectUnionTable()\n\n    useEffect(() => {\n      if (applySaveRollbackDispacher) {\n      \n        const {unionTable,duplicate} = unionTableForm.getFieldsValue()\n\n        dispacher({\n          type:CommonActionNames.setState,\n          data: {error:undefined}\n        })\n\n        const values:UnionApplyValues = {unionTable,duplicate: duplicate as boolean}        \n  \n        dispacher({\n          type: UnionStationActionNames.UnionApply,\n          data: {\n            workshop:AnalysisWorkshop.workshop,\n            values\n          }\n        })\n      }\n    }, [applySaveRollbackDispacher])\n\n    return (\n        <UnionStationContext.Provider value={ { state,dispacher} }>\n          <div style={{marginBottom:\"30px\"}}><ApplySaveRollback context={UnionStationContext} workshop={AnalysisWorkshop.workshop} /></div>\n          <SelectUnionTable/>\n      </UnionStationContext.Provider>\n    )\n}\n\nexport { UnionStation, UnionStationContext}","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\nexport interface PivotApplyValues{\n   columnLeft:string,\n   columnHeader:string,\n   columnSum: string,\n   sunFunc:Array<string>\n}\nexport const { handler: PivotApplyHandler, action: PivotApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:PivotApplyValues) => {\n            if (!values.columnHeader || !values.columnLeft || !values.columnSum ) {\n                return \"Three columns are required.\"\n            }\n\n            if(!(values.sunFunc?.length>0)){\n                return \"Agg funcs are required.\"\n            }\n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:PivotApplyValues) => {\n            const tableName = Tools.getTempTableName()\n\n            //`avg`, `max`, `min`, `sum`, `count`.\n            const sql = `\n            run ${workshop.getLastApplyTable().tableName} as Pivot.\\`\\` where \n            columnLeft=\"${values.columnLeft}\"\n            and columnHeader=\"${values.columnHeader}\"\n            and columnSum=\"${values.columnSum}\"\n            and sunFunc=\"${values.sunFunc.map(item=>{\n                return `${item}(${Tools.getField(values.columnSum)})`\n            }).join(\",\")}\"\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {PivotApplyHandler,PivotApplyAction} from \"./PivotApplyAction\"\n// --import--\n\nclass PivotStationActionNames {\nstatic PivotApply = \"PivotApply\"\n// --name--\n}\nconst PivotStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[PivotStationActionNames.PivotApply]: PivotApplyHandler,\n// --handler--\n}\nconst PivotStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[PivotStationActionNames.PivotApply]: PivotApplyAction,\n// --action--\n}\n\nfunction PivotStationReducer(state, action) {\nreturn PivotStationActions[action.type](state, action.data)    \n}\nexport { PivotStationActionNames, PivotStationReducer, PivotStationHandlers }","import React, { useState, useEffect, useContext } from 'react'\nimport { List, Form, Input, Checkbox } from 'antd'\nimport {PivotStationContext} from './PivotStation'\n\ninterface Props {\n}\n\nconst aggList = [`avg`, `max`, `min`, `sum`, `count`]\nconst CheckboxGroup = Checkbox.Group\n\nexport const useAggCheck = () => {\n    \n    const [form] = Form.useForm()\n    \n    const ui = ()=>{\n        return <>\n            <Form form={form}>\n                <Form.Item name=\"aggs\">\n                <CheckboxGroup\n                            options={aggList}                                                        \n                        /> \n                </Form.Item>\n            </Form>\n        </>\n    }\n    return {ui,form}\n}","import React, { useState, useEffect } from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { PivotStationReducer, PivotStationHandlers, PivotStationActionNames } from './actions/PivotStationReducer'\nimport { FormattedMessage } from 'react-intl'\nimport { List, Form, Input, Checkbox, Divider } from 'antd'\nimport AnalysisWorkshop from '../workshop'\nimport { Schema } from '../../../beans/dst'\nimport './PivotStation.scss'\nimport { useDrop, useDrag } from 'ahooks';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport AlertBox from '../../AlertBox'\nimport { PivotApplyValues } from './actions/PivotApplyAction'\nimport {useAggCheck} from './useAggCheck'\n\ninterface Props {\n}\n\nconst initState = {\n  columnLeft: null,\n  columnHeader: null,\n  columnSum: null,\n  applySaveRollbackDispacher: undefined,\n  error: undefined,  \n}\n\nconst PivotStationContext = React.createContext<{ state: any, dispacher: React.Dispatch<any> } | null>(null)\n\nconst PivotStation: React.FunctionComponent<Props> = (props) => {\n  const workshop = AnalysisWorkshop.workshop\n  const schema = workshop.currentTable.schema as Schema\n  const schemaForList = schema.fields.map(field => (field.name))\n  const [state, dispacher] = useReducerAsync(PivotStationReducer, initState, PivotStationHandlers)\n\n  const { columnLeft, columnHeader, columnSum, applySaveRollbackDispacher, error } = state\n\n  \n\n  const [dragging, setDragging] = useState<string | null>(null);\n\n  const getDragProps = useDrag({\n    onDragStart: (data) => {\n      setDragging(data);\n    },\n    onDragEnd: () => {\n      setDragging(null);\n    },\n  });\n\n  const [dropPropHeader, { isHovering: isHoveringHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnHeader: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsLeftHeader, { isHovering: isHoveringLeftHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnLeft: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsSum, { isHovering: isHoveringSum }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnSum: content\n        }\n      })\n    },\n  });\n\n  const tips = (isHover: boolean, columnName: string | null) => {\n    return isHover ? <FormattedMessage id=\"drop_column\" /> : (columnName ? columnName : <FormattedMessage id=\"drag_column\" />)\n  }\n\n  useEffect(() => {\n    if (applySaveRollbackDispacher) {\n      \n      dispacher({\n        type:CommonActionNames.setState,\n        data: {error:undefined}\n      })\n\n      const {aggs} = aggForm.getFieldsValue()\n      const values: PivotApplyValues = { columnHeader, columnSum, columnLeft, sunFunc:aggs }\n      dispacher({\n        type: PivotStationActionNames.PivotApply,\n        data: {\n          workshop,\n          values\n        }\n      })\n    }\n  }, [applySaveRollbackDispacher])\n\n  const {ui:aggUI,form:aggForm} = useAggCheck()\n\n  return (\n    <PivotStationContext.Provider value={{ state, dispacher }}>\n      {\n        error && <AlertBox message={error}></AlertBox>\n      }\n      <div className=\"pivot-station-commands\"><ApplySaveRollback context={PivotStationContext} workshop={workshop} /></div>\n      <div className=\"pivot-station-app\">\n        <div className=\"pivot-station-fields\">\n          <List\n            className=\"pivot-station-fields-list\"\n            header={<><Input placeholder=\"search\" /></>}\n            bordered\n            dataSource={schemaForList}\n            renderItem={item => (\n              <List.Item >\n                <div {...getDragProps(item)}>{item}</div>\n              </List.Item>\n            )}\n          />\n        </div>\n        <div className=\"pivot-station-bigbox\">\n          <div className=\"pivot-station-left\" {...dropPropsLeftHeader}>\n            <span className=\"pivot-common-font\"><FormattedMessage id=\"column_left\" /> </span><br /> {tips(isHoveringLeftHeader, columnLeft)}</div>\n          <div className=\"pivot-station-body\">\n            <div className=\"pivot-station-header\" {...dropPropHeader}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_header\" /></span> <br />{tips(isHoveringHeader, columnHeader)}\n            </div>\n            <div className=\"pivot-station-content\" {...dropPropsSum}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_sum\" /></span> <br /> {tips(isHoveringSum, columnSum)}              \n              <Divider/> \n              {aggUI()}             \n            </div>\n          </div>\n        </div>\n      </div>\n    </PivotStationContext.Provider>\n  )\n}\n\nexport { PivotStation, PivotStationContext }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport { LimitStation } from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nimport { FormattedMessage } from 'react-intl'\nimport { Resizable } from \"re-resizable\";\nimport AnalysisWorkshop from \"./workshop\";\nimport Tools from \"../../common/Tools\";\nimport { UnionStation } from \"./union/UnionStation\";\nimport { PivotStation } from \"./pivot/PivotStation\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = AnalysisWorkshop.workshop\n        this.state = { key: Tools.getJobName() }\n    }\n\n    reload = () => {\n        this.setState({ key: Tools.getJobName() })\n    }\n\n    render() {\n        return <div className=\"os-pane\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"os-tabs\">\n                <Resizable style={{ borderBottom: \"solid\", width: \"100%\", overflow: \"scroll\" }}>\n                    <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>\n                        <TabPane tab={<FormattedMessage id=\"project\" />} key={1} >\n                            <ProjectStation parent={this}></ProjectStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"filter\" />} key={2} >\n                            <FilterStation parent={this}></FilterStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"agg\" />} key={4} >\n                            <AggStation parent={this}></AggStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"order\" />} key={5} >\n                            <OrderStation parent={this}></OrderStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"pivot\" />} key={10} >\n                            <PivotStation/>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"more\" />} key={100}>\n                            <Tabs tabPosition=\"left\">\n                                <TabPane tab={<FormattedMessage id=\"join\" />} key={3}>\n                                    <JoinStation parent={this}></JoinStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"limit\" />} key={6} >\n                                    <LimitStation parent={this}></LimitStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"window\" />} key={7} >\n                                    <WindowStation parent={this}></WindowStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"dash\" />} key={8} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"union\" />} key={9} >\n                                    <UnionStation/>\n                                </TabPane>\n                            </Tabs>\n                        </TabPane>\n\n                    </Tabs>\n                </Resizable>\n            </div>\n\n        </div >\n    }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.setState({reloaWorkshop:Tools.getJobName()})\n    }\n    \n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\n\n\n\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                  this.wrapper(text)\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\nimport AnalysisWorkshop from \"./workshop\";\nimport AceEditor from \"react-ace\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = AnalysisWorkshop.workshop\n    }\n\n    wrapper = (v)=>{\n        return <div onDoubleClick={(evt)=>{                \n            evt.preventDefault()\n            evt.stopPropagation()\n            this.setState({view:{enabled:true,content:v}})\n    \n        }}>{v}</div>\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n       \n\n        if ((typeof type) === \"object\" || (typeof type) === \"array\") {\n            return (value, record) => {                \n                const v = JSON.stringify(value)\n               return this.wrapper(v) \n            }\n        }\n\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return  this.wrapper(value)\n            }\n            default:\n                return (value, record) => { return String(value) }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        }\n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                width: 200,\n                textWrap: 'word-break',\n                ellipsis: {showTitle:true},\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows, isDash })\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n    \n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table                 \n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: 'max-content' }}\n                \n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.view.content || \"\"}\n                    ></AceEditor>                \n            </Modal>\n        </div>\n        )\n    }\n\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport OperateStation from './OperateStation';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components'\n\nfunction OperateStationWrapper(props) {\n    const ButtonGroup = styled.div`\n      display:flex;\n      align-items:right;    \n    ` \n    const handle = useFullScreenHandle();\n    return (\n        <div className=\"common-one-hundred-percent-width\">\n            <Collapse style={{marginBottom:\"10px\"}}>\n                <Collapse.Panel header={<>\n                    <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n                <Divider type=\"vertical\"/>\n                <FormattedMessage id=\"operate_panel\"/>                \n                {/* <span style={{marginLeft:\"50px\",border:\"2px dash\"}}>\n                 <Button type=\"primary\">Apply</Button> \n                 <Divider type=\"vertical\"/> <Button type=\"primary\">Save As</Button> \n                 <Divider type=\"vertical\"/> <Button>Rollback</Button> \n                </span> */}\n                \n                </>}>                    \n                    <FullScreen handle={handle}>\n                        <OperateStation ref={(et) => AnalysisWorkshop.workshop.stationRef = et} />\n                    </FullScreen>\n                </Collapse.Panel>\n            </Collapse>\n\n        </div>\n    )\n}\nexport { OperateStationWrapper }","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport RealTimeViewTable from './RealTimeViewTable';\nimport { Button, Card, Collapse, Divider } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl';\n\nfunction RealTimeTableWrapper(props) {\n    const handle = useFullScreenHandle();\n    return (\n        <Collapse defaultActiveKey={\"1\"} style={{ marginBottom: \"30px\",width: \"100%\" }}>\n            <Collapse.Panel key=\"1\" header={<>\n            {AnalysisWorkshop.workshop.sessionId && <>            \n            <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n            <Divider type=\"vertical\"/>\n            </>}            \n            <FormattedMessage id=\"data_panel\" /></>}>\n                <FullScreen handle={handle}>                    \n                    <RealTimeViewTable tableStyle={{ width: \"90%\" }} ref={(et) => AnalysisWorkshop.workshop.displayRef = et} />\n                </FullScreen>\n            </Collapse.Panel>\n        </Collapse>\n    )\n}\nexport { RealTimeTableWrapper }","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { OperateStationWrapper } from \"./OperateStationWrapper\";\nimport { RealTimeTableWrapper } from \"./RealTimeTableWrapper\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"temp\", \"\", \"cc2\", {})\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            //return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n            return <OperateStationWrapper />\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <div className=\"ws-table-pane\">\n                    <RealTimeTableWrapper />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister, enableLogin, enableConsole } = action.data\n    const params = {}\n    if(enableRegister !== undefined){\n        params.register = enableRegister\n    }\n    if(enableLogin !== undefined){\n        params.login = enableLogin\n    }\n    if(enableConsole !== undefined){\n        params.console = enableConsole\n    }    \n    \n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, params)\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    enableConsole: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,\n        enableConsole,\n        applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableRegister: Boolean(appInfo.content.register),\n                    enableConsole: Boolean(appInfo.content.console),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Enable Console(SQL)\"\n                        name=\"enableConsole\"\n                    >\n                        <Switch defaultChecked={enableConsole} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit, remove: externalRemove } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error, setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => {\n                            if (externalRemove) {\n                                externalRemove(row)\n                            }\n                            remove(index)\n                        }\n                        }>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {\n        if (!editorMode) {\n            const newColumns = columns.map(item => {\n                item[\"render\"] = (text, row, index) => {\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n                columns={newColumns}\n                dataSource={data}\n                pagination={false}\n            />\n        }\n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error} />}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading, setEditorMode, setError }\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Input, Form, Card, Button, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\n\nfunction ChangePassword() {\n    const [error, setError] = useState(undefined)\n    const [applySuccess, setApplySuccess] = useState(undefined)\n\n    const submit = useCallback(async (values) => {\n        const { password, newPassword, _newPassword } = values\n        if (newPassword !== _newPassword) {\n            setError(\"Two new passwords are not the same\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = proxy.post(RemoteAction.USER_CHANGE_PASSWORD, values)\n        setApplySuccess(\"Update password successfully.\")\n    }, [])\n\n    return <Card className=\"common-child-center\">\n        {applySuccess && <Alert\n            closable\n            message=\"Success\"\n            description=\"Apply Success\"\n            type=\"success\"\n            showIcon\n        />}\n        {error && <Alert\n            closable\n            message=\"Fail\"\n            description={error}\n            type=\"error\"\n            showIcon\n        />}\n        <Form className=\"login-form\" onFinish={(values) => {\n            submit(values)\n        }}>\n\n            <Form.Item\n                label=\"Oringinal Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your oringinal password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"_newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password again!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    </Card>\n}\n\nexport default ChangePassword","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\nimport ChangePassword from './pages/ChangePassword';\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"website-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['website-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"website-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"website-settings\"}\n                                })\n                            }}>Website Settings</Menu.Item>                                                         \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"website-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                      \n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Button } from 'antd';\nimport AlertBox from '../../../AlertBox';\nimport { FormattedMessage } from 'react-intl';\n\n\nfunction useUserConfig(props) {\n    const [error, setError] = useState(undefined)\n    const [success, setSuccess] = useState(undefined)\n    const [current, setCurrent] = useState(undefined)\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    const getParams = () => {\n        return form.getFieldsValue()\n    }\n    const ui = ({ formItems, title, submit }) => (\n        <div className=\"common-margin common-child-center\">\n            <Card title={title} style={{ width: \"50%\" }}>\n                <Form form={form}>\n                    {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                    {formItems}\n                </Form>\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        submit\n                    }><FormattedMessage id=\"apply\" /></Button>\n                </Form.Item>\n            </Card>\n        </div>\n    )\n    return { ui, form, setError, setLoading, getParams,setCurrent,current,setSuccess}\n}\nexport { useUserConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\n\n\nfunction DefaultBackend(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const [engine,setEngine] = useState(undefined)\n    const submit = async () => {\n        if(!engine){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_default_backend\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item></>\n    })\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\nimport { useIntegerStep } from '../../../analysis/common/pages/useIntegerStep';\n\n\nfunction ApplyTimeout(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const {ui:timeoutUi,value:timoutValue} = useIntegerStep({\n        initialValue:UIMaker.extraOption()[\"apply_timeout\"] || 10\n    })    \n    const submit = async () => {\n        if(!timoutValue){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { apply_timeout: timoutValue })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_apply_timeout\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {timoutValue}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                {timeoutUi()}\n            </Form.Item></>\n    })\n}\nexport { ApplyTimeout }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Teams(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.TEMA_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Teams }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Input, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport { useUserConfig } from '../../common/pages/useUserConfig';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\nfunction MySQL() {\n    const { ui, setError, setSuccess, form } = useUserConfig()\n    const submit = async () => {\n        let { host, port, db, user, password, name } = form.getFieldsValue()\n        if (!name) {\n            name = db\n        }\n        if (!port) {\n            port = \"3306\"\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.DS_ADD, { \n            host, port, db, user, password, name, format: \"jdbc\",jType:\"mysql\" })\n        if (res.status === 200) {\n            setSuccess(\"Create Connect Success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n    return ui(\n        {\n            title: <FormattedMessage id=\"connect_mysql\" />,\n            submit,\n            formItems: <>\n                <Form.Item name=\"host\" required={true} label={<FormattedMessage id=\"host\" />}>\n                    <Input placeholder=\"127.0.0.1\" />\n                </Form.Item>\n                <Form.Item name=\"port\" initialValue={\"3306\"} label={<FormattedMessage id=\"port\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"db\" required={true} label={<FormattedMessage id=\"db\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"user\" required={true} label={<FormattedMessage id=\"user\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"password\" required={true} label={<FormattedMessage id=\"password\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"name\" label={<FormattedMessage id=\"alias\" />}>\n                    <Input />\n                </Form.Item>\n            </>\n        }\n    )\n}\nexport { MySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction ListMySQL() {\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        remove: async(row) =>{\n            const res = await proxy.post(RemoteAction.DS_REMOVE,{id:row.id})\n            if(res.status === 200){\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.DS_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\nexport { ListMySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\nimport { FormattedMessage } from 'react-intl';\nimport { ApplyTimeout } from './ApplyTimeout';\nimport ChangePassword from './ChangePassword';\nimport { Teams } from './Teams';\nimport { MySQL } from '../../../analysis/datasource/pages/MySQL';\nimport { ListMySQL } from '../../../analysis/datasource/pages/ListMySQL';\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage, setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['default-backend']}\n                    defaultOpenKeys={['analysis-workshop']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"analysis-workshop\"\n                        title={\n                            <span>\n                                <MailOutlined />\n                                <span><FormattedMessage id=\"analysis_workshop\" /></span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"default-backend\" onClick={() => {\n                            setCurrentPage(\"default-backend\")\n                        }}><FormattedMessage id=\"set_engine\" /></Menu.Item>\n                        <Menu.Item key=\"set-timeout\" onClick={() => {\n                            setCurrentPage(\"set-timeout\")\n                        }}><FormattedMessage id=\"set_timeout\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"user\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"user_settings\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"change-admin-password\"\n\n\n                            onClick={() => {\n                                setCurrentPage(\"change-admin-password\")\n                            }}><FormattedMessage id=\"change_password\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"team\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"team\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"team_manager\"\n                            onClick={() => {\n                                setCurrentPage(\"team_manager\")\n                            }}><FormattedMessage id=\"team_manager\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"datasource\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"datasource\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"mysql\")\n                            }}><FormattedMessage id=\"connect_mysql\" /></Menu.Item>\n                        <Menu.Item key=\"list_mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"list_mysql\")\n                            }}><FormattedMessage id=\"list_mysql\" /></Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"default-backend\" && <DefaultBackend />}\n                {currentPage === \"set-timeout\" && <ApplyTimeout />}\n                {currentPage === \"change-admin-password\" && <ChangePassword></ChangePassword>}\n                {currentPage === \"team_manager\" && <Teams></Teams>}\n                {currentPage === \"mysql\" && <MySQL />}\n                {currentPage === \"list_mysql\" && <ListMySQL />}\n            </div>\n        </div>\n    )\n}\nexport { Settings }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport { Settings } from './admin/pages/Settings';\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole(props) {\n    const {appInfo} = props\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>            \n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader appInfo={appInfo} userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>        \n\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input/>\n        </Form.Item>\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item\n            label=\"Access Token\"\n            name=\"accessToken\"            \n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","const zh_CN = {    \n    login: \"登录\",\n    register: \"注册\",\n    console: \"控制台\",\n    analysis_workshop: \"分析工坊\",\n    settings: \"设置\",\n    admin: \"管理员\",\n    more: \"更多\",\n    apply: \"应用\",\n    set_default_backend: \"设置默认Engine\",\n    set_default_backend_error: \"请选择一个引擎进行设置\",\n    set_engine: \"设置引擎\",\n    curent_value: \"当前值\",\n    choose: \"选择\",\n    done: \"完成\",\n    congratulation: \"恭喜\",\n    set_timeout: \"超时设置\",\n    set_apply_timeout: \"设置【应用】超时（单位秒）\",\n    table_workshop: \"暂存区\",\n    delta_lake: \"数据湖\",\n    file_system: \"文件系统\",\n    project: \"字段\",\n    filter: \"过滤\",\n    join: \"关联\",\n    window: \"窗口\",\n    dash: \"可视化\",\n    limit: \"条数\",\n    agg: \"聚合\",\n    order: \"排序\",\n    select_columns: \"筛选字段\",\n    rename_columns: \"重命名字段\",\n    transform_columns: \"转换字段\",\n    cast_columns_type: \"修改字段类型\",\n    hive: \"数仓\",\n    operate_panel: \"操作区\",\n    data_panel:\"数据区\",\n    user_settings:\"用户设置\",\n    change_password:\"修改密码\",\n    team:\"团队\",\n    team_manager: \"团队管理\",\n    datasource: \"数据源\",\n    analysis_range: \"请选择表分析区间\",\n    table_start: \"选择开始区间[包含]\",\n    table_end: \"选择结束区间[包含]\",\n    table_random: \"选择任意值\",\n    or: \"或者\",\n    no_partition_msg: \"该表没有分区信息。请直接点击【确认】\",\n    ds_mysql: \"MySQL管理\",\n    host: \"主机名\",\n    port: \"端口\",    \n    db: \"数据库名\",\n    user: \"用户名\",\n    password: \"密码\",\n    alias: \"别名\",\n    connect_mysql: \"连接 MySQL\",\n    list_mysql: \"MySQL列表\",\n    mysql: \"MySQL\",\n    partitionColumn:\"分区列\",\n    lowerBound:\"最低值\",\n    upperBound:\"最大值\",\n    numPartitions:\"分区数\",\n    mysql_parallel:\"MySQL打开并行度设置\",\n    no_mysql_parallel:\"该表没有数字类型的列，无法设置并行度。请直接点击【确定】\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"选择Json字段\",\n    json_fields: \"Json字段展开\",\n    union:\"合并\",\n    union_table:\"待合并的表\",\n    pivot: \"透视表\",\n    column_left: \"行列\",\n    column_header: \"表头列\",\n    column_sum: \"统计列\",\n    drag_column: \"拖拽列到这里\",\n    drop_column: \"在这里释放\",\n    \n}\nexport default zh_CN;","const en_US = {\n    login: \"Login\",\n    register: \"Register\",\n    console: \"Console\",\n    analysis_workshop: \"Analysis Workshop\",\n    settings: \"Settings\",\n    admin: \"Admin\",\n    more: \"More\",\n    apply: \"Apply\",\n    set_default_backend: \"Set Default Backend\",\n    set_default_backend_error: \"Please select at least one engine\",\n    set_engine: \"Set Engine\",\n    curent_value: \"Current Value\",\n    choose: \"Choose\",\n    done: \"Done\",\n    congratulation: \"Congratulation\",\n    set_timeout: \"Set Timout\",\n    set_apply_timeout: \"Set  [Apply] Timeout（Unit: Second）\",\n    table_workshop: \"Table Workshop\",\n    delta_lake: \"DeltaLake\",\n    file_system: \"FileSystem\",\n    project: \"Project\",\n    filter: \"Filter\",\n    join: \"Join\",\n    order: \"Order\",\n    window: \"Window\",\n    dash: \"Dash\",\n    agg: \"Agg\",\n    limit: \"Limit\",\n    select_columns: \"Select Columns\",\n    rename_columns: \"Rename Columns\",\n    transform_columns: \"Transform Columns\",\n    cast_columns_type: \"Cast Column Type\",\n    hive: \"Hive\",\n    operate_panel: \"Operate Panel\",\n    data_panel: \"Data Panel\",\n    user_settings: \"User Settings\",\n    change_password: \"Change Password\",\n    team: \"Team\",\n    team_manager: \"Team Control\",\n    datasource: \"Data Source\",\n    analysis_range: \"Select Table Range\",\n    table_start: \"Select start value\",\n    table_end: \"Select end value\",\n    table_random: \"Select values\",\n    or: \"Or\",\n    no_partition_msg: \"This table have no partition message. Please click Ok.\",\n    ds_mysql: \"MySQL\",\n    host: \"Host\",\n    port: \"Port\",\n    db: \"Database Name\",\n    user: \"User Name\",\n    password: \"Password\",\n    alias: \"Alias\",\n    connect_mysql: \"Connect MySQL\",\n    list_mysql: \"MySQL List\",\n    mysql: \"MySQL\",\n    partitionColumn:\"partitionColumn\",\n    lowerBound:\"lowerBound\",\n    upperBound:\"upperBound\",\n    numPartitions:\"numPartitions\",\n    mysql_parallel:\"MySQL Parallel\",    \n    no_mysql_parallel:\"No number columns in this table, Please click [Ok]\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"Choose Json Field\",\n    json_fields: \"Expand Json\",\n    union:\"Union\",\n}\nexport default en_US","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ConfigProvider } from 'antd';\nimport {IntlProvider} from \"react-intl\"\nimport zh_CN from './locale/zh_CN';\nimport en_US from './locale/en_US';\nimport AntZhCN from 'antd/lib/locale-provider/zh_CN';\n\nconst initState = {\n    appConfigured: false,\n    loading: true,\n    lang: \"zh\",\n    enableConsole: false\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading,lang,enableConsole } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { \n                    appConfigured: appInfo.content.configured, \n                    enableConsole: appInfo.content.console || false, \n                    loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <IntlProvider locale={lang} messages={zh_CN}>\n        <ConfigProvider locale={AntZhCN}>\n            <AppContext.Provider value={{ dispacher }}>                \n                {loading && <SpinBox />}\n                {!loading && !appConfigured && <AppSetup />}\n                {!loading && appConfigured && <AppConsole appInfo={{enableConsole}}/>}\n            </AppContext.Provider>\n        </ConfigProvider>\n        </IntlProvider>\n\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n    static ANALYSIS_TABLE_DELETE = \"/api_v1/analysis/table/delete\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n    static USER_CHANGE_PASSWORD = \"/api_v1/changepassword\"\n\n    static APPLY_GET = \"/api_v1/analysis/apply\"\n\n    static TEMA_LIST = \"/api_v1/team\" \n    \n    static DS_ADD = \"/api_v1/ds/add\" \n    static DS_LIST = \"/api_v1/ds/list\"\n    static DS_REMOVE = \"/api_v1/ds/remove\" \n\n    static DS_MYSQL_DBS= \"/api_v1/ds/mysql/dbs\"\n\n    static DS_MYSQL_CONNECT = \"/api_v1/ds/mysql/connect/get\"\n    static DS_MYSQL_COLUMN_INFO = \"/api_v1/ds/mysql/column\"\n\n}","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}