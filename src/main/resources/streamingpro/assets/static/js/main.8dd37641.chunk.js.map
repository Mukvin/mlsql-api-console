{"version":3,"sources":["v1/analysis/common/actions/SetStateAction.js","backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","v1/service/CodeIntellegence.js","service/HTTPMethod.js","service/BackendConfig.js","user/MLSQLAuth.js","service/MLSQLAPI.js","components/et/ButtonToCommand.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/async_execute/ResourceProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","common/tool.js","components/MLSQLQueryDisplay.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/async_execute/QueryHistory.js","components/query/MLSQLDash.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/PublishAnalysisPluginAction.js","v1/script_console/actions/SharePublicAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/workshop_tables/actions/LoadAction.js","v1/analysis/workshop_tables/actions/OpenAction.js","v1/analysis/workshop_tables/actions/DeleteAction.js","v1/analysis/workshop_tables/actions/ExportToAction.js","v1/analysis/workshop_tables/actions/WorkshopTablesReducer.js","v1/analysis/workshop_tables/WorkshopTables.js","v1/analysis/hive/actions/LoadAction.js","v1/analysis/hive/actions/OpenAction.js","v1/analysis/hive/actions/SearchAction.js","v1/analysis/hive/actions/HiveTablesReducer.js","v1/analysis/hive/HiveTables.js","v1/analysis/hive/pages/usePartitionSelect.js","v1/analysis/datasource/actions/OpenMySQLTableAction.js","v1/analysis/datasource/actions/MysqlTreeReducer.js","v1/analysis/common/pages/useIntegerStep.js","v1/analysis/datasource/pages/useMySQLPartition.js","v1/analysis/datasource/pages/MysqlTree.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/agg/AggStationOp.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/common/actions/RemoveFieldAction.js","v1/analysis/common/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/project/CastFields.js","v1/analysis/common/CommonActionNames.js","v1/analysis/project/AddJsonField.js","v1/analysis/project/actions/AddFieldAction.js","v1/analysis/project/actions/RemoveFieldAction.js","v1/analysis/project/actions/JsonFieldsApplyAction.js","v1/analysis/project/actions/JsonFieldsReducer.js","v1/analysis/project/JsonFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/filter/FilterCondition.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/common/actions/ApplyAction.js","v1/analysis/union/actions/UnionApplyAction.tsx","v1/analysis/union/actions/UnionStationReducer.js","v1/analysis/union/SelectUnionTable.tsx","v1/analysis/union/UnionStation.tsx","v1/analysis/pivot/actions/PivotApplyAction.tsx","v1/analysis/pivot/actions/PivotStationReducer.js","v1/analysis/pivot/useAggCheck.tsx","v1/analysis/pivot/PivotStation.tsx","v1/analysis/plugin/actions/AnalysisPluginStationReducer.js","common/SQLAnalysisUtils.tsx","common/useAnalysisPlugin.tsx","v1/analysis/plugin/AnalysisPluginForm.tsx","v1/analysis/plugin/AnalysisPluginStation.tsx","v1/analysis/OperateStation.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/RealTimeViewTable.js","v1/analysis/OperateStationWrapper.js","v1/analysis/RealTimeTableWrapper.js","v1/analysis/workshop.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/SetStateAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/pages/ChangePassword.js","v1/app_console/admin/AdminSetting.js","v1/analysis/common/pages/useUserConfig.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/ApplyTimeout.js","v1/app_console/admin/pages/Teams.js","v1/analysis/datasource/pages/MySQL.js","v1/analysis/datasource/pages/ListMySQL.js","v1/app_console/pages/actions/SetupEngineFromCloudReducer.js","v1/app_console/pages/UseEngineCreateLoading.tsx","v1/app_console/pages/SetupEngineFromCloud.tsx","v1/app_console/pages/DeleteCloudEngine.tsx","v1/app_console/pages/EngineLog.tsx","v1/app_console/pages/RegisterEngine.tsx","v1/app_console/admin/pages/Settings.js","v1/app_console/pages/Doc.tsx","v1/app_console/pages/EgnineUI.tsx","v1/app/indexmanager/IndexerList.tsx","v1/app/indexmanager/CreateIndexer.tsx","v1/app/IndexManager.tsx","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","locale/zh_CN.js","locale/en_US.js","App.js","index.js","backend_service/RemoteAction.js","v1/ActionMaker.js","backend_service/backend/RestConst.js"],"names":["ActionMaker","buildHandler","action","a","data","SetStateActionHandler","handler","SetStateAction","GlobalParamNames","USER_NAME","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","constructor","status","content","response","this","resp","Backend","url","fetch_config","BACKEND_URL","request","params","method","property","toUpperCase","userName","sessionStorage","getItem","formBody","encodedKey","encodeURIComponent","encodedValue","push","newurl","length","join","undefined","basic_config","timeout","headers","AccessToken","body","final_config","fetch","ok","text","error","json","ActionProxy","backend","get","RemoteAction","res","runScript","sql","jobName","backendTags","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","Object","assign","post","RUN","temp","Method","GET","POST","client","Boolean","window","location","hostname","match","currentPage","LOGOUT","removeItem","name","logined","SwitchActionHandler","SwitchAction","UIMaker","user","role","extraOption","token","setItem","JSON","stringify","Cookies","set","path","userStr","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","__state","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","setState","AppConsoleReducer","state","type","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","appInfo","dispacher","useContext","AppConsoleContext","useState","current","setCurrent","setLogined","isAdmin","setIsAdmin","leave","setLeave","tempCurrent","useRef","useEffect","Provider","title","visible","onCancel","onOk","buildEvent","cancelText","okText","description","onClick","key","domEvent","preventDefault","stopPropagation","selectedKeys","mode","Item","style","fontSize","icon","LoginOutlined","id","SelectOutlined","enableConsole","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","password","password2","REGISTER","msg","setupLogin","RegisterActionHandler","RegisterAction","LOGIN","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","LoginRegisterReducer","AlertBoxW","styled","div","AlertBox","closable","message","RegisterContext","initState","Register","appConsoleDispacher","formLayout1","useReducerAsync","value","className","onFinish","values","label","rules","required","Password","htmlType","LoginContext","Login","require","default","CodeIntellegence","lineNum","columnNum","restClient","executeMode","isDebug","queryType","wordList","Status","RUN_SCRIPT","MLSQLAuth","isLogin","HTTP","callback","MLSQLAPI","apiResponse","then","s","catch","m","console","log","request2","str","login","_sCallBack","_errorCallBack","registerOrLogin","logout","register","accessToken","serverError","uuidv4","ServerError","APIResponse","process","jsonErr","jsonObj","successCallback","serverErrorCallback","wow","fail","toString","auth","Auth","self","jsonRes","background","async","newRunScript","okFun","failFun","new_request","resStatus","extractMsg","err","ButtonToCommand","makeSQL","EditorOp","consoleComp","inner","session","editor","setText","setValue","append","insert","row","getLength","column","insertAfterCursor","p","getCursorPosition","focus","comp","super","getText","getValue","getSelection","selectionRange","getSelectionRange","getTextRange","EngineService","JOB_KILL","block","ANALYSIS_TABLES","tableName","ANALYSIS_TABLE_INFO","empty_res","currentJobIndex","totalJobs","progress","totalJob","res2","completedJobsNum","activeJobsNum","script","isFinish","totalCores","activeTasks","AsyncExecuter","queryPanel","enterLoading","commandGroupRef","loading","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","commandGroup","jobProgressRef","taskProgressRef","displayRef","queryApp","display","dashRef","dash","logInfo","closed","prepare","update","measureTime","startTime","Date","getTime","saveFile","scriptId","SAVE_SCRIPT_FILE","run","engineName","intervalTimer","setInterval","monitorJob","monitorLog","queryHistory","reload","enter","cancelMonitor","clearInterval","exit","JOB_DETAIL","jobInfo","reason","setData","map","item","split","killJob","JobProgress","jobs","dataSource","currentSQL","totalTime","currentJobGroup","executor","jobProgress2","activeJobs","groupId","makeProgress","setTimeout","finalTime","job","jobId","duration","total","numTasks","numSkippedTasks","numKilledTasks","skipped","failed","numFailedTasks","completed","numCompletedIndices","started","numActiveTasks","percent","parseInt","runningStr","tasks","_cur","timer","toFixed","showSQL","parent","columns","dataIndex","render","record","index","position","width","height","backgroundColor","top","right","textAlign","margin","ref","et","Minutes","formatValue","Seconds","defaultActiveKey","Panel","header","ResourceProgress","componentDidMount","resourceInfo","jobNum","filter","maxWidth","EngineSelectComp","setLoading","engine","setEngine","proxy","ENGINE_LIST","useEngine","onChange","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","getAllText","getAceEditor","appendToEditor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","resourceProgressRef","etOver","evt","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","completers","newValue","onDragOver","onDrop","defaultSize","onResize","resize","theme","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","CommandGroup","TaskProgress","mark","taskCompute","api","BackendConfig","condition","Error","assert","hasOwnProperty","jsonArray","_jsonObj","numCompletedTasks","forEach","successPercent","resourceCompute","ReactMarkdown","MLSQLQueryDisplay","setRender","keyColumn","config","isPrototypeOf","substring","keys","basket","rows","new_item","rowDoubleClick","event","view","enabled","disablePreview","tableStyle","onRow","onDoubleClick","OkText","source","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","rejectStyle","fileListStyle","UploadDropzone","Component","files","req","file","attach","end","f","size","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","styles","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","dataTypeToItems","reduce","x","y","z","dataType","prev","Map","_config","scatters","dataTypeConfig","fill","shape","xConfig","dataKey","yConfig","zConfig","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","titleMap","isStream","renderRawData","MLSQLHTML","MLSQLHTMLPanel","refresh","sandbox","srcDoc","frameBorder","scrolling","ifr","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","cleanSQL","line","includes","executeAgainStatus","defaultRender","currentTH","target","parentNode","num","cellIndex","field","whiteSpace","wordWrap","renderConfig","t","cssStyle","runJob","JOB_LIST","processData","detailConsoleMessage","respDisplay","overflow","_display","marginBottom","Collapse","TabPane","Tabs","MLSQLDash","PureComponent","isNormalXY","xYRender","renderDash","queryResData","onTabClick","tab","CodeBlock","originalEditor","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","spin","Engine","show_result","fail_result","code","DataTable","parseData","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","ExecuteUnit","codeBlock","displayGroup","notebook","nextExecuteUnit","codeBlockIsEmpty","getCodeStr","CODE_SPLITTER","NodeBook","createNewExecuteUnit","addRef","instance","executeUnitRefs","slice","isLastEmpty","executeUnits","saveNoteBook","LogMonitor","cancelQueryLog","queryLog","PythonACE","logMonitor","select","finalSQL","runMode","ex","PythonEditor","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabName","newTabIndex","add","getPaneIndexByActiveKey","lastIndex","pane","i","remove","editorRefList","closeEditor","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","func","keyQuote","k","keyPath","getTempTableName","replace","getJobName","escapeQuote","quote","unQuote","startsWith","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","outputSize","robotFetchParamWithCollect","getField","v","distinct","arrays","Set","tempF","fastCompareObject","deepCompareObject","arg1","arg2","compare2Objects","isNaN","RegExp","String","Number","prototype","leftChain","indexOf","rightChain","pop","ETPopLoad","datasourcesRender","getAttribute","sourceType","sourceTypeV","param","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","rv","whereStr","etpop","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","ignorePath","ignoreTableName","TextArea","ETPopAlgorithm","renderParam","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETBaseTool","outputTableName","outputTableNameV","showTableName","showOutputTableName","pathNameForRender","showPathName","_makeMLSQL","asStr","_render","ETPopTool","ETPopDownload","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","showCode","ETExample","etName","ETRegister","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETDownloadFile","link","document","createElement","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","MLSQLETQuick","itemData","onDragStart","renderPop","etDoubleClick","padding","gutter","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","show","entries","TableOutlined","isLeaf","tip","spinning","FileSystemTree","getFileList","ls","_corrupt_record","root","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","loadData","CommonHandlers","CommonActions","node","consoleApp","SCRIPT_FILE_GET","scriptFile","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","scriptContent","getFieldValue","fileName","createFileError","saveParams","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","element","isExpanded","ExpandActionHandler","ExpandAction","SCRIPT_FILE_REMOVE","DeleteFileActionHandler","DeleteFileAction","ANALYSIS_PLUGIN_PUBLISH","PublishAnalysisPluginActionHandler","PublishAnalysisPluginAction","_","SCRIPT_SHARE_PUBLIC","SharePublicHandler","SharePublicAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","publishPlugin","sharePublic","expand","ScriptTreeHandlers","ScriptTreeActions","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","list","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","tmpStyle","zIndex","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","Form","useForm","shares","SCRIPT_FILE_LIST","builder","treeRes","sort","b","concat","treeData","getList","FolderAddOutlined","ShareAltOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","onExpand","defaultExpandedKeys","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","fileSystemTreeRef","MLSQLQueryApp","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","sqlContent","createRef","paddingRight","borderRight","leftTreePaneRef","MixinBuilder","superclass","with","mixins","c","mixin","mix","NewSessionOp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","ADeltaLakeTree","tableClick","tablesInWorkshop","sessionId","LoadActionHandler","LoadAction","openTable","OpenActionHandler","OpenAction","ANALYSIS_TABLE_DELETE","DeleteActionHandler","DeleteAction","targetPath","exportTable","buildLoadSQL","runSql","ExportToActionHandler","ExportToAction","WorkshopTablesActionNames","LOAD","OPEN","DELETE","EXPORT_TO","WorkshopTablesHandlers","WorkshopTablesActions","WorkshopTablesReducer","confirm","exportTo","WorkshopTablesContext","WorkshopTables","externalReload","exportForm","FolderOpenOutlined","ContainerOutlined","CloudUploadOutlined","getFieldsValue","resetFields","flatMap","dbName","databaseName","namespace","tables","newdbs","partitionValues","partitionColumn","tableRandom","tableStart","tableEnd","partitionColumnName","inStr","__where__","con","loop","searchValue","beforeStr","substr","afterStr","search_dbs","showKeys","sub","SearchActionHandler","SearchAction","HiveTablesActionNames","SEARCH","HiveTablesHandlers","HiveTablesActions","HiveTablesReducer","HiveTablesContext","HiveTables","AnalysisWorkshop","setOpenTable","setError","setPartitionColumn","noPartition","setNoPartition","partition","reverse","usePartitionSelect","PartitionSelect","partitionForm","setOpenTableForPartition","setPartitionError","partitionNumValue","lowerBound","upperBound","DS_MYSQL_CONNECT","connectRes","tempTable","whereBlock","connect","__sql__","__tableName__","OpenMySQLTableActionHandler","OpenMySQLTableAction","MysqlTreeActionNames","MysqlTreeHandlers","MysqlTreeActions","MysqlTreeReducer","useIntegerStep","initialValue","min","max","useMySQLPartition","setColumn","partitionNumUI","__connect__","DS_MYSQL_COLUMN_INFO","columnName","setFieldsValue","data_type","col_name","MysqlTreeContext","MysqlTree","PartitionUI","DS_MYSQL_DBS","indexer","LeftView","reloaWorkshop","WorkshopOp","tableInfo","_whereBlock","tempTableName","sqls","loadingTable","toggleMessage","schema","setCurrentTable","updateDisplay","WorkshopAutoSql","getLastApplyTable","rollback","APPLY_GET","apply","_data","_schema","runSQLAtCurrentTable","analysis_workshop_table_name","analysis_workshop_sql","save","persist","finalSql","persistJobName","extraParams","persistSQL","ANALYSIS_SAVE","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","onApply","disabled","onRollback","StationCommonOp","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","SelectJoinField","currentTableSchema","joinStation","joinInfo","joinTable","currentTableFields","fields","joinTableFields","tableSchema","next","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","componentDidUpdate","prevProps","listStyle","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","danger","SelectJoinTable","Step","Steps","StepContent","JoinStation","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","currentStep","preview","steps","ColumnOperate","pagination","pageSize","AggStationOp","enableGroupByField","fieldName","groupByFields","generateProjectField","newName","aggFields","newFields","FuncDesc","funcValue","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","agg","Math","random","funcPopUp","collect","d","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","defaultChecked","_groupBy","dataref","marginRight","_agg","columnsRef","handleFunc","applyFuncToFieldRef","RenameFields","formRef","FunctionField","ProjectStationSQLOp","onSelectApply","selectFieldsRef","showInfo","onFuncApply","functionFieldRef","isAggExists","onRenameApply","renameFieldsRef","currentFields","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsActions","CastFieldsReducer","RollbackActionHandler","RollbackAction","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","CastFieldsContext","CastFields","submit","marginTop","onDeselect","CommonActionNames","APPLY","AddJsonField","keyPaths","forms","layout","MinusOutlined","subFields","JsonFieldsContext","targetIndex","splice","formValues","operateFiled","jsonStr","JsonFieldsApplyActionHandler","JsonFieldsApplyAction","JsonFieldsHandlers","JsonFieldsActions","JsonFieldsReducer","JsonFields","tempObjs","obj","PlusOutlined","ProjectStation","ExpressionConst","EQUAL","NON_EQUAL","IN","CONTAINS","STARTS_WITH","ENDS_WITH","LIKE","IS_NULL","IS_NOT_NULL","IS_EMPTY","IS_NOT_EMPTY","FilterCondition","compare","setCompare","inCandidate","setInCandidate","inCandidateLoading","setInCandidateLoading","Compare","command","buildSelectedRows","fieldToDataType","selectedRowKeys","addGroup","groupName","groupType","selectedRows","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","hideOnSinglePage","GroupGroup","ApplyGroup","FilterStation","filterStr","buildCondition","onFilterApply","buildFilter","group","currentConditions","items","conTemp","cond","IS_NOT_EMPT","buildExpression","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","OrderStationActions","OrderStationReducer","OrderStationContext","OrderStation","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationActions","WindowStationReducer","useSelectFields","enableApply","fieldWrapper","selectFields","selectFieldsLabel","selectFieldsMode","operateFields","setOperateFields","commands","onClose","BuildGroup","WindowStationContext","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","funcs","setFuncs","setCurrentFunc","fetchFuncs","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","renderItem","Text","WindowStation","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","PLUGIN_LIST","dashPlugins","fetchPlugin","PLUGIN_GET","pluginName","analyzedScriptContent","image","dataValues","dashValues","xColumn","yColumn","ApplyActionHandler","ApplyAction","unionTable","operator","duplicate","UnionApplyHandler","UnionApplyAction","UnionStationActionNames","UnionApply","UnionStationHandlers","UnionStationActions","UnionStationReducer","useSelectUnionTable","Array","setTables","UnionStationContext","UnionStation","SelectUnionTable","unionTableForm","columnHeader","columnLeft","columnSum","sunFunc","PivotApplyHandler","PivotApplyAction","PivotStationActionNames","PivotApply","PivotStationHandlers","PivotStationActions","PivotStationReducer","aggList","CheckboxGroup","Checkbox","PivotStationContext","PivotStation","schemaForList","setDragging","getDragProps","useDrag","onDragEnd","useDrop","onDom","dropPropHeader","isHoveringHeader","isHovering","dropPropsLeftHeader","isHoveringLeftHeader","dropPropsSum","isHoveringSum","tips","isHover","aggs","aggForm","useAggCheck","aggUI","AnalysisPluginStationHandlers","AnalysisPluginStationActions","AnalysisPluginStationReducer","FormTypeEnum","SQLAnalysisUtils","_sql","userInputs","toSql","buffer","newv","useAnalysisPlugin","setUserInputs","fieldLoading","fieldData","setFieldData","analysisUtils","ANALYSIS_PLUGIN_GET","plugin","fetchSelect","optionStr","optionSql","optionTable","_fetch","toFormType","sqlChunk","formItem","comamnd","onFocus","selectMode","formType","AnalysisPluginForm","AnalysisPluginStationContext","AnalysisPluginStation","analysisUtilsRef","ANALYSIS_PLUGIN_LIST","OperateStation","borderBottom","tabPosition","WorkshopMessageOp","showMessage","consoleMessage","showInfoMessage","infoMessage","WorkshopUIOp","stationRef","SearchOp","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","searchInput","onPressEnter","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","wrapper","DropdownMenuUI","dropdownStat","dropdown","menu","BarChartOutlined","overlay","RealTimeViewTable","getDefaultRender","getDefaultSearch","getDefaultTitleRender","isDash","newColumns","textWrap","ellipsis","showTitle","OperateStationWrapper","handle","useFullScreenHandle","FullscreenOutlined","RealTimeTableWrapper","operateStationView","subTitle","enableRegister","enableLogin","APP_SAVE","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","APP_INFO","getAppInfo","showIcon","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","externalRemove","setSchema","setResult","editorMode","setEditorMode","useDynamicList","getKey","move","resetList","sortForm","submitNow","REG","fieldValue","matchFF","exec","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","ENGINE_REMOVE","ENGINE_ADD","ChangePassword","setApplySuccess","newPassword","_newPassword","USER_CHANGE_PASSWORD","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","MailOutlined","useUserConfig","success","setSuccess","formItems","getParams","DefaultBackend","USER_EXTRA","updateUser","ApplyTimeout","timeoutUi","timoutValue","apply_timeout","Teams","TEMA_LIST","MySQL","host","port","DS_ADD","jType","ListMySQL","DS_REMOVE","DS_LIST","SetupEngineFromCloudHandlers","SetupEngineFromCloudActions","SetupEngineFromCloudReducer","UseEngineCreateLoading","setResp","setTimer","CLOUD_ENGINE_STATUS","orientation","loadingPage","SetupEngineFromCloudContext","SetupEngineFromCloud","CLOUD_CREATE_ENGINE","valuePropName","marks","1","2","4","8","DeleteCloudEngine","engines","setEngines","errorDetail","setErrorDetail","CLOUD_ENGINE_LIST","CLOUD_DELETE_ENGINE","selectChange","EngineLog","logMsg","setLogMsg","RegisterEngine","ENGINE_REGISTER","Settings","setCurrentPage","Doc","EngineUI","backends","IndexList","loadIndexers","INDEXER_LIST","removeIndexer","INDEXER_REMOVE","Column","deltaSec","deltaStr","round","date","onConfirm","CreateIndexer","setConfirm","setDbs","setTable","setTp","enableSyncInterval","setEnableSyncInterval","engineResp","newparams","MYSQL_INDEXER_CREATE","IndexManager","AppConsole","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","AppSetupHeader","AppSetupBody","AppSetup","zh_CN","analysis_workshop","settings","admin","more","set_default_backend","set_default_backend_error","set_engine","curent_value","choose","done","congratulation","set_timeout","set_apply_timeout","table_workshop","delta_lake","file_system","project","limit","order","select_columns","rename_columns","transform_columns","cast_columns_type","hive","operate_panel","data_panel","user_settings","change_password","team","team_manager","datasource","analysis_range","table_start","table_end","table_random","or","no_partition_msg","ds_mysql","alias","connect_mysql","list_mysql","mysql","numPartitions","mysql_parallel","no_mysql_parallel","as","choose_json_field","json_fields","union","union_table","pivot","column_left","column_header","column_sum","drag_column","drop_column","input_message","engine_name","access_key_id","access_key_secret","oss_access_key_id","oss_access_key_secret","regin_id","endpoint_public_access","k8s_address","driver_core_num","driver_memory","executor_core_num","executor_memory","executor_num","engine_version","jar_engine_version","delete_cloud_engine","create_cloud_engine","aliyun_cloud_engine","cloud_engine_name","delete_fail","delete_success","aliyun_related","cluster_related","a_1","a_2","cloud_engine_log","a_3","a_4","a_5","a_6","a_7","a_8","indexer_manager","indexer_list","create_indexer","mysql_indexer_manager","other_indexer_manager","en_US","App","configured","locale","messages","AntZhCN","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","eventCallBack","dispatch","getState","signal","PUT"],"mappings":"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","file":"static/js/main.8dd37641.chunk.js","sourcesContent":["import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption) || {}\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"indexer_manager\"\n    // let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../analysis/common/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal'\nimport { FormattedMessage  } from 'react-intl'; \nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin,appInfo } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n\n    const [enableConsole,setEnableConsole] = useState(false)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);    \n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => { \n                if(e.key === \"home\"){\n                    e.domEvent.preventDefault()\n                    e.domEvent.stopPropagation()\n                    return\n                }           \n                if (logined && current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item  key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                    <span style={{ fontSize: 11 }}>(Build 20210223.084315)</span>\n                </Menu.Item>\n                <Divider type=\"vertical\"></Divider>\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    <FormattedMessage id=\"login\"/>\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                     <FormattedMessage id=\"register\"/>                    \n                </Menu.Item>}\n\n                {logined && appInfo.enableConsole && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    <FormattedMessage id=\"console\"/>\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                   <FormattedMessage id=\"analysis_workshop\"/>                    \n                </Menu.Item>}\n\n                {logined && <Menu.Item key=\"indexer_manager\" icon={<AppstoreOutlined />}>\n                    <FormattedMessage id=\"indexer_manager\"/>\n                </Menu.Item>}\n\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"settings\"/>                    \n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"admin\"/>\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title={<FormattedMessage id=\"more\"/>}>\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"engine\">Engine</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message={props.title || \"Message\"} description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import {ActionProxy} from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path) {\n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\": \"robot\"})\n        return res\n    }\n\n    static async killJob(jobName) {\n        const res = await client.runScript(\"!kill \" + jobName + \";\", uuidv4(), {\"queryType\": \"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName: jobName})\n        return res\n    }\n\n    static async runJob(sql, block = false) {\n        const res = await client.runScript(sql, uuidv4(), {\"async\": block})\n        return res\n    }\n\n    static async showFunctions() {\n        const res = await client.runScript(\"\", uuidv4(), {executeMode: \"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs() {\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`, jobName, {\"queryType\": \"robot\"})\n        return {jobName, res}\n    }\n\n    static async tablesInDeltaLake() {\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`, jobName, {\"queryType\": \"robot\"})\n        return res\n    }\n\n    static async tablesInWorkshop() {\n        const res = await client.get(RemoteAction.ANALYSIS_TABLES, {})\n        return res\n    }\n\n    static async tableInfo(tableName) {\n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO, {tableName})\n        return res\n    }\n\n    static async jobProgress(jobName) {\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        const empty_res = {currentJobIndex: 0, totalJobs: 1}\n        if (res.status === 200) {\n            const jsonObj = res.content[0]\n            if (!jsonObj) {\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if (totalJobs === 1) {\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex\n            }\n            return {currentJobIndex, totalJobs}\n        }\n        return empty_res\n    }\n\n    static async currentSQL(jobName) {\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        const empty_res = {currentJobIndex: 0, totalJobs: 1, script: \"\", isFinish: true}\n        if (res.status === 200) {\n            const jsonObj = res.content[0]\n            if (!jsonObj) {\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            let script = jsonObj.progress.script\n            return {currentJobIndex, totalJobs, script,isFinish:false}\n        }else {\n            return empty_res\n        }\n\n    }\n\n    static async jobProgress2(jobName) {\n        const res2 = await client.runScript(`load _mlsql_.\\`jobs/v2/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        return res2.content[0]\n    }\n\n    static async resourceInfo() {\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`, uuidv4(), {\"queryType\": \"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks, totalCores}\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()        \n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,                \n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Collapse, Table, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryPanel = props.parent\n        this.state = {loading: false, jobs: {}, dataSource: [], currentSQL: {}, totalTime: \"0s\", currentJobGroup: \"\"}\n        this.columns = [\n            {\n                title: \"Job Id(Job Group)\",\n                dataIndex: \"title\",\n                key: \"title\"\n\n            },\n            {\n                title: \"Duration\",\n                dataIndex: \"duration\",\n                key: \"duration\"\n            }\n            ,\n            {\n                title: \"Tasks(for all stages)： Succeeded/Total\",\n                dataIndex: \"tasks\",\n                key: \"tasks\",\n                render: (text, record, index) => {\n                    const percent = 2 * record.progress\n                    return <div>\n\n                        <div style={{position: \"relative\", width: \"200px\", height: \"30px\", backgroundColor: \"yellow\"}}>\n                            <div style={{\n                                position: \"relative\",\n                                top: \"0px\",\n                                right: \"0px\",\n                                width: percent + \"px\",\n                                height: \"100%\",\n                                backgroundColor: \"rgba(27,163,232,100)\"\n                            }}>\n                            </div>\n                            <div style={{position: \"absolute\", top: \"4px\", textAlign: \"center\",width:\"100%\"}}>\n                                {text}\n                            </div>\n\n                        </div>\n                    </div>\n                }\n            }\n        ]\n    }\n\n    enter = (params) => {\n        this.setState({loading: true, jobs: {}, dataSource: [], currentSQL: {}, totalTime: \"0s\", currentJobGroup: \"\"})\n        this.intervalTimer = setInterval(async () => {\n            const jobName = this.queryPanel.executor.jobName\n            const currentSQL = await EngineService.currentSQL(this.state.currentJobGroup || jobName)\n            const jobs = await EngineService.jobProgress2(this.state.currentJobGroup || jobName)\n            if (jobs.activeJobs && jobs.activeJobs.length !== 0) {\n                if (!this.state.currentJobGroup) {\n                    this.setState({currentJobGroup: jobs.groupId})\n                }\n                this.makeProgress(jobs, currentSQL)\n            }\n        }, 1000)\n    }\n\n    exit = () => {\n        if (this.intervalTimer) {\n            setTimeout(() => {\n                clearInterval(this.intervalTimer)\n                this.intervalTimer = null\n            }, 3000)\n            this.finalTime = this.state.totalTime\n            this.setState({loading: false})\n        }\n    }\n\n    makeProgress = (temp, currentSQL) => {\n        if (temp.activeJobs) {\n            const jobs = temp.activeJobs\n            const dataSource = jobs.map(job => {\n                return {\n                    jobId: job.jobId,\n                    duration: job.duration,\n                    total: job.numTasks - job.numSkippedTasks,\n                    numKilledTasks: job.numKilledTasks,\n                    skipped: job.numSkippedTasks,\n                    failed: job.numFailedTasks,\n                    completed: job.numCompletedIndices,\n                    started: job.numActiveTasks\n\n                }\n            }).map(item => {\n                    const percent = parseInt((item.completed / item.total * 100) + \"\")\n                    let runningStr = \"\"\n                    if (item.failed === 0 && item.skipped === 0 && item.started > 0) {\n                        runningStr += `(${item.started} running)`\n                    }\n                    if (item.failed > 0) {\n                        runningStr += `(${item.failed} failed)`\n                    }\n                    if (item.skipped > 0) {\n                        runningStr += `(${item.skipped} skipped)`\n                    }\n                    if (item.numKilledTasks > 0) {\n                        runningStr += `(${item.numKilledTasks} killed)`\n                    }\n\n                    let duration = item.duration + \" ms\"\n                    if (item.duration > 1000) {\n                        duration = parseInt((item.duration / 1000) + \"\") + \" s\"\n                    }\n\n                    return {\n                        title: `${item.jobId}(${temp.groupId})`,\n                        duration: duration,\n                        tasks: `${item.completed}/${item.total}${runningStr}`,\n                        progress: percent\n                    }\n                }\n            )\n            let _cur = currentSQL\n            if (currentSQL.isFinish) {\n                _cur = this.state.currentSQL\n                _cur[\"currentJobIndex\"] = _cur[\"totalJobs\"]\n            }\n            if (this.timer) {\n                const totalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n                this.setState({dataSource, currentSQL: _cur, totalTime})\n                return\n            }\n            this.setState({dataSource, currentSQL: _cur})\n        }\n    }\n\n    showSQL = () => {\n        return this.state.currentSQL.currentJobIndex && <h3>\n            sql:\n            [{this.state.currentSQL.currentJobIndex}/{this.state.currentSQL.totalJobs}: {this.state.currentSQL.script}]\n        </h3>\n    }\n\n    render() {\n        if (!this.state.loading) {\n            if (this.finalTime) {\n                return <div>\n                    <Button type=\"primary\" style={{margin: \"0px 0px 20px 0px\"}}>\n                        Time Cost: {this.finalTime}\n                    </Button>\n                    <div>\n                        <Collapse defaultActiveKey={['1']}>\n                            <Collapse.Panel header={this.showSQL()} key=\"1\">\n                                <Table dataSource={this.state.dataSource} columns={this.columns}/>\n                            </Collapse.Panel>\n                        </Collapse>\n                    </div>\n                </div>\n            } else {\n                return <div></div>\n            }\n        }\n        return <div>\n            <Button type=\"primary\" style={{margin: \"0px 0px 20px 0px\"}}>\n                Time Cost:<Timer ref={(et) => this.timer = et}>\n                <Timer.Minutes formatValue={value => `${value} m. `}/>\n                <Timer.Seconds formatValue={value => `${value} s. `}/>\n            </Timer></Button>\n            <div>\n                <Collapse defaultActiveKey={['1']}>\n                    <Collapse.Panel header={this.showSQL()} key=\"1\">\n                        <Table dataSource={this.state.dataSource} columns={this.columns}/>\n                    </Collapse.Panel>\n                </Collapse>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine,props])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map(item=>{\n                return <Select.Option value={item.name}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        //this.taskProgressRef.current.enter({jobName: jobName})\n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        //this.taskProgressRef.current.exit()\n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.parent.engineName = engine                \n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    cleanSQL = (sql)=> {\n       try{\n        return sql.split(\"\\n\").filter(line=> !line.includes(\"password\")).join(\"\\n\")\n       }catch(e){\n        return sql\n       }\n       \n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.cleanSQL(this.state.detailConsoleMessage)||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","import React from 'react'\nimport AceEditor from \"react-ace\";\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n\n            />\n        )\n    }\n}","import React from 'react'\nimport { Icon } from '@ant-design/compatible';\n\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false, executeUnit: props.executeUnit}\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.state.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.isExecute ? <span onClick={this.cancelExecute}><Icon type=\"sync\" spin/></span> :\n                    <span onClick={this.evtExecute}><Icon type=\"caret-right\"/></span>\n            }\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            return <DataTable data={this.state.displayData} ref={(et) => this.displayTableRef = et}></DataTable>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\n\n\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n\n    render() {\n        return <div>\n            <CodeBlock initialCode={this.props.initialCode} ref={et => {\n                this.codeBlock = et\n            }} executeUnit={this}/>\n            <CommandGroup ref={et => {\n                this.commandGroup = et\n            }} executeUnit={this}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NodeBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {executeUnits: this.executeUnits}\n        this.engine = new Engine(5 * 60 * 1000)\n    }\n\n    createNewExecuteUnit = (initialCode) => {\n        return <ExecuteUnit parent={this} initialCode={initialCode} ref={et => this.addRef(et)}/>\n    }\n\n    addRef = (instance) => {\n        if (instance) {\n            this.executeUnitRefs.push(instance)\n        }\n    }\n\n    nextExecuteUnit = () => {\n        const isLastEmpty = () => {\n            return this.executeUnitRefs.slice(-1)[0].codeBlockIsEmpty()\n        }\n        if (!isLastEmpty()) {\n            this.executeUnits.push(this.createNewExecuteUnit())\n            this.setState({executeUnits: this.executeUnits})\n        }\n        this.saveNoteBook()\n    }\n\n    saveNoteBook = () => {\n        const value = this.executeUnitRefs.map((instance) => {\n            return instance.getCodeStr()\n        }).join(CODE_SPLITTER)\n\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    text = (value, scriptId) => {\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value && value !== \"undefined\") {\n            this.executeUnitRefs = []\n            this.executeUnits = this.initialCode.split(CODE_SPLITTER).map((initialCode) => {\n                return this.createNewExecuteUnit(initialCode)\n            })\n            this.setState({executeUnits: this.executeUnits})\n        }\n    }\n\n    render() {\n        return <div>\n            {\n                this.state.executeUnits\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NodeBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabName, callback) => {    \n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NodeBook parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static quote = (str)=>{\n        if(!str) return str\n        return `\"${Tools.escapeQuote(str)}\"`\n    }\n\n    static unQuote = (str) => {\n        if(typeof str !== \"string\") return str\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true,\n            outputSize: 200\n        }\n    }\n\n    static keyPath(key,data,func){\n        let keyQuote = key\n        func(keyQuote)\n        if(typeof data === \"object\"){            \n            Object.keys(data).forEach(k=>{                 \n                Tools.keyPath(`${keyQuote}['${k}']`,data[k],func)\n            })            \n        }       \n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }    \n\n    static distinct = (arrays, field) => {\n        if(!field){\n         return [...new Set(arrays)]\n        }\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"./actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()      \n    console.log(newExpanedKeys,newNoExpanedKeys)\n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:PublishAnalysisPluginActionHandler,action:PublishAnalysisPluginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.post(RemoteAction.ANALYSIS_PLUGIN_PUBLISH,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to publish file ${node.label}. Reason: ${res.content}`                \n            }}\n        }                \n    }\n    // consoleApp.\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:SharePublicHandler,action:SharePublicAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,_} = action.data\n    const res =  await client.post(RemoteAction.SCRIPT_SHARE_PUBLIC,{id:node.id})\n    if(res.status!==200){\n        return {data:{\n                error: `Fail to share ${node.label}. Reason: ${res.content}`\n            }}\n    }\n    return {data:{}}\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nimport { PublishAnalysisPluginAction, PublishAnalysisPluginActionHandler } from './PublishAnalysisPluginAction'\nimport {SharePublicAction, SharePublicHandler} from \"./SharePublicAction\";\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static publishPlugin=\"publishPlugin\"\n    static sharePublic=\"publishPlugin\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler,\n    [ScriptTreeActionNames.publishPlugin]:PublishAnalysisPluginActionHandler,\n    [ScriptTreeActionNames.sharePublic]:SharePublicHandler,\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction,\n    [ScriptTreeActionNames.publishPlugin]:PublishAnalysisPluginAction,\n    [ScriptTreeActionNames.sharePublic]:SharePublicAction,\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n\n    convert = (item) => {\n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        item[\"isExpand\"] = !item[\"isExpanded\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id || node.key\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };               \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, {useRef, useCallback, useEffect} from 'react';\nimport {Popconfirm, Tree, Modal, Menu, Form, Input} from 'antd';\nimport {useReducerAsync} from 'use-reducer-async'\nimport {\n    DownOutlined,\n    ShareAltOutlined,\n    FolderOutlined,\n    DeleteOutlined,\n    FileAddOutlined,\n    FolderAddOutlined\n} from '@ant-design/icons';\nimport {ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames} from './actions/ScriptTreeReducer';\nimport {ActionProxy} from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport {useContextMenuCallback, useContextMenu} from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\nimport {FormattedMessage} from 'react-intl'\n\nconst {DirectoryTree} = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const {consoleApp} = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const {\n        loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const shares = await client.get(RemoteAction.SCRIPT_SHARE_PUBLIC, {})\n            if (shares.status !== 200) {\n                return\n            }\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return b.id - a.id\n            })\n\n            shares.content.map(item => {\n                item[0].parentId = 0\n                item[0].label = <span style={{color: \"green\"}}>{item[0].label + \"(shared by others)\"}</span>\n                const node = builder.build(item)\n                treeRes[0].childNodes = treeRes[0].childNodes.concat(node[0])\n                return item\n            })\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const {id} = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu>\n                <Menu.Item icon={<FolderAddOutlined/>} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu>\n                <Menu.Item onClick={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.publishPlugin,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={0}>Publish As Plugin To Analysis</Menu.Item>\n                <Menu.Item onClick={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu>\n            {target.parentId == nodes[0].id && <Menu.Item icon={<ShareAltOutlined/>} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.sharePublic,\n                    data: {\n                        node: target\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={0}>Share Public</Menu.Item>\n            }\n            <Menu.Item icon={<FileAddOutlined/>} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined/>} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined/>} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const {onRightClick: popContextMenu, ui: contextMenu} = useContextMenu({contextMenuRef, dispacher, onRender})\n\n\n    return (\n        <ScriptTreeContext.Provider value={{dispacher}}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {operateModal: false}\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n            <DirectoryTree height={700}\n                           onExpand={(expandedKeys) => {\n                               dispacher({\n                                   type: ScriptTreeActionNames.expand,\n                                   data: {expandedKeys}\n                               })\n                           }}\n                           onDoubleClick={(evt, node) => {\n                               dispacher({\n                                   type: ScriptTreeActionNames.openScriptFile,\n                                   data: {consoleApp, node}\n                               })\n                           }}\n                           defaultExpandedKeys={expandedKeys}\n                           expandAction=\"click\"\n                           onRightClick={popContextMenu}\n                           switcherIcon={<DownOutlined/>}\n                           treeData={nodes}></DirectoryTree>}\n\n        </ScriptTreeContext.Provider>\n    )\n}\n\nexport {ScriptTree, ScriptTreeContext}","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }\n        // if(key===\"3\"){                            \n        //     if(this.fileSystemTreeRef){\n        //         this.fileSystemTreeRef.reload()\n        //     }\n        // }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport MLSQLAceEditor from './MLSQLAceEditor'\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport ExecuteUnit from \"./notebook/ExecuteUnit\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\n\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {sqlContent: \"\", displayEditor: \"normal\"}\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n\n        } else {\n            this.editorGroup.current.addFull(script.name, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          //AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree height={700} loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport EngineService from \"../../../service/EngineService\"\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n        const dbs = {}\n        res.content.forEach(item => {\n            if (!dbs[item.sessionId]) {\n                dbs[item.sessionId] = [item.tableName]\n            } else {\n                dbs[item.sessionId].push(item.tableName)\n            }\n        })\n        return {\n            data: {\n                dbs,...action.data\n            }\n        }\n    }\n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:OpenActionHandler,action:OpenAction} = ActionMaker.buildHandler(async (action)=>{\n    const {openTable,workshop} = action.data    \n    workshop.newSession(\"temp\",\"\",openTable)                     \n    return {        \n        data: {}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:DeleteActionHandler,action:DeleteAction} = ActionMaker.buildHandler(async (action)=>{\n    const {id} = action.data\n    const proxy = new ActionProxy()\n    await proxy.get(RemoteAction.ANALYSIS_TABLE_DELETE,{tableName:id})\n    return {        \n        data: {\n            reloading: Tools.getJobName()           \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: ExportToActionHandler, action: ExportToAction } = ActionMaker.buildHandler(async (action) => {\n    const { targetPath, workshop } = action.data\n    const { exportTable } = action.__state\n    const { name: openTable, type } = exportTable\n\n    const { sql, tableName } = await workshop.buildLoadSQL(\"temp\", \"\", openTable)\n\n    const runSql = (name) => {\n        proxy.runScript(`\n             ${sql}\n             save ignore ${tableName} as ${name}.\\`${targetPath}\\`;\n            `, Tools.getJobName(), { async: true })\n    }\n    const proxy = new ActionProxy()\n    switch (type) {\n        case \"hive\":\n            runSql(\"hive\")\n            break\n        case \"file\":\n            runSql(\"parquet\")\n            break\n        case \"delta\":\n            runSql(\"delta\")\n            break\n\n    }\n\n    return {\n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler, LoadAction } from './LoadAction'\nimport { OpenActionHandler, OpenAction } from './OpenAction'\nimport { DeleteActionHandler, DeleteAction } from './DeleteAction'\nimport { ExportToActionHandler, ExportToAction } from './ExportToAction'\nclass WorkshopTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static DELETE = \"delete\"\n    static EXPORT_TO = \"exportTo\"\n}\nconst WorkshopTablesHandlers = {\n    ...CommonHandlers,\n    [WorkshopTablesActionNames.LOAD]:LoadActionHandler,\n    [WorkshopTablesActionNames.OPEN]:OpenActionHandler,\n    [WorkshopTablesActionNames.DELETE]:DeleteActionHandler,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToActionHandler,\n\n}\nconst WorkshopTablesActions = {\n    ...CommonActions,\n    [WorkshopTablesActionNames.LOAD]:LoadAction,\n    [WorkshopTablesActionNames.OPEN]:OpenAction,\n    [WorkshopTablesActionNames.DELETE]:DeleteAction,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToAction,\n}\n\nfunction WorkshopTablesReducer(state, action) {\nreturn WorkshopTablesActions[action.type](state, action.data)    \n}\nexport { WorkshopTablesActionNames, WorkshopTablesReducer, WorkshopTablesHandlers }","import React, { useState, useRef, useEffect } from 'react';\nimport { Tree, Spin, Menu, Form, Modal, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WorkshopTablesReducer, WorkshopTablesHandlers, WorkshopTablesActionNames } from './actions/WorkshopTablesReducer';\nimport { TableOutlined, DeleteOutlined, CloudUploadOutlined, FolderOpenOutlined, ContainerOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nconst { TreeNode, DirectoryTree } = Tree;\nconst { SubMenu } = Menu;\n\nconst initState = {\n    dbs: {},\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n\n    exportTo: false,\n    exportTable: {\n        name: undefined,\n        type: undefined\n    }\n\n}\n\nconst WorkshopTablesContext = React.createContext()\n\nfunction WorkshopTables(props) {\n    const { workshop, reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(WorkshopTablesReducer, initState, WorkshopTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        exportTo, exportTable\n    } = state\n    const contextMenuRef = useRef()\n\n    const [exportForm] = Form.useForm()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.OPEN,\n                    data: {\n                        openTable: id,\n                        workshop\n                    }\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: false\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n\n            <SubMenu icon={<ContainerOutlined />} title=\"Export\">\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"hive\"\n                            },\n                            exportTo: true,\n                            workshop\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.1}>to Hive</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"delta\"\n                            },\n                            exportTo: true,\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.2}>to Delta</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"file\"\n                            },\n                            exportTo: true,\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.3}>to FileSystem</Menu.Item>\n            </SubMenu>\n\n            <Menu.Item onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.DELETE,\n                    data: {\n                        id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2} icon={<DeleteOutlined />}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: WorkshopTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n    return (\n        <WorkshopTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={`Export to ${exportTable.type}`}\n                visible={exportTo}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTo: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    const { targetPath } = exportForm.getFieldsValue()\n                    exportForm.resetFields()\n                    dispacher({\n                        type: WorkshopTablesActionNames.EXPORT_TO,\n                        data: { exportTo: false, targetPath, workshop }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <Form form={exportForm}>\n                    <Form.Item rules={[\n                        {\n                            required: true,\n                            message: 'Target is required.',\n                        },\n                    ]}\n                        label=\"Target\"\n                        name=\"targetPath\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Modal\n                title={`Open Table`}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: \"dispatch\",\n                        data: { openTable }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                {`Open ${openTable}?`}\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <DirectoryTree height={700} onDoubleClick={(evt, node) => {\n                    dispacher({\n                        type: WorkshopTablesActionNames.OPEN,\n                        data: {\n                            openTable: node.id,\n                            workshop\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }} onRightClick={popContextMenu}>\n                    {\n                        Object.entries(dbs).flatMap(([key, value]) => {\n                            return value.map(item => {\n                                return <TreeNode icon={<TableOutlined />} id={item} table={item} db={key} title={item} key={item} isLeaf />\n                            })\n                        })\n                    }\n                </DirectoryTree>\n            </Spin>\n        </WorkshopTablesContext.Provider>\n    )\n}\nexport { WorkshopTables, WorkshopTablesContext }","import * as React from \"react\";\nimport ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\nimport { TableOutlined } from '@ant-design/icons'\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const {dbName,node} = action.data\n    const proxy = new ActionProxy()\n    if(!dbName){        \n        let res = await proxy.runScript(`!profiler sql \"show databases\";`,Tools.getJobName(),Tools.robotFetchParam())                      \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"databaseName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"databaseName\":\"adl\"}]}}\n        if (res.status === 200) {        \n            const dbs  = res.content.data.map(item=>{                \n                item[\"key\"] = item.databaseName || item.namespace\n                item[\"title\"] = item.key\n                item[\"isLeaf\"] = false\n                item[\"children\"] = []\n                return item\n            })\n            return {\n                data: {\n                    dbs,...action.data\n                }\n            }\n        }\n    }\n\n    if(dbName){\n        await proxy.runScript(`!profiler sql \"use ${dbName}\";`,Tools.getJobName(),Tools.robotFetchParam())    \n        let res = await proxy.runScript(`!profiler sql \"show tables\";`,Tools.getJobName(),Tools.robotFetchParam())                             \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"database\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"tableName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"isTemporary\",\"type\":\"boolean\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"database\":\"adl\",\"tableName\":\"after_sale_df\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_awake_di\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_daily_active_user_com_di\",\"isTemporary\":false}]}}\n        if (res.status === 200) {        \n            const tables  = res.content.data.filter(item=>{\n                const db = item.database || item.namespace\n                return db === dbName\n            }).map(item=>{\n                item[\"key\"] = `${dbName}.${item.tableName}`\n                item[\"title\"] = item.tableName\n                item[\"isLeaf\"] = true\n                item[\"icon\"]=<TableOutlined />\n                return item\n            }) \n            const {dbs} = action.__state\n            const newdbs = dbs.map(db => {\n                if(db.key===dbName){\n                    db.children = tables\n                }\n                return db\n            });            \n            return {\n                data: {...action.data,dbs:newdbs}\n            }\n        }\n    }\n    \n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: OpenActionHandler, action: OpenAction } = ActionMaker.buildHandler(async (action) => {\n    const { openTable, workshop, partitionValues,partitionColumn} = action.data\n    const [db, table] = openTable.split(\".\")\n\n    const { tableRandom, tableStart, tableEnd } = partitionValues\n    const partitionColumnName = partitionColumn && Tools.getField(partitionColumn)\n    if (partitionColumn && tableRandom) {\n        const inStr = partitionColumnName +\" in (\" + tableRandom.map(item=>`\"${Tools.escapeQuote(item)}\"`).join(\",\") + \")\"\n        workshop.newSession(\"hive\", db, table,{__where__: inStr})\n    }\n    else if (partitionColumn && tableStart && tableEnd) {\n        const con = `${partitionColumnName} >= ${Tools.quote(tableStart)} and ${Tools.quote(tableEnd)} >= ${partitionColumnName}  `\n        workshop.newSession(\"hive\", db, table,{__where__: con})\n    }else {\n        workshop.newSession(\"hive\", db, table) \n    }\n    return {\n        data: {}\n    }\n})","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport Tools from '../../../../common/Tools';\n\nconst loop = (data, searchValue) =>\n    data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n            index > -1 ? (\n                <span>\n                    {beforeStr}\n                    <span className=\"site-tree-search-value\">{searchValue}</span>\n                    {afterStr}\n                </span>\n            ) : (\n                    <span>{item.title}</span>\n                );\n\n        if (item.children) {\n            return { ...item, title, children: loop(item.children, searchValue) }\n        }\n\n        return { ...item, title }\n    });\n\nexport const { handler: SearchActionHandler, action: SearchAction } = ActionMaker.buildHandler(async (action) => {\n    const { dbs } = action.__state\n    const { searchValue } = action.data\n    if (!searchValue) {\n        return {\n            data: {\n                expandedKeys: [], search_dbs: dbs\n            }\n        }\n    }\n\n    let showKeys = []\n    let expandedKeys = dbs\n        .flatMap(item => {            \n            const wow = item.children?.map(sub => {\n                if (sub.title.indexOf(searchValue) > -1) {\n                    return item.key\n                }\n                return null\n            }).filter(item => item) || []\n\n            if(item.title.indexOf(searchValue) > -1){                  \n                showKeys.push(item.key)\n            }\n            return wow\n        })\n   \n    expandedKeys = Tools.distinct(expandedKeys)    \n    const search_dbs = loop(dbs, searchValue).filter(item => {\n        return expandedKeys.includes(item.key) || showKeys.includes(item.key)\n    })\n    return {\n        data: {\n            expandedKeys, search_dbs\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler,LoadAction } from './LoadAction'\nimport { OpenAction, OpenActionHandler } from './OpenAction'\nimport { SearchAction, SearchActionHandler } from './SearchAction'\nclass HiveTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static SEARCH = \"search\"\n}\nconst HiveTablesHandlers = {\n    ...CommonHandlers,\n    [HiveTablesActionNames.LOAD]:LoadActionHandler,\n    [HiveTablesActionNames.OPEN]: OpenActionHandler,\n    [HiveTablesActionNames.SEARCH]: SearchActionHandler\n}\nconst HiveTablesActions = {\n    ...CommonActions,\n    [HiveTablesActionNames.LOAD]:LoadAction,\n    [HiveTablesActionNames.OPEN]: OpenAction,\n    [HiveTablesActionNames.SEARCH]: SearchAction\n}\n\nfunction HiveTablesReducer(state, action) {\nreturn HiveTablesActions[action.type](state, action.data)    \n}\nexport { HiveTablesActionNames, HiveTablesReducer, HiveTablesHandlers }","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Tree, Spin, Menu, Input, Modal } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { HiveTablesReducer, HiveTablesHandlers, HiveTablesActionNames } from './actions/HiveTablesReducer';\nimport { TableOutlined, DeleteOutlined, FolderOpenOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nimport AnalysisWorkshop from '../workshop';\nimport { FormattedMessage } from 'react-intl';\nimport { usePartitionSelect } from './pages/usePartitionSelect';\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst initState = {\n    dbs: [],\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n    expandedKeys: []\n}\n\nconst HiveTablesContext = React.createContext()\n\nfunction HiveTables(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const { reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(HiveTablesReducer, initState, HiveTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        search_dbs, expandedKeys\n    } = state\n\n    const { ui: PartitionSelect,\n        form: partitionForm,\n        setOpenTable: setOpenTableForPartition,\n        setError: setPartitionError,\n        partitionColumn,noPartition\n    } = usePartitionSelect()\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n        console.log(id)\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: HiveTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n\n    useEffect(() => {\n        setOpenTableForPartition(openTable)\n    }, [setOpenTableForPartition, openTable])\n\n    return (\n        <HiveTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={<FormattedMessage id=\"analysis_range\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    if (!noPartition && !partitionValues.tableRandom && !(partitionValues.tableStart && partitionValues.tableEnd)) {\n                        setPartitionError(\"Partitions is required.\")\n                        return\n                    }\n                    dispacher({\n                        type: HiveTablesActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionColumn\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionSelect />\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <Input style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={\n                    (e) => {\n                        dispacher({\n                            type: HiveTablesActionNames.SEARCH,\n                            data: { searchValue: e.target.value }\n                        })\n                    }\n                } />\n                <DirectoryTree height={700}\n                    expandedKeys={expandedKeys}\n                    treeData={search_dbs || dbs}\n                    loadData={\n                        async (node) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { loading: true }\n                            })\n                            dispacher({\n                                type: HiveTablesActionNames.LOAD,\n                                data: { dbName: node.key, node, loading: false }\n                            })\n                        }\n                    } expandAction=\"click\" onExpand={(expandedKeys) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { expandedKeys }\n                        })\n                    }} onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>\n        </HiveTablesContext.Provider>\n    )\n}\nexport { HiveTables, HiveTablesContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport Tools from '../../../../common/Tools';\n\nfunction usePartitionSelect() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [partitionColumn, setPartitionColumn] = useState(undefined)\n    const [noPartition, setNoPartition] = useState(false)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    useEffect(() => {\n        const fetch = async () => {\n            if (!openTable) return\n            const [db, table] = openTable.split(\".\")\n            setLoading(true)\n            \n            const res = await proxy.runScript(`!profiler sql 'show partitions ${db}.${table}';`,\n              Tools.getJobName(),Tools.robotFetchParam()\n            )\n            if (res.status === 200) {\n                const data = res.content.data.map(item => {\n                    //dt=2020-08-03/hour=12                    \n                    const [column, value] = item.partition.split(\"/\")[0].split(\"=\")\n                    if (!partitionColumn) {\n                        setPartitionColumn(column)\n                    }\n                    return { column, value }\n                })\n                setData(data)\n                setNoPartition(false)\n                if (data.length === 0) {\n                    setNoPartition(true)\n                }\n                // if (false) {\n                //     setData([{ column: \"hp_stat_date\", value: \"2017-01-02\" }])\n                //     setPartitionColumn(\"hp_stat_date\")\n                //     setNoPartition(false)\n                // }\n\n            }else {\n                setData([])\n                setNoPartition(true)                \n            }\n            setLoading(false)\n        }\n        fetch()\n    }, [openTable])\n\n    const options = data.reverse().map(item => {\n        return <Select.Option value={item.value}>{item.value}</Select.Option>\n    })\n    const ui = () => {\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                {\n                    noPartition && <FormattedMessage id=\"no_partition_msg\" />\n                }\n                {\n                    !noPartition && <Form form={form}>\n                        <Form.Item name=\"tableStart\" label={<FormattedMessage id=\"table_start\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"tableEnd\" label={<FormattedMessage id=\"table_end\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n\n                        <Divider />\n                        <Form.Item name=\"tableRandom\" label={<FormattedMessage id=\"table_random\" />}>\n                            <Select mode=\"tags\">\n                                {options}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                }\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError, partitionColumn, noPartition }\n}\nexport { usePartitionSelect }","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:OpenMySQLTableActionHandler,action:OpenMySQLTableAction} = ActionMaker.buildHandler(async (action)=>{\n    const {partitionValues,openTable,partitionNumValue,workshop} = action.data\n    const [db,table] = openTable.split(\".\")\n    const {partitionColumn,lowerBound,upperBound} = partitionValues\n    const proxy = new ActionProxy()\n    \n    const connectRes = await proxy.get(RemoteAction.DS_MYSQL_CONNECT,{name:db}) \n    const tempTable = Tools.getTempTableName()\n    let whereBlock = \"\"\n    if(partitionColumn){         \n        whereBlock = `where partitionColumn=\"${partitionColumn}\" \n        and lowerBound=\"${lowerBound}\" \n        and upperBound=\"${upperBound}\"\n        and numPartitions=\"${partitionNumValue}\"\n        `\n    }\n\n    const sql = `\n      ${connectRes.content.connect}\n      load jdbc.\\`${openTable}\\` ${whereBlock} as ${tempTable};    \n    `\n    workshop.newSession(\"jdbc\", db, table,{__sql__: sql,__tableName__:tempTable})               \n\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { OpenMySQLTableActionHandler, OpenMySQLTableAction } from './OpenMySQLTableAction'\nclass MysqlTreeActionNames {\n    static OPEN = \"open\"\n}\nconst MysqlTreeHandlers = {\n    ...CommonHandlers,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableActionHandler\n}\nconst MysqlTreeActions = {\n    ...CommonActions,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableAction\n}\n\nfunction MysqlTreeReducer(state, action) {\nreturn MysqlTreeActions[action.type](state, action.data)    \n}\nexport { MysqlTreeActionNames, MysqlTreeReducer, MysqlTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\n\n\nfunction useIntegerStep(props) {\n    const [value,setValue] = useState(props.initialValue || 10)\n    const ui =  ()=>(\n        <Row>\n        <Col span={12}>\n          <Slider\n            min={props.min||10}\n            max={props.max||300}\n            onChange={(value)=>{setValue(value)}}\n            value={value}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={props.min||10}\n            max={props.max||300}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(value)=>{setValue(value)}}\n          />\n        </Col>\n      </Row> \n    )\n    return {ui,value}\n}\nexport {useIntegerStep}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert, Input } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport { useIntegerStep } from '../../common/pages/useIntegerStep';\nimport Tools from '../../../../common/Tools';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\nfunction useMySQLPartition() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(\"\")\n    const [column, setColumn] = useState(\"\")\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    const { ui: partitionNumUI, value: partitionNumValue } = useIntegerStep({\n        initialValue: 10,\n        min: 2,\n        max: 100\n    })\n\n    useEffect(() => {\n        if (openTable) {\n            const [db, table] = openTable.split(\".\")\n            const tempTable = Tools.getTempTableName()\n            const fetch = async () => {                 \n                const res = await proxy.runScript(`                \n                load jdbc.\\`${openTable}\\` as ${tempTable};\n                !desc ${tempTable};\n               `, Tools.getJobName(), {...Tools.robotFetchParam(),__connect__:db})\n               if(res.status===200){\n                  setData(res.content.data)\n               }else {\n                   setData([])\n               }\n            }\n            fetch()\n        }\n    }, [openTable])\n\n   useEffect(()=>{\n       if(column){\n         const fetch = async ()=>{\n             const [db, table] = openTable.split(\".\")\n\n             const res = await proxy.get(RemoteAction.DS_MYSQL_COLUMN_INFO,{\n                dbName:db,tableName:table, columnName:column\n             }) \n             if(res.status === 200){                 \n                 form.setFieldsValue({\n                    lowerBound: res.content.min,\n                    upperBound: res.content.max\n                 })\n             } \n         }\n         fetch()\n       }\n   },[column,openTable])\n\n    //\n    const options = data.filter(item=>item.data_type !== \"string\").map(item => {\n        return <Select.Option value={item.col_name}>{item.col_name}</Select.Option>\n    })\n    const ui = () => {\n        if(options.length === 0){\n            return <><FormattedMessage id=\"no_mysql_parallel\"/></>\n        }\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                <Form form={form}>\n                    <Form.Item name=\"partitionColumn\" label={<FormattedMessage id=\"partitionColumn\" />}>\n                        <Select onChange = {(value)=>{                            \n                            setColumn(value) \n                        }}>\n                            {options}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lowerBound\" label={<FormattedMessage id=\"lowerBound\" />}>\n                        <Input />\n                    </Form.Item>\n\n                    <Divider />\n                    <Form.Item name=\"upperBound\" label={<FormattedMessage id=\"upperBound\" />}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"numPartitions\" label={<FormattedMessage id=\"numPartitions\" />}>\n                        {partitionNumUI()}\n                    </Form.Item>\n                </Form>\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError,partitionNumValue }\n}\nexport { useMySQLPartition }","import React, {  useRef, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { MysqlTreeReducer, MysqlTreeHandlers, MysqlTreeActionNames } from '../actions/MysqlTreeReducer';\nimport { useContextMenu } from '../../../script_console/pages/ContextMenu';\nimport { Menu,Spin,Tree,Modal } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport { FolderOpenOutlined, TableOutlined } from '@ant-design/icons';\nimport { useMySQLPartition } from './useMySQLPartition';\nimport AnalysisWorkshop from '../../workshop';\nimport { FormattedMessage } from 'react-intl';\n\nconst {DirectoryTree} = Tree\nconst initState = {\n    dbs: [],    \n    loading:false,\n    confirm:false,\n    openTable: undefined,\n    error: undefined     \n}\n\nconst MysqlTreeContext = React.createContext()\n\nfunction MysqlTree() {\n    const workshop = AnalysisWorkshop.workshop\n    const [state, dispacher] = useReducerAsync(MysqlTreeReducer, initState, MysqlTreeHandlers)\n    const {dbs,loading,confirm,openTable,error} = state\n\n    const {ui:PartitionUI,form:partitionForm,setOpenTable,setError:setPartitionError,partitionNumValue} = useMySQLPartition()\n\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem        \n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        const fetch = async () => {\n            dispacher({\n                type: \"setState\",\n                data: { loading: true }\n            })\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n            if (res.status === 200) {\n                const treeData = res.content.data.map(item=>{\n                    item.key = item.name\n                    item.title = item.name\n                    item.isLeaf = false\n                    item.children = item.tables.map(table=>{\n                        return {\n                            id: `${item.name}.${table.name}`,\n                            key: `${item.name}.${table.name}`,\n                            title: table.name + (!table.options.indexer?\"\":\"(已被索引)\"),\n                            isLeaf: true,\n                            icon: <TableOutlined/>\n                        }\n                    })\n                    return item\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: { dbs: treeData}\n                })                \n            }\n\n            dispacher({ \n                type: \"setState\",               \n                data: { loading:false}\n            }) \n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{\n        setOpenTable(openTable)\n    },[openTable,setOpenTable])\n   \n\n    return (\n        <div className=\"leftview-box\">\n        <MysqlTreeContext.Provider value={{ dispacher }}> \n        <Modal\n                title={<FormattedMessage id=\"mysql_parallel\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    const {partitionColumn,lowerBound,upperBound} = partitionValues\n                    if(partitionColumn){\n                        if(!lowerBound || !upperBound && partitionNumValue){\n                            setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                            return\n                        }\n                    }\n                    \n                    dispacher({\n                        type: MysqlTreeActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionNumValue                            \n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionUI />\n            </Modal>           \n           <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}                \n                <DirectoryTree height={700}                   \n                    treeData={dbs}\n                    expandAction=\"click\" \n                    onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }                        \n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>  \n        </MysqlTreeContext.Provider>\n        </div>\n    )\n}\nexport { MysqlTree, MysqlTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport \"./leftview.scss\"\nimport { FormattedMessage } from 'react-intl'\nimport { WorkshopTables } from \"./workshop_tables/WorkshopTables\";\nimport { HiveTables } from \"./hive/HiveTables\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../backend_service/RemoteAction\";\nimport { MysqlTree } from \"./datasource/pages/MysqlTree\";\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = {\n            reloaWorkshop: undefined\n        }\n    }\n\n    render() {\n        return <Tabs defaultActiveKey=\"1\" onTabClick={(key) => {\n            if (key === \"3\") {\n                if (this.deltaLakeTreeRef) {\n                    this.deltaLakeTreeRef.reload()\n                }\n            }\n            if (key === \"4\") {\n                if (this.fileSystemTreeRef) {\n                    this.fileSystemTreeRef.reload()\n                }\n            }\n        }}>\n            <TabPane tab={<FormattedMessage id=\"table_workshop\" />} key=\"1\">\n                <div className=\"leftview-box\" >\n                    <WorkshopTables reload={this.state.reloaWorkshop} workshop={this.workshop}></WorkshopTables>\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"hive\" />} key=\"2\">\n                <div className=\"leftview-box\" >\n                    <HiveTables />\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"delta_lake\" />} key=\"3\">\n                <div className=\"leftview-box\" >\n                    <ADeltaLakeTree ref={(et) => this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"file_system\" />} key=\"4\">\n                <div className=\"leftview-box\">\n                    <AFileSystemTree ref={(et) => this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"mysql\" />} key=\"5\">\n                <MysqlTree />\n            </TabPane>\n        </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n\n    buildLoadSQL = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let whereBlock = \"where \"\n        if (options) {\n            whereBlock = whereBlock + Object.keys(options).\n                filter(k => \n                    k !== \"__where__\" \n                    && k !== \"__sql__\"\n                    && k !== \"__tableName__\"\n                    ).\n                map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            if (whereBlock === \"where \") {\n                whereBlock = \"\"\n            }\n        } else whereBlock = \"\"\n\n        // let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        let sql = `load ${prefix}.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n        }\n\n        if(prefix === \"jdbc\"){\n            sql = options.__sql__ || `load jdbc.\\`${db}.${table}\\` ${whereBlock} as ${tableName};` \n            tableName = options.__tableName__ || tableName\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 200) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${Tools.getField(tableInfo.tableName)};\n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        if (prefix === \"hive\") {\n            let _whereBlock = \"where \"\n            if (options && options.__where__) {\n                _whereBlock = _whereBlock + options.__where__\n            } else _whereBlock = \"\"\n\n            const tempTableName = Tools.getTempTableName()\n            sql = `load hive.\\`${db}.${table}\\` ${whereBlock} as ${tempTableName};`\n            sql = sql + `select * from ${tempTableName} ${_whereBlock} as ${tableName};`\n        }\n\n        return { sql, tableName }\n    }\n    showTable = async (prefix, db, table, options) => {\n\n        //an new session,clear the sqls\n        this.sqls = []\n\n        const { tableName, sql } = await this.buildLoadSQL(prefix, db, table, options)\n\n        this.sqls.push({ tableName, sql })\n        this.setState({ loadingTable: true })\n\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({ loadingTable: false })\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId: this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data, schema)\n    }\n\n}","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params) => {\n      if (this.sqls.length < 2) {\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      const res = await this.client.get(RemoteAction.APPLY_GET, { name: currentTable.tableName })\n      if (res.status === 200) {\n         const { data, schema } = JSON.parse(res.content.response)\n         await this.apply({ ...currentTable, _data: data, _schema: schema })\n      }\n      else {\n         await this.apply(currentTable)\n      }\n\n   }\n\n   runSQLAtCurrentTable = async (sql,params) => {      \n      const view = this.sqls.map(item => item.sql).join(\"\")\n      const res = await this.client.runScript(\n         `${view}\n          ${sql}`,\n         Tools.getJobName(),\n         { ...Tools.robotFetchParam(), ...params })\n      return res\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql, _data, _schema } = params\n      this.sqls.push({tableName,sql})\n\n      if (_data && _schema) {\n         this.setCurrentTable(\"\", \"\", tableName, _schema, _data)\n         return 200\n      }\n\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try {\n         const res = await this.client.runScript(view, Tools.getJobName(), {\n            ...Tools.robotFetchParam(),\n            queryType: \"analysis_workshop_apply_action\",\n            analysis_workshop_table_name: tableName,\n            analysis_workshop_sql: JSON.stringify(this.sqls)\n         })\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      } catch (e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }\n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${Tools.getField(this.getLastApplyTable().tableName)} as ${Tools.getField(tableName)};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n\n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <div style={{marginBottom:\"30px\"}}>\n      <Transfer\n    listStyle={{\n      width: 400,\n      height: 300,\n    }}\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n    </div>\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table \n                    pagination={{pageSize:6}}   \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch key={record.field} defaultChecked={record._groupBy} onChange={(checked)=>{\n                        this.enableGroupByField(checked,record)\n                        record._groupBy = checked\n                    }} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <>\n                    <Button key={record.field} style={{marginRight:\"30px\"}} dataref={record} onClick={() => {                         \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button><span>{record._agg && `(${record._agg})`||\"\"}</span></>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{ \n      this.applyFuncToFieldRef.operateField = this.operateField       \n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()              \n      const record = this.columnsRef.state.data.filter(item=>item.field === field)[0]\n      record._agg = `${transformCode} as ${columnName}`\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}>\n          <Input placeholder={\"input the new name here\"} />\n          </Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button key={record.field} dataref={record} onClick={() => { \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        this.applyFuncToFieldRef.operateField = this.operateField\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).filter(field=>{\n             return field !== fields[field]\n         }).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../common/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../common/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\nimport { SetStateActionHandler, SetStateAction } from '../../analysis/common/actions/SetStateAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\nimport AnalysisWorkshop from '../analysis/workshop.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop || AnalysisWorkshop.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","class CommonActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n    static APPLY = \"apply\"\n    static setState = \"setState\"\n}\n\nexport {CommonActionNames} \n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nfunction AddJsonField(props) {\n    const [form] = Form.useForm() \n    const {context,keyPaths} = props\n    const {dispacher} = useContext(context)\n    useEffect(()=>{\n        props.forms.push(form)\n    },[])\n    return (\n        <Form layout=\"inline\" form={form} style={{marginBottom:\"30px\"}}>                                \n        <Form.Item >\n            <Button danger icon={<MinusOutlined />} onClick={() => {\n                dispacher({\n                    type: CommonActionNames.REMOVE_FIELD,\n                    data: {form}\n                })\n            }}></Button>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"add\"/>} name={\"path\"} style={{ width: \"300px\" }}>\n            <Select>\n                {keyPaths.map(item => <Option key={item}>{item}</Option>)}\n            </Select>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"as\"/>} name={\"column\"} style={{ width: \"100px\" }}>\n            <Input />\n        </Form.Item>                        \n</Form>\n    )\n}\nexport {AddJsonField}","import React, { useState, useCallback, useEffect } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport { AddJsonField } from \"../AddJsonField\"\nimport { JsonFieldsContext } from \"../JsonFields\"\nimport Tools from '../../../../common/Tools';\n\nexport const {handler:AddFieldActionHandler,action:AddFieldAction} = ActionMaker.buildHandler(async (action)=>{\n    const {subFields,keyPaths,forms} = action.__state\n    subFields.push(<AddJsonField key={Tools.getJobName()} context={JsonFieldsContext} keyPaths={keyPaths} forms={forms} />)    \n    return {        \n        data: {\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const { form } = action.data\n    const { forms, subFields } = action.__state\n    const targetIndex= forms.indexOf(form)    \n    forms.splice(targetIndex,1)    \n    subFields.splice(targetIndex,1)\n    return {\n        data: {\n            forms,\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\n\nexport const {handler:JsonFieldsApplyActionHandler,action:JsonFieldsApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            const {formValues,operateFiled} = values\n            if (!operateFiled || formValues.length === 0) {\n                return \"Please configure fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n\n            const {formValues,operateFiled} = values\n            const jsonStr = formValues.map(item=>{\n                return `get_json_object(${Tools.getField(operateFiled)},\"${item.path}\") as ${Tools.getField(item.column)}`\n            }).join(\",\")            \n\n            const sql = `select *,${jsonStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { CommonActionNames } from '../../common/CommonActionNames'\nimport { AddFieldAction,AddFieldActionHandler } from './AddFieldAction'\nimport { RemoveFieldAction,RemoveFieldActionHandler } from './RemoveFieldAction'\nimport { JsonFieldsApplyActionHandler, JsonFieldsApplyAction } from './JsonFieldsApplyAction'\n\nclass JsonFieldsActionNames {\n    \n}\n\nconst JsonFieldsHandlers = {\n    ...CommonHandlers,\n    [CommonActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    [CommonActionNames.APPLY]: JsonFieldsApplyActionHandler,\n}\nconst JsonFieldsActions = {\n    ...CommonActions,\n    [CommonActionNames.ADD_FIELD]: AddFieldAction,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    [CommonActionNames.APPLY]: JsonFieldsApplyAction,\n}\n\nfunction JsonFieldsReducer(state, action) {\nreturn JsonFieldsActions[action.type](state, action.data)    \n}\nexport { JsonFieldsActionNames, JsonFieldsReducer, JsonFieldsHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch, Card } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nimport AnalysisWorkshop from '../workshop';\nimport { JsonFieldsReducer, JsonFieldsHandlers } from './actions/JsonFieldsReducer';\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport Tools from '../../../common/Tools';\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFiled: undefined,\n    keyPaths: [],\n    forms: [],\n    subFields: []\n}\n\nconst JsonFieldsContext = React.createContext()\n\nfunction JsonFields(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const data = workshop.currentTable.data.slice(0, 10)\n\n    const [state, dispacher] = useReducerAsync(JsonFieldsReducer, initState, JsonFieldsHandlers)\n    const { operateFiled,\n        keyPaths,\n        error,\n        applySaveRollbackDispacher,\n        forms,\n        subFields\n    } = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(() => {\n        if (operateFiled) {            \n            dispacher({\n                type: CommonActionNames.setState,\n                data:{\n                    subFields:[],\n                    forms: []\n                }\n            })    \n\n            const temp = new Set()            \n            const tempObjs = data.map(item => {\n                try{\n                    return JSON.parse(item[operateFiled])\n                }catch(e){\n                    return undefined\n                }\n            }).filter(item=>  item !== undefined && \n                (typeof(item) === \"object\" || typeof(item) === \"array\"))\n\n            console.log(tempObjs)\n\n            tempObjs.forEach(obj => {\n                Tools.keyPath(\"$\", obj, (key) => {\n                    temp.add(key)\n                })\n            })\n\n            dispacher({\n                type: CommonActionNames.setState,\n                data: { keyPaths: [...temp] }\n            })\n        }\n    }, [operateFiled])\n\n    useEffect(() => {\n        if (applySaveRollbackDispacher) {\n            form.submit()\n        }\n    }, [applySaveRollbackDispacher])\n\n    const apply = useCallback(({workshop,values,forms})=>{\n         console.log(values)\n         console.log(forms.map(item=>{\n             return item.getFieldsValue()\n         })) \n         applySaveRollbackDispacher.dispacher({\n             type:\"setState\",\n             data:{loading:false}\n         })\n    },[applySaveRollbackDispacher])\n\n    return (\n        <JsonFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"600px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    const formValues = forms.map(item=>item.getFieldsValue())\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values: {formValues,operateFiled}\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={JsonFieldsContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item label={<FormattedMessage id=\"choose_json_field\"/>} style={{ width: \"300px\" }}>\n                        <Select\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CommonActionNames.setState,\n                                    data: { operateFiled: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n                </Form>\n                {\n                    operateFiled && <Card title={<Button icon={<PlusOutlined />} onClick={() => {\n                        dispacher({\n                            type: CommonActionNames.ADD_FIELD,\n                            data: {}\n                        })\n                    }}></Button>}>\n                        {\n                            subFields\n                        }\n                    </Card>\n                }\n\n\n\n            </div>\n        </JsonFieldsContext.Provider>\n    )\n}\nexport { JsonFields, JsonFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\nimport {FormattedMessage} from 'react-intl'\nimport { JsonFields } from \"./JsonFields\";\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return  <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab={<FormattedMessage id=\"select_columns\"/>} key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"rename_columns\"/>} key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"transform_columns\"/>} key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"cast_columns_type\"/>} key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"json_fields\"/>} key=\"5\"> \n                       <JsonFields/>                                         \n                    </TabPane>\n                </Tabs>\n            </div>                \n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Input, Form } from 'antd';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport Tools from '../../../common/Tools';\n\nconst ExpressionConst = {\n    EQUAL: \"=\",\n    NON_EQUAL: \"!=\",\n    IN: \"in\",\n    CONTAINS: \"contains\",\n    STARTS_WITH: \"startsWith\",\n    ENDS_WITH: \"endsWith\",\n    LIKE: \"like\",\n    IS_NULL: \"is null\",\n    IS_NOT_NULL: \"is not null\",\n    IS_EMPTY: \"is empty\",\n    IS_NOT_EMPTY: \"is not empty\",\n\n}\n\nconst buildExpression = (item) => {\n    const { field, dataType, compare, condition } = item\n    if (compare === ExpressionConst.IN) {\n\n        let conTemp = \"\"\n\n        switch (dataType) {\n            case \"integer\": case \"long\": case \"float\": case \"double\":\n                conTemp = condition.map(cond => {\n                    return cond\n                }).join(\",\")\n                break\n            default:\n                conTemp = condition.map(cond => {\n                    return `\"${Tools.escapeQuote(cond)}\"`\n                }).join(\",\")\n        }\n        const con = `(${conTemp})`\n        return `${Tools.getField(field)} ${compare} ${con}`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_NULL || compare === ExpressionConst.IS_NULL) {\n        return `${Tools.getField(field)} ${compare}`\n    }\n\n    if (compare === ExpressionConst.IS_EMPTY) {\n        return `${Tools.getField(field)} = \"\"`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_EMPT) {\n        return `${Tools.getField(field)} != \"\"`\n    }\n\n    if (compare === ExpressionConst.LIKE) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}\"`\n    }\n\n    if (compare === ExpressionConst.STARTS_WITH) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}%\"`\n    }\n\n    if (compare === ExpressionConst.ENDS_WITH) {\n        return `${Tools.getField(field)} like \"%${Tools.escapeQuote(condition)}\"`\n    }\n\n    let con = \"\"\n    switch (dataType) {\n        case \"string\":\n            con = `\"${Tools.escapeQuote(condition)}\"`\n            break\n        default: con = condition;\n    }\n    return `${Tools.getField(field)} ${compare} ${con}`\n}\nfunction FilterCondition(props) {\n    const { record, workshop } = props\n    const [compare, setCompare] = useState(undefined)\n    const { dataType, field } = record\n    const [inCandidate, setInCandidate] = useState([])\n    const [inCandidateLoading, setInCandidateLoading] = useState(false)\n    const [form] = Form.useForm()\n    props.forms[field] = form\n\n    const fetch = async () => {\n        if (inCandidate.length === 0 && compare === \"in\") {\n            setInCandidateLoading(true)\n            \n            const res =  await workshop.runSQLAtCurrentTable(`select distinct(${Tools.getField(field)}) as name \n            from ${workshop.getLastApplyTable().tableName} \n            as ${Tools.getTempTableName()};`,{outputSize: 5000, timeout: 10000 })\n            \n            if (res.status === 200) {\n                setInCandidate(res.content.data)\n            }\n            setInCandidateLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [compare])\n\n    const condition = () => {\n        switch (compare) {\n            case ExpressionConst.IS_NULL:\n                return <></>\n            case ExpressionConst.IS_NOT_NULL:\n                return <></>\n            case ExpressionConst.IN:\n                return <Select loading={inCandidateLoading} mode=\"tags\" style={{ width: '300px' }}>\n                    {inCandidate.map(item => {\n                        return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n                    })}\n                </Select>\n\n            case ExpressionConst.LIKE:\n                return <><Input style={{ width: '100px' }} /><span>LIKE 'a%o' means Finds any values that start with 'a' and ends with 'o' </span></>\n\n            default:\n                return <Input style={{ width: '100px' }} />\n        }\n    }\n\n    const ui = () => {\n        return <Form form={form} layout={\"inline\"}>\n            <Form.Item name=\"compare\" initialValue={record.compare}>\n                <Select initialValue={\"=\"}\n                    onChange={(value) => {\n                        setCompare(value)\n                        record.compare = value\n                    }}\n                    placeholder=\"compare\" style={{width:\"100px\"}}>\n                    <Select.Option value=\"=\">=</Select.Option>\n                    <Select.Option value=\"<\">{'<'}</Select.Option>\n                    <Select.Option value=\">\">{'>'}</Select.Option>\n                    <Select.Option value=\">=\">{'>='}</Select.Option>\n                    <Select.Option value=\"<=\">{'<='}</Select.Option>\n                    <Select.Option value=\"!=\">{'!='}</Select.Option>\n                    <Select.Option value={ExpressionConst.LIKE}>{'like'}</Select.Option>\n                    <Select.Option value={ExpressionConst.STARTS_WITH}>{'startsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.ENDS_WITH}>{'endsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IN}>{'in'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NULL}>{'is null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_NULL}>{'is not null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_EMPTY}>{'is empty'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_EMPTY}>{'is not empty'}</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"condition\" initialValue={record.condition} onChange={(value)=>{\n                if(typeof value !== \"string\"){\n                    record.condition = value.target.value\n                }else record.condition = value\n                \n            }}>\n                {condition()}\n            </Form.Item>\n        </Form>\n    }\n    return ui()\n}\nexport { FilterCondition, ExpressionConst, buildExpression }","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider, Collapse } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport { FilterCondition } from \"./FilterCondition\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.forms = {}\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <FilterCondition forms={this.forms} record={record} workshop ={this.workshop}/>\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    buildSelectedRows = ()=>{\n        const fieldToDataType = {}\n        this.state.data.forEach(item=>{\n            fieldToDataType[item.field] = item.dataType\n        })\n\n        const params = Object.entries(this.forms).map(([key,value])=>{\n            const {compare,condition} = value.getFieldsValue()\n            if(compare){\n                return {field:key,compare,condition,dataType:fieldToDataType[key]}\n            }\n            return {}\n        })\n        if(!this.selectedRowKeys) {\n            return []\n        }\n        return params.filter(item => this.selectedRowKeys.includes(item.field))\n    }\n\n    addGroup = (values) => {        \n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        if(!this.selectedRowKeys){\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        \n        const selectedRows = this.buildSelectedRows()\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }        \n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div className=\"common-one-hundred-percent-width common-column-layout\">                     \n            <div style={{marginRight:\"30px\",width:\"80%\"}}>\n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.buildSelectedRows()\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table pagination={{pageSize:5,hideOnSinglePage:true}}            \n            rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n            </div>\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form> \n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\nimport { buildExpression } from \"./FilterCondition\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {}\n        this.currentConditions = {}\n    }\n\n    static buildCondition = (items) => {\n        return items.map(item => {\n            return buildExpression(item)\n        })\n    }\n\n    onNonGroupFilterApply = async (selectedRows) => {\n        if (selectedRows.length === 0) {\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        const filterStr = selectedRows.flatMap(item => {\n            return FilterStation.buildCondition([item])\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${FilterStation.buildCondition(group.data).join(\" and \")})`\n                } else return `(${FilterStation.buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n\n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">\n                        <Compare ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"../../common/actions/AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"../../common/actions/RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../common/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import ActionMaker from \"../../../ActionMaker\"\n\n\nexport const {handler:ApplyActionHandler,action:ApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    const {apply} = action.data     \n    if(apply){\n        apply(action.data)\n    }\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\n\nexport interface UnionApplyValues{\n    unionTable:string,\n    duplicate:boolean\n }\nexport const { handler: UnionApplyHandler, action: UnionApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:UnionApplyValues) => {\n            if (!values.unionTable ) {\n                return \"UnionTable is required.\"\n            }            \n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:UnionApplyValues) => {            \n            const tableName = Tools.getTempTableName()\n\n            let operator = \"union\"\n            if(values.duplicate){\n               operator = \"UNION ALL\" \n            }\n            \n            const sql = `\n            select * from ${workshop.getLastApplyTable().tableName}\n            ${operator}\n            select * from ${Tools.getField(values.unionTable)}\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {UnionApplyHandler,UnionApplyAction} from \"./UnionApplyAction\"\n// --import--\n\nclass UnionStationActionNames {\nstatic UnionApply = \"UnionApply\"\n// --name--\n}\nconst UnionStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[UnionStationActionNames.UnionApply]: UnionApplyHandler,\n// --handler--\n}\nconst UnionStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[UnionStationActionNames.UnionApply]: UnionApplyAction,\n// --action--\n}\n\nfunction UnionStationReducer(state, action) {\nreturn UnionStationActions[action.type](state, action.data)    \n}\nexport { UnionStationActionNames, UnionStationReducer, UnionStationHandlers }","import * as React from 'react'\nimport { Form, Select } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport EngineService from '../../service/EngineService'\n\n\ninterface Props {\n}\n\ninterface TableInWorkshop {\n    tableName:string\n}\nconst { Option } = Select\nconst useSelectUnionTable = () => {\n    // const {dispacher} = React.useContext(UnionStationContext)\n    const [tables,setTables] = React.useState(Array<TableInWorkshop>())    \n    const [form] = Form.useForm()\n    React.useEffect(()=>{\n        const fetch = async()=>{\n            const res = await EngineService.tablesInWorkshop()\n            if(res.status === 200){\n                const tables = res.content as Array<TableInWorkshop>\n                setTables(tables)\n            }\n        }\n        fetch()\n    },[])\n\n    const items = tables.map(table=>{\n        return <Option value={table.tableName}>{table.tableName}</Option>\n    })\n    const ui = ()=>{\n        return (\n          \n            <Form form={form} className=\"login-form\" >           \n                <Form.Item label={<FormattedMessage id=\"union_table\" />} name=\"unionTable\" rules={[{ required: true, message: 'Please select union table!' }]}>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Choose Join Table\"\n                        optionFilterProp=\"children\"                    \n                    > \n                    {items}                   \n                    </Select>\n                </Form.Item> \n                <Form.Item label={<FormattedMessage id=\"allow_duplicate\" />} name=\"duplicate\" rules={[{ required: true, message: 'Please select!' }]}>\n                    <Select                        \n                        style={{ width: 200 }}                        \n                    > \n                      <Option value=\"true\">true</Option>               \n                      <Option value=\"false\">false</Option>               \n                    </Select>\n                </Form.Item>            \n            </Form>\n        )\n    }\n    return {ui,form}\n}\n\nexport { useSelectUnionTable }","import React,{useEffect} from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { UnionStationReducer, UnionStationHandlers, UnionStationActionNames } from './actions/UnionStationReducer'\nimport {useSelectUnionTable} from './SelectUnionTable'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport AnalysisWorkshop from '../workshop'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport { UnionApplyValues } from './actions/UnionApplyAction'\n\ninterface Props {   \n}\n\nconst initState = {\n  applySaveRollbackDispacher: undefined,\n  error:undefined\n}\n\nconst UnionStationContext = React.createContext<{state:any,dispacher:React.Dispatch<any>}|null>(null)\n\nconst UnionStation:React.FunctionComponent<Props> = (props) => {\n    const [state, dispacher] = useReducerAsync(UnionStationReducer, initState, UnionStationHandlers)\n    const {applySaveRollbackDispacher,error} = state\n\n    const {ui:SelectUnionTable, form:unionTableForm} = useSelectUnionTable()\n\n    useEffect(() => {\n      if (applySaveRollbackDispacher) {\n      \n        const {unionTable,duplicate} = unionTableForm.getFieldsValue()\n\n        dispacher({\n          type:CommonActionNames.setState,\n          data: {error:undefined}\n        })\n\n        const values:UnionApplyValues = {unionTable,duplicate: duplicate as boolean}        \n  \n        dispacher({\n          type: UnionStationActionNames.UnionApply,\n          data: {\n            workshop:AnalysisWorkshop.workshop,\n            values\n          }\n        })\n      }\n    }, [applySaveRollbackDispacher])\n\n    return (\n        <UnionStationContext.Provider value={ { state,dispacher} }>\n          <div style={{marginBottom:\"30px\"}}><ApplySaveRollback context={UnionStationContext} workshop={AnalysisWorkshop.workshop} /></div>\n          <SelectUnionTable/>\n      </UnionStationContext.Provider>\n    )\n}\n\nexport { UnionStation, UnionStationContext}","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\nexport interface PivotApplyValues{\n   columnLeft:string,\n   columnHeader:string,\n   columnSum: string,\n   sunFunc:Array<string>\n}\nexport const { handler: PivotApplyHandler, action: PivotApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:PivotApplyValues) => {\n            if (!values.columnHeader || !values.columnLeft || !values.columnSum ) {\n                return \"Three columns are required.\"\n            }\n\n            if(!(values.sunFunc?.length>0)){\n                return \"Agg funcs are required.\"\n            }\n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:PivotApplyValues) => {\n            const tableName = Tools.getTempTableName()\n\n            //`avg`, `max`, `min`, `sum`, `count`.\n            const sql = `\n            run ${workshop.getLastApplyTable().tableName} as Pivot.\\`\\` where \n            columnLeft=\"${values.columnLeft}\"\n            and columnHeader=\"${values.columnHeader}\"\n            and columnSum=\"${values.columnSum}\"\n            and sunFunc=\"${values.sunFunc.map(item=>{\n                return `${item}(${Tools.getField(values.columnSum)})`\n            }).join(\",\")}\"\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {PivotApplyHandler,PivotApplyAction} from \"./PivotApplyAction\"\n// --import--\n\nclass PivotStationActionNames {\nstatic PivotApply = \"PivotApply\"\n// --name--\n}\nconst PivotStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[PivotStationActionNames.PivotApply]: PivotApplyHandler,\n// --handler--\n}\nconst PivotStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[PivotStationActionNames.PivotApply]: PivotApplyAction,\n// --action--\n}\n\nfunction PivotStationReducer(state, action) {\nreturn PivotStationActions[action.type](state, action.data)    \n}\nexport { PivotStationActionNames, PivotStationReducer, PivotStationHandlers }","import React, { useState, useEffect, useContext } from 'react'\nimport { List, Form, Input, Checkbox } from 'antd'\nimport {PivotStationContext} from './PivotStation'\n\ninterface Props {\n}\n\nconst aggList = [`avg`, `max`, `min`, `sum`, `count`]\nconst CheckboxGroup = Checkbox.Group\n\nexport const useAggCheck = () => {\n    \n    const [form] = Form.useForm()\n    \n    const ui = ()=>{\n        return <>\n            <Form form={form}>\n                <Form.Item name=\"aggs\">\n                <CheckboxGroup\n                            options={aggList}                                                        \n                        /> \n                </Form.Item>\n            </Form>\n        </>\n    }\n    return {ui,form}\n}","import React, { useState, useEffect } from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { PivotStationReducer, PivotStationHandlers, PivotStationActionNames } from './actions/PivotStationReducer'\nimport { FormattedMessage } from 'react-intl'\nimport { List, Form, Input, Checkbox, Divider } from 'antd'\nimport AnalysisWorkshop from '../workshop'\nimport { Schema } from '../../../beans/dst'\nimport './PivotStation.scss'\nimport { useDrop, useDrag } from 'ahooks';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport AlertBox from '../../AlertBox'\nimport { PivotApplyValues } from './actions/PivotApplyAction'\nimport {useAggCheck} from './useAggCheck'\n\ninterface Props {\n}\n\nconst initState = {\n  columnLeft: null,\n  columnHeader: null,\n  columnSum: null,\n  applySaveRollbackDispacher: undefined,\n  error: undefined,  \n}\n\nconst PivotStationContext = React.createContext<{ state: any, dispacher: React.Dispatch<any> } | null>(null)\n\nconst PivotStation: React.FunctionComponent<Props> = (props) => {\n  const workshop = AnalysisWorkshop.workshop\n  const schema = workshop.currentTable.schema as Schema\n  const schemaForList = schema.fields.map(field => (field.name))\n  const [state, dispacher] = useReducerAsync(PivotStationReducer, initState, PivotStationHandlers)\n\n  const { columnLeft, columnHeader, columnSum, applySaveRollbackDispacher, error } = state\n\n  \n\n  const [dragging, setDragging] = useState<string | null>(null);\n\n  const getDragProps = useDrag({\n    onDragStart: (data) => {\n      setDragging(data);\n    },\n    onDragEnd: () => {\n      setDragging(null);\n    },\n  });\n\n  const [dropPropHeader, { isHovering: isHoveringHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnHeader: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsLeftHeader, { isHovering: isHoveringLeftHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnLeft: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsSum, { isHovering: isHoveringSum }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnSum: content\n        }\n      })\n    },\n  });\n\n  const tips = (isHover: boolean, columnName: string | null) => {\n    return isHover ? <FormattedMessage id=\"drop_column\" /> : (columnName ? columnName : <FormattedMessage id=\"drag_column\" />)\n  }\n\n  useEffect(() => {\n    if (applySaveRollbackDispacher) {\n      \n      dispacher({\n        type:CommonActionNames.setState,\n        data: {error:undefined}\n      })\n\n      const {aggs} = aggForm.getFieldsValue()\n      const values: PivotApplyValues = { columnHeader, columnSum, columnLeft, sunFunc:aggs }\n      dispacher({\n        type: PivotStationActionNames.PivotApply,\n        data: {\n          workshop,\n          values\n        }\n      })\n    }\n  }, [applySaveRollbackDispacher])\n\n  const {ui:aggUI,form:aggForm} = useAggCheck()\n\n  return (\n    <PivotStationContext.Provider value={{ state, dispacher }}>\n      {\n        error && <AlertBox message={error}></AlertBox>\n      }\n      <div className=\"pivot-station-commands\"><ApplySaveRollback context={PivotStationContext} workshop={workshop} /></div>\n      <div className=\"pivot-station-app\">\n        <div className=\"pivot-station-fields\">\n          <List\n            className=\"pivot-station-fields-list\"\n            header={<><Input placeholder=\"search\" /></>}\n            bordered\n            dataSource={schemaForList}\n            renderItem={item => (\n              <List.Item >\n                <div {...getDragProps(item)}>{item}</div>\n              </List.Item>\n            )}\n          />\n        </div>\n        <div className=\"pivot-station-bigbox\">\n          <div className=\"pivot-station-left\" {...dropPropsLeftHeader}>\n            <span className=\"pivot-common-font\"><FormattedMessage id=\"column_left\" /> </span><br /> {tips(isHoveringLeftHeader, columnLeft)}</div>\n          <div className=\"pivot-station-body\">\n            <div className=\"pivot-station-header\" {...dropPropHeader}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_header\" /></span> <br />{tips(isHoveringHeader, columnHeader)}\n            </div>\n            <div className=\"pivot-station-content\" {...dropPropsSum}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_sum\" /></span> <br /> {tips(isHoveringSum, columnSum)}              \n              <Divider/> \n              {aggUI()}             \n            </div>\n          </div>\n        </div>\n      </div>\n    </PivotStationContext.Provider>\n  )\n}\n\nexport { PivotStation, PivotStationContext }","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\n// --import--\n\nclass AnalysisPluginStationActionNames {\n// --name--\n}\nconst AnalysisPluginStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n// --handler--\n}\nconst AnalysisPluginStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n// --action--\n}\n\nfunction AnalysisPluginStationReducer(state, action) {\nreturn AnalysisPluginStationActions[action.type](state, action.data)    \n}\nexport { AnalysisPluginStationActionNames, AnalysisPluginStationReducer, AnalysisPluginStationHandlers }","import { ActionProxy } from '../backend_service/ActionProxy';\nimport Tools from './Tools'\n\nexport const FormTypeEnum = {\n    input: \"input\",\n    select: \"select\",\n    switch: \"switch\"    \n}\nexport interface SetChunk {\n    raw: string,\n    key: string,\n    comamnd: string\n    original_command: string,\n    option: Map<string, string>\n    mode: string,\n    formType: \"input\"\n}\n\nexport interface SelectChunk {\n    raw: string,\n    tableName: string\n}\n\n\n\nexport interface InputType {\n    name: string\n    label?: string\n    formType:\"input\"\n    onShow?:string\n    required:false\n}\n\nexport interface SelectType {\n    name: string\n    label?: string\n    optionTable?: string\n    optionSql?: string\n    optionStr?: string\n    selectMode:\"multiple\"\n    formType:\"select\" \n    onShow?:string \n    required:false  \n}\n\nexport interface SwitchType {\n    name: string\n    label?: string\n    formType:\"switch\"\n    onShow?:string\n    required:false\n}\n\n\ntype SQLChunk = SetChunk | SelectChunk\n\nexport type FormType = InputType | SelectType | SwitchType\n\nexport class SQLAnalysisUtils {\n    private _sql: string\n    private sqls: Array<SQLChunk> = []\n    constructor(sql:string) {\n        this._sql = sql        \n    }\n     build = async()=>  {\n        const proxy = new ActionProxy()\n        const analyzedScriptContent = await proxy.runScript(this._sql, Tools.getJobName(), { executeMode: \"analyze\" })\n        if (analyzedScriptContent.status !== 200) {\n            return this\n        }\n        this.sqls = analyzedScriptContent.content as Array<SQLChunk>\n        return this\n    }\n\n    userInputs=()=> {\n        const userInputs = this.sqls.filter(sql => {\n            return (sql as SetChunk).mode === \"defaultParam\" \n        }).map(item => item as SetChunk)\n        return userInputs\n    }\n    toSql=(values: {[key:string]:any}) =>{        \n        const buffer = Object.keys(values).map(k => {\n            const key = k\n            const value = values[k]\n            let newv = `'''${value}'''`\n            if (!value) {\n                newv = `\"\"`\n            }\n            return `set ${key}=${newv};`\n        })\n        return `\n          ${buffer.join(\"\\n\")}\n          ${this._sql}\n        `\n    }\n}","import React, { useState, useCallback, useEffect,useRef } from 'react';\nimport { Form, Input, Divider, Card, Checkbox, Select } from 'antd';\nimport { SQLAnalysisUtils, SelectType } from './SQLAnalysisUtils';\nimport { SetChunk, FormType, FormTypeEnum } from '../common/SQLAnalysisUtils'\nimport Tools from './Tools';\nimport { ActionProxy } from '../backend_service/ActionProxy';\nimport RemoteAction from '../backend_service/RemoteAction';\nimport { FormattedMessage } from 'react-intl'\nimport AnalysisWorkshop from '../v1/analysis/workshop';\n\nexport interface SelectItemData {\n    name:string\n    value:string\n}\n\nexport interface AnalysisPlugin {\n    name:string\n    content:string\n}\nexport const useAnalysisPlugin = (name: string) => {\n    const [form] = Form.useForm()\n    const [userInputs, setUserInputs] = useState<Array<SetChunk>>([])\n    const [fieldLoading, setFieldLoading] = useState<{[key: string]: any}>({})\n    const [fieldData, setFieldData] = useState<{[key: string]: any}>({})\n    const analysisUtils = useRef<SQLAnalysisUtils|null>(null)\n    // const [plugin, setPlugin] = useState<AnalysisPlugin>(null)\n    const proxy = new ActionProxy()\n    useEffect(() => {\n        const fetch = async () => {            \n            const res = await proxy.get(RemoteAction.ANALYSIS_PLUGIN_GET,{name})            \n            if(res.status===200){\n                const plugin = res.content as AnalysisPlugin                                \n                analysisUtils.current = await new SQLAnalysisUtils(plugin.content).build()                \n                setUserInputs(analysisUtils.current?.userInputs())\n            }                        \n        }\n        fetch()\n    }, [])\n\n    const fetchSelect = useCallback((select: SelectType) => {\n        const _fetch = async () => { \n            if(fieldData[select.name] && Object.keys(fieldData[select.name]).length > 0){\n               return \n            }           \n            if (select.optionStr) {\n                setFieldData({\n                    [select.name]: select.optionSql?.split(\",\").map((item) => {\n                        return { name: item, value: item }\n                    })\n                })\n                return\n            }            \n            const tableName = Tools.getTempTableName()\n            if (select.optionTable) {\n\n                if(select.optionTable === \"__current_table_fields__\"){\n                    const data = AnalysisWorkshop.workshop.currentTable.schema.fields.map((item:{name:string})=>{\n                        return {name:item.name,value:item.name}  \n                    })\n                    setFieldData({ [select.name]: data })\n                    return \n                }\n\n                const res = await proxy.runScript(`select * from ${select.optionTable} as ${tableName}`, Tools.getJobName(), Tools.robotFetchParam())\n                let data = [] as Array<SelectItemData>\n                if (res.status === 200) {\n                    data = res.content.data as Array<SelectItemData>\n                }\n                setFieldData({ [select.name]: data })\n                return\n            }\n            if (select.optionSql) {                              \n                const res = await proxy.runScript(`${select.optionSql}`, Tools.getJobName(), Tools.robotFetchParam())\n                let data = [] as Array<SelectItemData>\n                if (res.status === 200) {\n                    data = res.content.data as Array<SelectItemData>\n                }\n                setFieldData({ [select.name]: data })\n                return\n            }\n        }\n        _fetch()\n    }, [])\n\n    const toFormType = useCallback((sqlChunk: SetChunk) => {\n        let formItem = {...sqlChunk.option,name:sqlChunk.key} as unknown as FormType        \n        const mappings = {\n            [FormTypeEnum.input]: () => {\n                return <Form.Item\n                    required={formItem.required}\n                    name={formItem.name}\n                    key={formItem.name}\n                    initialValue={Tools.unQuote(sqlChunk.comamnd)}\n                    label={formItem.label || formItem.name}>\n                    <Input />\n                </Form.Item>\n            },\n            [FormTypeEnum.select]: () => {\n                return <Form.Item\n                    required={formItem.required}\n                    name={formItem.name}\n                    key={formItem.name}\n                    initialValue={Tools.unQuote(sqlChunk.comamnd)}\n                    label={formItem.label || formItem.name}>\n                    <Select showSearch onFocus={() => {\n                        fetchSelect(formItem as SelectType)\n                    }} loading={fieldLoading[formItem.name] || false} mode={(formItem as SelectType).selectMode}>\n                        {console.log(fieldData)}\n                        {fieldData[formItem.name]?.map((item:SelectItemData) => {\n                            return <Select.Option key={item.value} value={item.value}>{item.name}</Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            }\n        }\n        return mappings[formItem.formType]()\n    }, [fieldData])\n    const ui = () => {\n        return <>\n            <Form form={form}>\n                {\n                    userInputs.map(sqlChunk => {\n                        return toFormType(sqlChunk)\n                    })\n                }\n\n            </Form>\n        </>\n    }\n    return { ui, form ,analysisUtils}\n}","import React,{useEffect,useState,useRef, MutableRefObject} from 'react'\nimport { Form } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {useAnalysisPlugin} from '../../../common/useAnalysisPlugin'\nimport { FormInstance } from 'antd/lib/form'\ninterface Props {  \n    pluginName:string,\n    form:MutableRefObject<any> \n    analysisUtils:MutableRefObject<any> \n}\n\nconst AnalysisPluginForm:React.FunctionComponent<Props> = (props:Props) => {       \n    const {ui,form,analysisUtils} = useAnalysisPlugin(props.pluginName)\n    props.form.current = form\n    props.analysisUtils.current = analysisUtils.current\n    useEffect(()=>{\n        // const fetch = async()=>{          \n        // }\n        // fetch()\n       },[])    \n    return <>\n       {ui()}\n    </>\n    \n}\n\nexport { AnalysisPluginForm }","import React, { useEffect, useRef } from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Select } from \"antd\"\nimport { AnalysisPluginStationReducer, AnalysisPluginStationHandlers } from './actions/AnalysisPluginStationReducer'\nimport { FormattedMessage } from 'react-intl'\nimport { ActionProxy } from '../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../backend_service/RemoteAction'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport { AnalysisPlugin } from '../../../common/useAnalysisPlugin'\nimport { AnalysisPluginForm } from './AnalysisPluginForm'\nimport { FormInstance } from 'antd/lib/form'\nimport './AnalysisPlugin.scss'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport AnalysisWorkshop from '../workshop'\nimport Tools from '../../../common/Tools'\nimport { SQLAnalysisUtils, FormType } from '../../../common/SQLAnalysisUtils'\n\ninterface Props {\n}\n\nconst initState = {\n  plugins: [] as Array<AnalysisPlugin>,\n  pluginName: \"\",\n  applySaveRollbackDispacher: undefined,\n  applyToken: Tools.getJobName()\n}\n\nconst AnalysisPluginStationContext = React.createContext<{ state: any, dispacher: React.Dispatch<any> } | null>(null)\n\nconst AnalysisPluginStation: React.FunctionComponent<Props> = (props) => {\n  const [state, dispacher] = useReducerAsync(AnalysisPluginStationReducer, initState, AnalysisPluginStationHandlers)\n  const proxy = new ActionProxy()\n  const formRef = useRef<FormInstance | null>(null)\n  const analysisUtilsRef = useRef<SQLAnalysisUtils | null>(null)\n\n  const { applySaveRollbackDispacher, pluginName, plugins, applyToken } = state\n\n\n  useEffect(() => {\n    const fetch = async () => {\n      const res = await proxy.get(RemoteAction.ANALYSIS_PLUGIN_LIST, {})\n      if (res.status === 200) {\n        dispacher({\n          type: CommonActionNames.setState,\n          data: {\n            plugins: res.content as Array<AnalysisPlugin>\n          }\n        })\n      }\n    }\n    fetch()\n  }, [])\n\n\n  const apply = async () => {\n    if (applySaveRollbackDispacher) {\n      const dataValues = formRef.current?.getFieldsValue()\n      const analysisUtils = analysisUtilsRef.current  \n      \n      // const requiredFields = analysisUtils?.userInputs().filter(item=>{\n      //   let formItem = {...item.option,name:item.key} as unknown as FormType\n      //   formItem.required        \n      // }).map(item=>item.key)\n\n      // let fail:String\n      // requiredFields?.forEach(item=>{\n      //    if((dataValues as {[key:string]:any})[item] === undefined){\n            \n      //    }\n      // })\n\n      const sqls = analysisUtils?.toSql(dataValues as {})\n      const workshop = AnalysisWorkshop.workshop\n      const currentTable = workshop.getLastApplyTable().tableName\n      const tableName = Tools.getTempTableName()\n      const sql = `\n      set __current_table__=\"${currentTable}\";\n      set __new_table__=\"${tableName}\";\n      ${sqls}\n      `      \n      const status = await workshop.apply({\n        tableName,\n        sql\n      })\n      if (status === 200) {\n        workshop.refreshOperateStation()\n      }\n      applySaveRollbackDispacher({\n        type: \"setState\",\n        data: { loading: false }\n      })\n    }\n  }\n\n  useEffect(() => {\n    apply()\n  }, [applyToken])\n\n  return (\n    <AnalysisPluginStationContext.Provider value={{ state, dispacher }}>\n      <ApplySaveRollback context={AnalysisPluginStationContext} />\n      <div className=\"analysis-plugin-select\">\n        <Select showSearch onChange={(value) => {\n          dispacher({\n            type: CommonActionNames.setState,\n            data: {\n              pluginName: value\n            }\n          })\n        }} filterOption style={{ width: \"200px\" }}>\n          {\n            plugins.map((item: AnalysisPlugin) => {\n              return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n            })\n          }\n        </Select>\n      </div>\n      <div className=\"analysis-plugin-form\">\n        {pluginName && <AnalysisPluginForm analysisUtils={analysisUtilsRef} pluginName={pluginName} form={formRef} />}\n      </div>\n    </AnalysisPluginStationContext.Provider>\n  )\n}\n\nexport { AnalysisPluginStation, AnalysisPluginStationContext }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport { LimitStation } from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nimport { FormattedMessage } from 'react-intl'\nimport { Resizable } from \"re-resizable\";\nimport AnalysisWorkshop from \"./workshop\";\nimport Tools from \"../../common/Tools\";\nimport { UnionStation } from \"./union/UnionStation\";\nimport { PivotStation } from \"./pivot/PivotStation\";\nimport { AnalysisPluginStation } from \"./plugin/AnalysisPluginStation\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = AnalysisWorkshop.workshop\n        this.state = { key: Tools.getJobName() }\n    }\n\n    reload = () => {\n        this.setState({ key: Tools.getJobName() })\n    }\n\n    render() {\n        return <div className=\"os-pane\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"os-tabs\">\n                <Resizable style={{ borderBottom: \"solid\", width: \"100%\", overflow: \"scroll\" }}>\n                    <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>\n                        <TabPane tab={<FormattedMessage id=\"project\" />} key={1} >\n                            <ProjectStation parent={this}></ProjectStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"filter\" />} key={2} >\n                            <FilterStation parent={this}></FilterStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"agg\" />} key={4} >\n                            <AggStation parent={this}></AggStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"order\" />} key={5} >\n                            <OrderStation parent={this}></OrderStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"pivot\" />} key={10} >\n                            <PivotStation/>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"more\" />} key={100}>\n                            <Tabs tabPosition=\"left\">\n                                <TabPane tab={<FormattedMessage id=\"join\" />} key={3}>\n                                    <JoinStation parent={this}></JoinStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"limit\" />} key={6} >\n                                    <LimitStation parent={this}></LimitStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"window\" />} key={7} >\n                                    <WindowStation parent={this}></WindowStation>\n                                </TabPane>                                \n                                <TabPane tab={<FormattedMessage id=\"union\" />} key={9} >\n                                    <UnionStation/>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"dash\" />} key={8} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"plugin\" />} key={11} >\n                                    <AnalysisPluginStation></AnalysisPluginStation>\n                                </TabPane>\n                            </Tabs>\n                        </TabPane>\n\n                    </Tabs>\n                </Resizable>\n            </div>\n\n        </div >\n    }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.setState({reloaWorkshop:Tools.getJobName()})\n    }\n    \n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\n\n\n\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                  this.wrapper(text)\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\nimport AnalysisWorkshop from \"./workshop\";\nimport AceEditor from \"react-ace\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = AnalysisWorkshop.workshop\n    }\n\n    wrapper = (v)=>{\n        return <div onDoubleClick={(evt)=>{                \n            evt.preventDefault()\n            evt.stopPropagation()\n            this.setState({view:{enabled:true,content:v}})\n    \n        }}>{v}</div>\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n       \n\n        if ((typeof type) === \"object\" || (typeof type) === \"array\") {\n            return (value, record) => {                \n                const v = JSON.stringify(value)\n               return this.wrapper(v) \n            }\n        }\n\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return  this.wrapper(value)\n            }\n            default:\n                return (value, record) => { return String(value) }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        }\n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                width: 200,\n                textWrap: 'word-break',\n                ellipsis: {showTitle:true},\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows, isDash })\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n    \n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table                 \n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: 'max-content' }}\n                \n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.view.content || \"\"}\n                    ></AceEditor>                \n            </Modal>\n        </div>\n        )\n    }\n\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport OperateStation from './OperateStation';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components'\n\nfunction OperateStationWrapper(props) {\n    const ButtonGroup = styled.div`\n      display:flex;\n      align-items:right;    \n    ` \n    const handle = useFullScreenHandle();\n    return (\n        <div className=\"common-one-hundred-percent-width\">\n            <Collapse style={{marginBottom:\"10px\"}}>\n                <Collapse.Panel header={<>\n                    <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n                <Divider type=\"vertical\"/>\n                <FormattedMessage id=\"operate_panel\"/>                \n                {/* <span style={{marginLeft:\"50px\",border:\"2px dash\"}}>\n                 <Button type=\"primary\">Apply</Button> \n                 <Divider type=\"vertical\"/> <Button type=\"primary\">Save As</Button> \n                 <Divider type=\"vertical\"/> <Button>Rollback</Button> \n                </span> */}\n                \n                </>}>                    \n                    <FullScreen handle={handle}>\n                        <OperateStation ref={(et) => AnalysisWorkshop.workshop.stationRef = et} />\n                    </FullScreen>\n                </Collapse.Panel>\n            </Collapse>\n\n        </div>\n    )\n}\nexport { OperateStationWrapper }","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport RealTimeViewTable from './RealTimeViewTable';\nimport { Button, Card, Collapse, Divider } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl';\n\nfunction RealTimeTableWrapper(props) {\n    const handle = useFullScreenHandle();\n    return (\n        <Collapse defaultActiveKey={\"1\"} style={{ marginBottom: \"30px\",width: \"100%\" }}>\n            <Collapse.Panel key=\"1\" header={<>\n            {AnalysisWorkshop.workshop.sessionId && <>            \n            <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n            <Divider type=\"vertical\"/>\n            </>}            \n            <FormattedMessage id=\"data_panel\" /></>}>\n                <FullScreen handle={handle}>                    \n                    <RealTimeViewTable tableStyle={{ width: \"90%\" }} ref={(et) => AnalysisWorkshop.workshop.displayRef = et} />\n                </FullScreen>\n            </Collapse.Panel>\n        </Collapse>\n    )\n}\nexport { RealTimeTableWrapper }","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { OperateStationWrapper } from \"./OperateStationWrapper\";\nimport { RealTimeTableWrapper } from \"./RealTimeTableWrapper\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"temp\", \"\", \"cc2\", {})\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            //return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n            return <OperateStationWrapper />\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <div className=\"ws-table-pane\">\n                    <RealTimeTableWrapper />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister, enableLogin, enableConsole } = action.data\n    const params = {}\n    if(enableRegister !== undefined){\n        params.register = enableRegister\n    }\n    if(enableLogin !== undefined){\n        params.login = enableLogin\n    }\n    if(enableConsole !== undefined){\n        params.console = enableConsole\n    }    \n    \n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, params)\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    enableConsole: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,\n        enableConsole,\n        applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableRegister: Boolean(appInfo.content.register),\n                    enableConsole: Boolean(appInfo.content.console),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Enable Console(SQL)\"\n                        name=\"enableConsole\"\n                    >\n                        <Switch defaultChecked={enableConsole} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit, remove: externalRemove } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error, setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => {\n                            if (externalRemove) {\n                                externalRemove({row,setLoading})\n                            }\n                            remove(index)\n                        }\n                        }>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {\n        if (!editorMode) {\n            const newColumns = columns.map(item => {\n                item[\"render\"] = (text, row, index) => {\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n                columns={newColumns}\n                dataSource={data}\n                pagination={false}\n            />\n        }\n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error} />}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading, setEditorMode, setError }\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        remove: async ({row,setLoading}) => {\n            setLoading(true)\n            setError(undefined)\n            const res = await proxy.post(RemoteAction.ENGINE_REMOVE, {id:row.id})\n            if(res.status !== 200){\n                setLoading(false)\n                setError(res.content)\n                return\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Input, Form, Card, Button, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\n\nfunction ChangePassword() {\n    const [error, setError] = useState(undefined)\n    const [applySuccess, setApplySuccess] = useState(undefined)\n\n    const submit = useCallback(async (values) => {\n        const { password, newPassword, _newPassword } = values\n        if (newPassword !== _newPassword) {\n            setError(\"Two new passwords are not the same\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = proxy.post(RemoteAction.USER_CHANGE_PASSWORD, values)\n        setApplySuccess(\"Update password successfully.\")\n    }, [])\n\n    return <Card className=\"common-child-center\">\n        {applySuccess && <Alert\n            closable\n            message=\"Success\"\n            description=\"Apply Success\"\n            type=\"success\"\n            showIcon\n        />}\n        {error && <Alert\n            closable\n            message=\"Fail\"\n            description={error}\n            type=\"error\"\n            showIcon\n        />}\n        <Form className=\"login-form\" onFinish={(values) => {\n            submit(values)\n        }}>\n\n            <Form.Item\n                label=\"Oringinal Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your oringinal password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"_newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password again!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    </Card>\n}\n\nexport default ChangePassword","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\nimport ChangePassword from './pages/ChangePassword';\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"website-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['website-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"website-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"website-settings\"}\n                                })\n                            }}>Website Settings</Menu.Item>                                                         \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"website-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                      \n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Button } from 'antd';\nimport AlertBox from '../../../AlertBox';\nimport { FormattedMessage } from 'react-intl';\n\nfunction useUserConfig(props) {\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [current, setCurrent] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    const formItemLayout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 },\n    };\n    const getParams = () => {\n        return form.getFieldsValue()\n    }\n    const ui = ({ formItems, title, submit }) => (\n        <div className=\"common-margin common-child-center\" {...formItemLayout}>\n            <Card title={title} style={{ width: props?.width||\"50%\" }}>\n                <Form form={form}>\n                    {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                    {formItems}\n                </Form>\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        submit\n                    }><FormattedMessage id=\"apply\" /></Button>\n                </Form.Item>\n            </Card>\n        </div>\n    )\n    return { ui, form, setError, setLoading, getParams,setCurrent,current,setSuccess}\n}\nexport { useUserConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\n\n\nfunction DefaultBackend(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const [engine,setEngine] = useState(undefined)\n    const submit = async () => {\n        if(!engine){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_default_backend\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item></>\n    })\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\nimport { useIntegerStep } from '../../../analysis/common/pages/useIntegerStep';\n\n\nfunction ApplyTimeout(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const {ui:timeoutUi,value:timoutValue} = useIntegerStep({\n        initialValue:UIMaker.extraOption()[\"apply_timeout\"] || 10\n    })    \n    const submit = async () => {\n        if(!timoutValue){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { apply_timeout: timoutValue })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_apply_timeout\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {timoutValue}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                {timeoutUi()}\n            </Form.Item></>\n    })\n}\nexport { ApplyTimeout }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Teams(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.TEMA_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Teams }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Input, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport { useUserConfig } from '../../common/pages/useUserConfig';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\nfunction MySQL() {\n    const { ui, setError, setSuccess, form } = useUserConfig()\n    const submit = async () => {\n        let { host, port, db, user, password, name } = form.getFieldsValue()\n        if (!name) {\n            name = db\n        }\n        if (!port) {\n            port = \"3306\"\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.DS_ADD, { \n            host, port, db, user, password, name, format: \"jdbc\",jType:\"mysql\" })\n        if (res.status === 200) {\n            setSuccess(\"Create Connect Success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n    return ui(\n        {\n            title: <FormattedMessage id=\"connect_mysql\" />,\n            submit,\n            formItems: <>\n                <Form.Item name=\"host\" required={true} label={<FormattedMessage id=\"host\" />}>\n                    <Input placeholder=\"127.0.0.1\" />\n                </Form.Item>\n                <Form.Item name=\"port\" initialValue={\"3306\"} label={<FormattedMessage id=\"port\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"db\" required={true} label={<FormattedMessage id=\"db\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"user\" required={true} label={<FormattedMessage id=\"user\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"password\" required={true} label={<FormattedMessage id=\"password\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"name\" label={<FormattedMessage id=\"alias\" />}>\n                    <Input />\n                </Form.Item>\n            </>\n        }\n    )\n}\nexport { MySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction ListMySQL() {\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        remove: async(row) =>{\n            const res = await proxy.post(RemoteAction.DS_REMOVE,{id:row.id})\n            if(res.status === 200){\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.DS_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\nexport { ListMySQL }","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\n// --import--\n\nclass SetupEngineFromCloudActionNames {\n// --name--\n}\nconst SetupEngineFromCloudHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n// --handler--\n}\nconst SetupEngineFromCloudActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n// --action--\n}\n\nfunction SetupEngineFromCloudReducer(state, action) {\nreturn SetupEngineFromCloudActions[action.type](state, action.data)    \n}\nexport { SetupEngineFromCloudActionNames, SetupEngineFromCloudReducer, SetupEngineFromCloudHandlers }","import React,{useEffect,useState} from 'react'\nimport {Divider, Form, List, Typography} from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n    name:string\n}\n\ninterface EngineCreateStatusResp {\n    status:number,\n    message: Array<string>,\n}\n\nconst UseEngineCreateLoading:React.FunctionComponent<Props>  = (props:Props) => {\n    const [resp,setResp] = useState<EngineCreateStatusResp|null>(null)\n    const [timer,setTimer] = useState<any>(null)\n\n\n    useEffect(()=>{\n        const fetch = async()=>{\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_STATUS,{owner: props.name})\n            if(res.status === 200){\n                const temp = res.content as EngineCreateStatusResp\n                setResp(temp)\n            }\n        }\n        const temp = setInterval(fetch,3000)\n        setTimer(temp)\n        return ()=>{\n            clearInterval(timer)\n        }\n    },[])\n\n\n    return (\n        <>\n            <Divider orientation=\"left\"><FormattedMessage id={\"a_4\"}/></Divider>\n            <List\n                bordered\n                dataSource={resp?.message}\n                renderItem={item => (\n                    <List.Item>\n                        {item}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n    \n}\n\nexport {UseEngineCreateLoading}","import React,{useEffect} from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { SetupEngineFromCloudReducer, SetupEngineFromCloudHandlers } from './actions/SetupEngineFromCloudReducer'\nimport { FormattedMessage } from 'react-intl'\nimport {useUserConfig} from \"../../analysis/common/pages/useUserConfig\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport {Col, Divider, Form, Input, Result, Select, Slider, Switch} from \"antd\";\nimport {UseEngineCreateLoading} from \"./UseEngineCreateLoading\";\nimport {CommonActionNames} from \"../../analysis/common/CommonActionNames\";\n\ninterface Props {   \n}\n\nconst initState = {\n  loadingPage: false,\n  engineName:  \"\"\n}\n\nconst SetupEngineFromCloudContext = React.createContext<{state:any,dispacher:React.Dispatch<any>}|null>(null)\n\nconst SetupEngineFromCloud:React.FunctionComponent<Props> = (props) => {\n    const [state, dispacher] = useReducerAsync(SetupEngineFromCloudReducer, initState, SetupEngineFromCloudHandlers)\n    const {loadingPage,engineName} = state;\n    const { ui, setError,getParams } = useUserConfig({width:\"70%\"})\n    const submit = async ()=>{\n        const proxy = new ActionProxy()\n        const params = getParams()\n        const res = await proxy.post(RemoteAction.CLOUD_CREATE_ENGINE,params)\n        if(res.status === 200){\n            setError(\"\")\n            dispacher({\n                type: CommonActionNames.setState,\n                data: {\n                    loadingPage: true,\n                    engineName: params[\"owner\"]\n                }\n\n            })\n        }else {\n            try {\n                setError(JSON.parse(res.content)?.message || \"Unknown Error\")\n            }catch (e){\n                setError(e.description)\n            }\n\n        }\n    }\n\n    useEffect(()=>{\n      // const fetch = async()=>{          \n      // }\n      // fetch()\n     },[])\n\n    return (\n        <SetupEngineFromCloudContext.Provider value={ { state,dispacher} }>\n            <div>\n                {\n                    loadingPage ?\n                        <UseEngineCreateLoading name={engineName}/>\n                        : ui({\n                        title: <FormattedMessage id=\"input_message\"/>,\n                        submit,\n                        formItems: <>\n                            <Result\n                                status=\"warning\"\n                                title={<FormattedMessage id=\"a_1\"/>}\n                                extra={<FormattedMessage id=\"a_2\"/>}\n                            />\n                            <Divider orientation=\"left\"><FormattedMessage id=\"aliyun_related\"/></Divider>\n                            <Form.Item name={\"owner\"} label={<FormattedMessage id=\"engine_name\"/>} help={\"必填\"}>\n                                <Input />\n                            </Form.Item>\n                            <Form.Item name={\"OSSBucket\"} label={<FormattedMessage id=\"OSSBucket\"/>} help={\"默认bucket名称,比如：mlsql-release-repo\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"AccessKeyID\"} label={<FormattedMessage id=\"access_key_id\"/>} help={\"必填\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"AccessKeySecret\"} label={<FormattedMessage id=\"access_key_secret\"/>} help={\"必填\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"OSSAccessKeyID\"} label={<FormattedMessage id=\"oss_access_key_id\"/>} help={\"默认同 AccessKeySecret\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"OSSAccessKeySecret\"} label={<FormattedMessage id=\"oss_access_key_secret\"/>} help={\"默认同 AccessKeySecret\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"ReginID\"} label={<FormattedMessage id=\"regin_id\"/>} initialValue={\"cn-hangzhou\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item valuePropName=\"checked\"  initialValue={true} name={\"EndpointPublicAccess\"} label={<FormattedMessage id=\"endpoint_public_access\"/>} >\n                                <Switch  />\n                            </Form.Item>\n                            <Divider orientation=\"left\"><FormattedMessage id=\"cluster_related\"/></Divider>\n                            {/*<Form.Item name={\"K8sAddress\"} label={<FormattedMessage id=\"K8sAddress\"/>} help={\"选填\"}>*/}\n                            {/*    <Input/>*/}\n                            {/*</Form.Item>*/}\n                            <Form.Item name={\"DriverCoreNum\"} label={<FormattedMessage id=\"driver_core_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1c',\n                                        2: '2c',\n                                        4: '4c',\n                                        8: '8c'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"DriverMemory\"} label={<FormattedMessage id=\"driver_memory\"/>} initialValue={2}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        2: '2g',\n                                        4: '4g',\n                                        8: '8g'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorCoreNum\"} label={<FormattedMessage id=\"executor_core_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1c',\n                                        2: '2c',\n                                        4: '4c',\n                                        8: '8c'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorMemory\"} label={<FormattedMessage id=\"executor_memory\"/>} initialValue={2}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        2: '2g',\n                                        4: '4g',\n                                        8: '8g'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorNum\"} label={<FormattedMessage id=\"executor_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1',\n                                        4: '4',\n                                        8: '8'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"EngineVersion\"} label={<FormattedMessage id=\"engine_version\"/>} initialValue={\"2.1.0\"}>\n                                <Select>\n                                    <Select.Option value={\"2.1.0\"}>2.1.0</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name={\"JarEngineVersion\"} label={<FormattedMessage id=\"jar_engine_version\"/>} initialValue={\"2.1.0-SNAPSHOT\"}>\n                                <Select>\n                                    <Select.Option value={\"2.1.0-SNAPSHOT\"}>2.1.0-SNAPSHOT</Select.Option>\n                                </Select>\n                            </Form.Item>\n\n                        </>\n                    })\n                }\n          </div>\n      </SetupEngineFromCloudContext.Provider>\n    )\n}\n\nexport { SetupEngineFromCloud, SetupEngineFromCloudContext}","import React, {useEffect, useState} from 'react'\nimport {Form, Input, Result, Select} from 'antd'\nimport {FormattedMessage} from 'react-intl'\nimport {useUserConfig} from \"../../analysis/common/pages/useUserConfig\";\nimport UIMaker from \"../../UIMaker\";\nimport {EngineSelectComp} from \"./EngineSelectComp\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n}\n\nconst DeleteCloudEngine = (props: Props) => {\n\n    const [engine, setEngine] = useState(\"\")\n    const [engines, setEngines] = useState<string[]>([])\n    const [errorDetail,setErrorDetail] = useState<string>(\"\")\n\n\n    useEffect(() => {\n        const fetch = async () => {\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_LIST, {})\n            if (res.status === 200) {\n                const temp = res.content as {data: Array<string>}\n                setEngines(temp.data)\n            }\n        }\n        fetch()\n    }, [])\n\n\n    const {ui, setError, setSuccess, getParams, setLoading} = useUserConfig()\n    const submit = async () => {\n        setError(\"\")\n        setErrorDetail(\"\")\n        setLoading(true)\n        if(!engine){\n            setError(\"a_5\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.CLOUD_DELETE_ENGINE, {owner:engine})\n        if (res.status === 200) {\n            setSuccess(\"delete_success\")\n        } else {\n            setError(\"delete_fail\")\n            setErrorDetail(res.content)\n        }\n        setLoading(false)\n    }\n\n    const engineNames = ()=>{\n        return engines.map((item)=>{\n            return <Select.Option value={item} key={item}>{item}</Select.Option>\n        })\n    }\n\n    const selectChange = async (value:string)=>{\n        setEngine(value)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"delete_cloud_engine\"/>,\n        submit,\n        formItems: <>\n            {errorDetail && <Result\n                status=\"warning\"\n                extra={errorDetail}\n            />}\n            <Form.Item name={\"name\"} label={<FormattedMessage id={\"a_6\"}/>}>\n                <Select onChange={selectChange}>\n                    {engineNames()}\n                </Select>\n            </Form.Item>\n        </>\n    })\n\n}\n\nexport {DeleteCloudEngine}","import React, {useEffect, useState} from 'react'\nimport {Button, Card, Divider, Form, List, Select} from 'antd'\nimport {FormattedMessage} from 'react-intl'\nimport AlertBox from \"../../AlertBox\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n}\ninterface EngineCreateStatusResp {\n    status:number,\n    message: Array<string>,\n}\n\nconst EngineLog = (props: Props) => {\n\n    const [form] = Form.useForm()\n    const [data,setData] = useState<Array<string>>([])\n    const [logMsg,setLogMsg] = useState<Array<string>>([])\n    const formItemLayout = {\n        labelCol: {span: 6},\n        wrapperCol: {span: 14},\n    };\n\n    useEffect(() => {\n        const fetch = async () => {\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_LIST, {})\n            if (res.status === 200) {\n              const temp = res.content as {data: Array<string>}\n              setData(temp.data)\n            }\n        }\n        fetch()\n    }, [])\n\n    const engines = ()=>{\n        return data.map((item)=>{\n            return <Select.Option value={item} key={item}>{item}</Select.Option>\n        })\n    }\n\n    const selectChange = async (value:string)=>{\n        const proxy = new ActionProxy()\n        const res = await proxy.get(RemoteAction.CLOUD_ENGINE_STATUS, {owner: value})\n        if (res.status === 200) {\n            const temp = res.content as EngineCreateStatusResp\n            setLogMsg(temp.message)\n        }\n    }\n\n    const ui = () => {\n        return (\n            <>\n                <div className=\"common-margin common-child-center\" {...formItemLayout}>\n                    <Card title={<FormattedMessage id={\"cloud_engine_log\"}/>} style={{width: \"70%\"}}>\n                        <Form form={form}>\n                            <Form.Item name={\"name\"} label={<FormattedMessage id={\"a_3\"}/>}>\n                                <Select onChange={selectChange}>\n                                    {engines()}\n                                </Select>\n                            </Form.Item>\n                            <Divider orientation=\"left\"><FormattedMessage id={\"a_6\"}/></Divider>\n                            <List\n                                bordered\n                                dataSource={logMsg}\n                                renderItem={item => (\n                                    <List.Item>\n                                        {item}\n                                    </List.Item>\n                                )}\n                            />\n                        </Form>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n\n    return ui()\n\n}\n\nexport {EngineLog}","import React,{useEffect,useState} from 'react'\nimport {Button, Card, Divider, Form, Input, List, Result, Select, Switch} from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport AlertBox from \"../../AlertBox\";\ninterface Props {   \n}\n\nconst RegisterEngine = (props:Props) => {\n    \n    const [form] = Form.useForm()\n    const [error,setError] = useState(\"\")\n    const [success,setSuccess] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    useEffect(()=>{\n        // const fetch = async()=>{          \n        // }\n        // fetch()\n       },[])\n\n    const submit = async ()=>{\n        setError(\"\")\n        setSuccess(\"\")\n        const proxy = new ActionProxy()\n        const params = form.getFieldsValue()\n        const res = await proxy.post(RemoteAction.ENGINE_REGISTER,params)\n        if(res.status === 200){\n            setSuccess(\"success\")\n        }else {\n            setError(res.content)\n        }\n\n    }\n\n    const ui = () => {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <>\n                <div className=\"common-margin common-child-center\" {...formItemLayout}>\n                    <Card title={<FormattedMessage id={\"a_8\"}/>} style={{width: \"70%\"}}>\n                        <Form form={form}>\n                            {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                            {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                            <Form.Item name={\"name\"} label={<FormattedMessage id=\"name\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"url\"} label={<FormattedMessage id=\"url\"/>} >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"home\"} label={<FormattedMessage id=\"home\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"consoleUrl\"} label={<FormattedMessage id=\"consoleUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"fileServerUrl\"} label={<FormattedMessage id=\"fileServerUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"authServerUrl\"} label={<FormattedMessage id=\"authServerUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item valuePropName=\"checked\"  initialValue={true} name={\"skipAuth\"} label={<FormattedMessage id=\"skipAuth\"/>} >\n                                <Switch  />\n                            </Form.Item>\n                            <Form.Item name={\"extraOpts\"} label={<FormattedMessage id=\"extraOpts\"/>} initialValue={\"{}\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"accessToken\"} label={<FormattedMessage id=\"accessToken\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" loading={loading} onClick={\n                                    submit\n                                }><FormattedMessage id=\"apply\" /></Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n\n    return ui()\n    \n}\n\nexport { RegisterEngine }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\nimport { FormattedMessage } from 'react-intl';\nimport { ApplyTimeout } from './ApplyTimeout';\nimport ChangePassword from './ChangePassword';\nimport { Teams } from './Teams';\nimport { MySQL } from '../../../analysis/datasource/pages/MySQL';\nimport { ListMySQL } from '../../../analysis/datasource/pages/ListMySQL';\nimport {SetupEngineFromCloud} from \"../../pages/SetupEngineFromCloud\";\nimport {DeleteCloudEngine} from \"../../pages/DeleteCloudEngine\";\nimport {EngineLog} from \"../../pages/EngineLog\";\nimport {RegisterEngine} from \"../../pages/RegisterEngine\";\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage, setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['default-backend']}\n                    defaultOpenKeys={['analysis-workshop']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"analysis-workshop\"\n                        title={\n                            <span>\n                                <MailOutlined />\n                                <span><FormattedMessage id=\"analysis_workshop\" /></span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"default-backend\" onClick={() => {\n                            setCurrentPage(\"default-backend\")\n                        }}><FormattedMessage id=\"set_engine\" /></Menu.Item>\n                        <Menu.Item key=\"set-timeout\" onClick={() => {\n                            setCurrentPage(\"set-timeout\")\n                        }}><FormattedMessage id=\"set_timeout\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"user\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"user_settings\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"change-admin-password\"\n\n\n                            onClick={() => {\n                                setCurrentPage(\"change-admin-password\")\n                            }}><FormattedMessage id=\"change_password\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"team\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"team\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"team_manager\"\n                            onClick={() => {\n                                setCurrentPage(\"team_manager\")\n                            }}><FormattedMessage id=\"team_manager\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"datasource\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"datasource\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"mysql\")\n                            }}><FormattedMessage id=\"connect_mysql\" /></Menu.Item>\n                        <Menu.Item key=\"list_mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"list_mysql\")\n                            }}><FormattedMessage id=\"list_mysql\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"aliyun_cloud_engine\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"aliyun_cloud_engine\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"create_cloud_engine\"\n                                   onClick={() => {\n                                       setCurrentPage(\"create_cloud_engine\")\n                                   }}><FormattedMessage id=\"create_cloud_engine\" /></Menu.Item>\n                        <Menu.Item key=\"delete_cloud_engine\"\n                                   onClick={() => {\n                                       setCurrentPage(\"delete_cloud_engine\")\n                                   }}><FormattedMessage id=\"delete_cloud_engine\" /></Menu.Item>\n                        <Menu.Item key=\"cloud_engine_log\"\n                                   onClick={() => {\n                                       setCurrentPage(\"cloud_engine_log\")\n                                   }}><FormattedMessage id=\"cloud_engine_log\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"a_7\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"a_7\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"a_8\"\n                                   onClick={() => {\n                                       setCurrentPage(\"a_8\")\n                                   }}><FormattedMessage id=\"a_8\" /></Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"default-backend\" && <DefaultBackend />}\n                {currentPage === \"set-timeout\" && <ApplyTimeout />}\n                {currentPage === \"change-admin-password\" && <ChangePassword></ChangePassword>}\n                {currentPage === \"team_manager\" && <Teams></Teams>}\n                {currentPage === \"mysql\" && <MySQL />}\n                {currentPage === \"list_mysql\" && <ListMySQL />}\n                {currentPage === \"create_cloud_engine\" && <SetupEngineFromCloud />}\n                {currentPage === \"delete_cloud_engine\" && <DeleteCloudEngine />}\n                {currentPage === \"cloud_engine_log\" && <EngineLog />}\n                {currentPage === \"a_8\" && <RegisterEngine />}\n            </div>\n        </div>\n    )\n}\nexport { Settings }","import React,{useEffect,useState} from 'react'\ninterface Props {   \n}\n\nconst Doc = (props:Props) => {\n\n    return (\n        <>\n            <iframe\n                sandbox=\"allow-scripts\"\n                style={{width: '100%', height: \"600px\"}}\n                src={\"http://docs.mlsql.tech/mlsql-console/\"}\n                frameBorder=\"0\"\n                scrolling=\"yes\"\n            />\n        </>\n    )\n    \n}\n\nexport { Doc }","import React,{useEffect,useState} from 'react'\nimport UIMaker from \"../../UIMaker\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\ninterface Props {\n    url:string\n}\n\nconst EngineUI = (props:Props) => {\n    const [data, setData] = useState(\"\")\n    useEffect(() => {\n        const fetch = async () => {\n            const backend = UIMaker.extraOption()[\"backend\"]\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if(backend){\n                const backends = res.content.data as Array<{url:string,name:string}>\n                const url = backends.filter((item)=>{\n                    return item.name === backend\n                })[0].url\n                setData(url.split(\":\")[0]+\":\"+url.split(\":\")[1]+\":4040\")\n            }\n        }\n        fetch()\n    }, [])\n    return (\n        <>\n            {\n                data &&  <iframe\n                    sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                    style={{width: '100%', height: \"600px\"}}\n                    src={data}\n                    frameBorder=\"0\"\n                    scrolling=\"yes\"\n                />\n            }\n        </>\n    )\n    \n}\n\nexport { EngineUI }","import React, {useState, useCallback, useEffect} from 'react';\nimport {Button, Card, Form, Popconfirm, Table} from \"antd\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport moment from \"moment\";\nimport {FormattedMessage} from \"react-intl\";\n\ninterface MlsqlIndexer {\n    id: number;\n    name: string;\n    status: number;\n    lastStatus: number;\n    lastFailMsg: string;\n    lastExecuteTime: number;\n    interval: number;\n    content: string;\n    indexerConfig: string;\n}\n\nexport function IndexList() {\n    const [result, setResult] = useState<Array<MlsqlIndexer>>([])\n    const loadIndexers = async () => {\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.INDEXER_LIST, {})\n        if (res.status === 200) {\n            const value = res.content as Array<MlsqlIndexer>\n            setResult(value)\n        }\n    }\n    const removeIndexer = async (name: string) => {\n        const proxy = new ActionProxy()\n        await proxy.post(RemoteAction.INDEXER_REMOVE, {\n            name\n        })\n        loadIndexers()\n    }\n    useEffect(() => {\n        loadIndexers()\n    }, [])\n\n    return <div className=\"common-margin common-child-center\">\n        <Table dataSource={result}>\n            <Table.Column title=\"索引名称\" dataIndex=\"name\" key=\"name\"/>\n            <Table.Column title=\"索引模式\"  dataIndex=\"syncInterval\" key=\"syncInterval\" render={(value, record, index) => {\n                if (value === -1) {\n                    return <>流式</>\n                }\n                if (value > 0) {\n                    return <>批式</>\n                }\n                if (value === 0) {\n                    return <>一次性</>\n                }\n                return <></>\n            }}/>\n            <Table.Column title=\"上一次索引时间\" dataIndex=\"lastExecuteTime\" key=\"lastExecuteTime\"\n                          render={(value, record, index) => {\n\n                              let deltaSec = (new Date().getTime() - value) / 1000\n                              let deltaStr = \"(\" + deltaSec + \"秒)\"\n                              if (deltaSec > 60) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / 60) + \"分前)\"\n                              }\n                              if (deltaSec > 3600) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / 3600) + \"时前)\"\n                              }\n                              if (deltaSec > 3600 * 24) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / (3600 * 24)) + \"天前)\"\n                              }\n                              const date = new Date(value);\n\n                              return <>{moment(date).format(\"YYYY-MM-DD hh:mm:ss\") + deltaStr}</>\n                          }}/>\n\n            <Table.Column title=\"上一次索引状态\" dataIndex=\"lastStatus\" key=\"lastStatus\" render={(value, record, index) => {\n                if (value === 0) {\n                    return <>索引完成</>\n                }\n                if (value === 1) {\n                    return <>索引失败</>\n                }\n                return <></>\n            }}/>\n\n            <Table.Column title=\"上一次索引信息\" width=\"200\"\n                          ellipsis={{showTitle: true}} dataIndex=\"lastFailMsg\" key=\"lastFailMsg\"\n                          render={(value, record, index) => {\n                              return <>{value}</>\n                          }}/>\n\n            <Table.Column title=\"操作\" dataIndex=\"operate\" key=\"operate\"\n                          render={(value, record, index) => {\n                              return <>\n                                  <Popconfirm\n                                      title=\"确认要删除该索引么？\"\n                                      okText=\"Yes\"\n                                      cancelText=\"No\"\n                                      onConfirm={() => {\n                                          removeIndexer((record as { name: string }).name)\n                                      }}\n                                  >\n                                      <Button>删除</Button>\n                                  </Popconfirm>\n                              </>\n                          }}/>\n\n\n        </Table>\n    </div>\n}\n\n\n\n\n","import React, {useState, useCallback, useEffect} from 'react';\nimport {Button, Card, Form, Input, Modal, Select, Spin, Switch, Tooltip, Tree} from \"antd\";\nimport {FormattedMessage} from \"react-intl\";\nimport AlertBox from \"../../AlertBox\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport {TableOutlined} from \"@ant-design/icons\";\nimport {MysqlTreeActionNames} from \"../../analysis/datasource/actions/MysqlTreeReducer\";\nimport {useMySQLPartition} from \"../../analysis/datasource/pages/useMySQLPartition\";\n\nconst {DirectoryTree} = Tree\n\ninterface TreeItem {\n    name: string;\n    title: string;\n    isLeaf: boolean;\n    tables: Array<TreeItem>;\n\n    children: Array<object>;\n    key: string;\n    id: string;\n}\n\ninterface TablePartition {\n    partitionColumn: string;\n    lowerBound: number;\n    upperBound: number;\n    partitionNumValue: number;\n    dbName: string;\n    tableName: string;\n}\n\ninterface Engine {\n    name: string;\n}\n\nexport function CreateIndexer() {\n    const formItemLayout = {\n        labelCol: {span: 6},\n        wrapperCol: {span: 14},\n    };\n    const [form] = Form.useForm()\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [confirm, setConfirm] = useState(false)\n    const [dbs, setDbs] = useState<Array<any>>([])\n    const [table, setTable] = useState<{ dbName: string, tableName: string } | null>(null)\n    const [tp, setTp] = useState<TablePartition | null>(null)\n    const [engines, setEngines] = useState<Array<Engine>>([])\n    const {ui: PartitionUI, form: partitionForm, setOpenTable, setError: setPartitionError, partitionNumValue} = useMySQLPartition()\n    const [enableSyncInterval, setEnableSyncInterval] = useState<boolean>(false)\n\n    const fetch = async () => {\n        const proxy = new ActionProxy()\n        const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n        const treeData = res.content.data.map((item: TreeItem) => {\n            item.key = item.name\n            item.title = item.name\n            item.isLeaf = false\n            item.children = item.tables.map(table => {\n                return {\n                    id: `${item.name}.${table.name}`,\n                    key: `${item.name}.${table.name}`,\n                    title: table.name,\n                    isLeaf: true,\n                    icon: <TableOutlined/>\n                }\n            })\n            return item\n        })\n        const engineResp = await proxy.get(RemoteAction.ENGINE_LIST, {})\n        if (engineResp.status == 200) {\n            const items = engineResp.content.data as Array<Engine>\n            setEngines(items)\n        }\n        setDbs(treeData)\n    }\n    useEffect(() => {\n        fetch()\n    }, [])\n\n    const submit = async () => {\n        setSuccess(\"\")\n        setError(\"\")\n        const proxy = new ActionProxy()\n        const params = form.getFieldsValue()\n        if (params[\"syncInterval\"] === \"mysql\" && !params[\"idCols\"]) {\n            setError(\"idCols is required\")\n            return\n        }\n        const newparams = Object.assign(params, tp)\n        const res = await proxy.post(RemoteAction.MYSQL_INDEXER_CREATE, newparams)\n        if (res.status === 200) {\n            setSuccess(\"success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n\n    return <>\n        <div className=\"common-margin common-child-center\" {...formItemLayout}>\n            <Card title={<FormattedMessage id={\"create_indexer\"}/>} style={{width: \"70%\"}}>\n                <Form form={form}>\n                    <Modal\n                        title={<FormattedMessage id=\"mysql_parallel\"/>}\n                        visible={confirm}\n                        onCancel={() => {\n                            partitionForm.resetFields()\n                            setConfirm(false)\n                        }}\n                        onOk={() => {\n                            const partitionValues = partitionForm.getFieldsValue()\n                            const {partitionColumn, lowerBound, upperBound} = partitionValues\n                            if (partitionColumn) {\n                                if (!lowerBound || !upperBound && partitionNumValue) {\n                                    setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                                    return\n                                }\n                            }\n\n                            setTp({\n                                partitionColumn,\n                                lowerBound,\n                                upperBound,\n                                partitionNumValue,\n                                dbName: table?.dbName || \"\",\n                                tableName: table?.tableName || \"\"\n                            })\n\n                            partitionForm.resetFields()\n                            setConfirm(false)\n                        }}\n                        cancelText=\"Cancel\"\n                        okText=\"Ok\">\n                        <PartitionUI/>\n                    </Modal>\n                    {error && <AlertBox message={<FormattedMessage id={error}/>}/>}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\"\n                                          message={<FormattedMessage id={success}/>}/>}\n                    <Form.Item name={\"_name\"}>\n                        <Spin tip=\"Loading...\" spinning={loading}>\n                            <DirectoryTree height={700}\n                                           treeData={dbs}\n                                           expandAction=\"click\"\n                                           onDoubleClick={(evt, node) => {\n                                               if (!node.isLeaf) {\n                                                   return\n                                               }\n                                               const [dbName, tableName] = (node.key as string).split(\".\")\n                                               setTable({dbName, tableName})\n                                               setOpenTable(node.key as string)\n                                               setConfirm(true)\n                                           }} onRightClick={({event, node}) => {\n                            }}>\n                            </DirectoryTree>\n                        </Spin>\n                    </Form.Item>\n                    <Form.Item name={\"name\"} label={<FormattedMessage id=\"数据库表\"/>}>\n                        <span>{table ? table.dbName + \".\" + table.tableName : \"未选择\"}</span>\n                    </Form.Item>\n\n                    <Form.Item name={\"indexerType\"} label={<FormattedMessage id=\"索引类型\"/>}>\n                        <Select onChange={(value, option) => {\n                            if (value === \"parquet\") {\n                                setEnableSyncInterval(true)\n                            }\n                            if (value === \"mysql\") {\n                                setEnableSyncInterval(false)\n                            }\n                        }}>\n                            <Select.Option value={\"mysql\"}>实时</Select.Option>\n                            <Select.Option value={\"parquet\"}>定时</Select.Option>\n                        </Select>\n                    </Form.Item>\n\n                    {\n                        enableSyncInterval ?\n                            <Form.Item name={\"syncInterval\"} label={<FormattedMessage id=\"同步周期(d/h/m)\"/>}>\n                                <Input/>\n                            </Form.Item> : <></>\n                    }\n\n                    {\n                        !enableSyncInterval ?\n                            <Form.Item name={\"idCols\"} label={<FormattedMessage id=\"标识唯一组合键\"/>}>\n                                <Input/>\n                            </Form.Item> : <></>\n                    }\n\n                    <Form.Item name={\"engineName\"} label={<FormattedMessage id=\"选择构建索引的引擎\"/>}>\n                        <Select>\n                            {\n\n                                engines.map(item => {\n                                    return <Select.Option value={item.name}>{item.name}</Select.Option>\n                                })\n                            }\n                        </Select>\n                    </Form.Item>\n\n                    {/*<Form.Item name={\"desc\"}>*/}\n                    {/*    <pre>*/}\n                    {/*             第一次创建索引系统会分成两个阶段完成：*/}\n                    {/*             1. 拉取全量数据，构建索引，期间有可能导致MySQL负载较重。建议从库，也可以重新选择然后重新调整并行度。*/}\n                    {/*             2. 全量索引完成后，会自动通过binlog拉取，不会对MySQL造成影响。*/}\n                    {/*    </pre>*/}\n                    {/*</Form.Item>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" loading={loading} onClick={\n                            submit\n                        }><FormattedMessage id=\"apply\"/></Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    </>\n}\n\n\n\n\n","import React, {useState, useCallback, useEffect} from 'react';\nimport {Menu} from 'antd';\nimport {MailOutlined, SettingOutlined} from '@ant-design/icons';\nimport {FormattedMessage} from \"react-intl\";\nimport {IndexList} from \"./indexmanager/IndexerList\";\nimport {CreateIndexer} from \"./indexmanager/CreateIndexer\";\nimport {OtherIndexList} from \"./other_indexmanager/OtherIndexerList\";\nimport {OtherCreateIndexer} from \"./other_indexmanager/OtherCreateIndexer\";\n\n\nconst {SubMenu} = Menu;\n\nfunction IndexManager() {\n    const [currentPage, setCurrentPage] = useState(\"indexer_list\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{width: 256}}\n                    defaultSelectedKeys={['indexer_list']}\n                    defaultOpenKeys={['mysql_indexer_manager']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"mysql_indexer_manager\"\n                        title={<span><MailOutlined/><span><FormattedMessage id=\"mysql_indexer_manager\"/></span>\n        </span>\n                        }\n                    >\n                        <Menu.Item key=\"indexer_list\" onClick={() => {\n                            setCurrentPage(\"indexer_list\")\n                        }}><FormattedMessage id=\"indexer_list\"/></Menu.Item>\n\n                        <Menu.Item key=\"create_indexer\" onClick={() => {\n                            setCurrentPage(\"create_indexer\")\n                        }}><FormattedMessage id=\"create_indexer\"/></Menu.Item>\n\n                    </SubMenu>\n                    <SubMenu\n                        key=\"other_indexer_manager\"\n                        title={<span><MailOutlined/><span><FormattedMessage id=\"other_indexer_manager\"/></span>\n        </span>\n                        }\n                    >\n                        {/*<Menu.Item key=\"indexer_list2\" onClick={() => {*/}\n                        {/*    setCurrentPage(\"indexer_list2\")*/}\n                        {/*}}><FormattedMessage id=\"indexer_list2\"/></Menu.Item>*/}\n\n                        {/*<Menu.Item key=\"create_indexer2\" onClick={() => {*/}\n                        {/*    setCurrentPage(\"create_indexer2\")*/}\n                        {/*}}><FormattedMessage id=\"create_indexer2\"/></Menu.Item>*/}\n\n                    </SubMenu>\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"indexer_list\" && <IndexList/>}\n                {currentPage === \"create_indexer\" && <CreateIndexer/>}\n                {/*{currentPage === \"indexer_list2\" && <OtherIndexList/>}*/}\n                {/*{currentPage === \"create_indexer2\" && <OtherCreateIndexer/>}*/}\n            </div>\n        </div>\n    )\n}\n\nexport {IndexManager}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport { Settings } from './admin/pages/Settings';\nimport {Doc} from \"./pages/Doc\";\nimport {EngineUI} from \"./pages/EgnineUI\";\nimport {IndexManager} from \"../app/IndexManager\";\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole(props) {\n    const {appInfo} = props\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>            \n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader appInfo={appInfo} userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"indexer_manager\" && logined && <IndexManager></IndexManager>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                    {currentPage === \"doc\" && <Doc></Doc>}\n                    {currentPage === \"engine\" && logined && <EngineUI></EngineUI>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>        \n\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input/>\n        </Form.Item>\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item\n            label=\"Access Token\"\n            name=\"accessToken\"            \n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","const zh_CN = {    \n    login: \"登录\",\n    register: \"注册\",\n    console: \"控制台\",\n    analysis_workshop: \"分析工坊\",\n    settings: \"设置\",\n    admin: \"管理员\",\n    more: \"更多\",\n    apply: \"应用\",\n    set_default_backend: \"设置默认Engine\",\n    set_default_backend_error: \"请选择一个引擎进行设置\",\n    set_engine: \"设置引擎\",\n    curent_value: \"当前值\",\n    choose: \"选择\",\n    done: \"完成\",\n    congratulation: \"恭喜\",\n    set_timeout: \"超时设置\",\n    set_apply_timeout: \"设置【应用】超时（单位秒）\",\n    table_workshop: \"暂存区\",\n    delta_lake: \"数据湖\",\n    file_system: \"文件系统\",\n    project: \"字段\",\n    filter: \"过滤\",\n    join: \"关联\",\n    window: \"窗口\",\n    dash: \"可视化\",\n    limit: \"条数\",\n    agg: \"聚合\",\n    order: \"排序\",\n    select_columns: \"筛选字段\",\n    rename_columns: \"重命名字段\",\n    transform_columns: \"转换字段\",\n    cast_columns_type: \"修改字段类型\",\n    hive: \"数仓\",\n    operate_panel: \"操作区\",\n    data_panel:\"数据区\",\n    user_settings:\"用户设置\",\n    change_password:\"修改密码\",\n    team:\"团队\",\n    team_manager: \"团队管理\",\n    datasource: \"数据源\",\n    analysis_range: \"请选择表分析区间\",\n    table_start: \"选择开始区间[包含]\",\n    table_end: \"选择结束区间[包含]\",\n    table_random: \"选择任意值\",\n    or: \"或者\",\n    no_partition_msg: \"该表没有分区信息。请直接点击【确认】\",\n    ds_mysql: \"MySQL管理\",\n    host: \"主机名\",\n    port: \"端口\",    \n    db: \"数据库名\",\n    user: \"用户名\",\n    password: \"密码\",\n    alias: \"别名\",\n    connect_mysql: \"连接 MySQL\",\n    list_mysql: \"MySQL列表\",\n    mysql: \"MySQL\",\n    partitionColumn:\"分区列\",\n    lowerBound:\"最低值\",\n    upperBound:\"最大值\",\n    numPartitions:\"分区数\",\n    mysql_parallel:\"MySQL打开并行度设置\",\n    no_mysql_parallel:\"该表没有数字类型的列，无法设置并行度。请直接点击【确定】\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"选择Json字段\",\n    json_fields: \"Json字段展开\",\n    union:\"合并\",\n    union_table:\"待合并的表\",\n    pivot: \"透视表\",\n    column_left: \"行列\",\n    column_header: \"表头列\",\n    column_sum: \"统计列\",\n    drag_column: \"拖拽列到这里\",\n    drop_column: \"在这里释放\",\n    plugin: \"插件\",\n    input_message:\"填写信息\",\n    engine_name: \"引擎名称\",\n    access_key_id: \"AccessKeyID\",\n    access_key_secret: \"AccessKeySecret\",\n    oss_access_key_id: \"OSS AccessKeyID\",\n    oss_access_key_secret: \"OSS AccessKeySecret\",\n    regin_id: \"阿里云区\",\n    endpoint_public_access: \"是否有公网IP\",\n    k8s_address: \"阿里云ASK地址\",\n    driver_core_num: \"引擎Driver CPU数\",\n    driver_memory: \"引擎Driver 内存\",\n    executor_core_num: \"引擎单Executor CPU数\",\n    executor_memory: \"引擎单Executor 内存\",\n    executor_num: \"引擎单Executor数目\",\n    engine_version: \"引擎版本\",\n    jar_engine_version: \"引擎Jar包版本\",\n    \"Name is required\": \"引擎名称必须填写\",\n    \"AccessKeyID/AccessKeySecret is required\": \"AccessKeyID/AccessKeySecret必须填写\",\n    \"OSSBucket is required\": \"OSSBucket 字段必须填写\",\n    delete_cloud_engine:\"删除云引擎\",\n    create_cloud_engine:\"创建云引擎\",\n    aliyun_cloud_engine: \"在阿里云创建引擎\",\n    cloud_engine_name:\"云引擎名称\",\n    delete_fail:\"删除失败\",\n    delete_success: \"删除成功\",\n    aliyun_related: \"阿里云相关\",\n    cluster_related: \"集群规模相关\",\n    a_1: \"该功能为测试版\",\n    a_2: `使用该功能时，用户可以先创建一个具有阿里云容器服务完全掌控权限的临时Token以及秘钥，\n    系统会自动在你的账号下创建一套MLSQL Engine实例。\n    该实例依托阿里云 ASK服务。用户可以在阿里云容器服务控制台查看到系统自动创建的K8s集群以及之上的MLSQL Engine实例。\n    创建完完成后，为了保证安全，用户可以删除对应的临时Token和秘钥。用户可以手动在阿里云上删除ASK以及MLSQL Engine实例，也可以通过我们的管理服务来删除。`,\n    cloud_engine_log:\"查看系统日志\",\n    a_3:\"选择任务名称\",\n    a_4: \"日志信息(自动刷新中，稍候)\",\n    a_5: \"请选择引擎名称\",\n    a_6: \"日志信息\",\n    a_7: \"引擎列表\",\n    a_8: \"新注册\",\n    indexer_manager: \"索引管理\",\n    indexer_list: \"索引列表\",\n    create_indexer: \"创建索引\",\n    mysql_indexer_manager:\"MySQL数据库索引管理\",\n    other_indexer_manager:\"其他数据源索引管理\"\n\n    \n}\nexport default zh_CN;","const en_US = {\n    login: \"Login\",\n    register: \"Register\",\n    console: \"Console\",\n    analysis_workshop: \"Analysis Workshop\",\n    settings: \"Settings\",\n    admin: \"Admin\",\n    more: \"More\",\n    apply: \"Apply\",\n    set_default_backend: \"Set Default Backend\",\n    set_default_backend_error: \"Please select at least one engine\",\n    set_engine: \"Set Engine\",\n    curent_value: \"Current Value\",\n    choose: \"Choose\",\n    done: \"Done\",\n    congratulation: \"Congratulation\",\n    set_timeout: \"Set Timout\",\n    set_apply_timeout: \"Set  [Apply] Timeout（Unit: Second）\",\n    table_workshop: \"Table Workshop\",\n    delta_lake: \"DeltaLake\",\n    file_system: \"FileSystem\",\n    project: \"Project\",\n    filter: \"Filter\",\n    join: \"Join\",\n    order: \"Order\",\n    window: \"Window\",\n    dash: \"Dash\",\n    agg: \"Agg\",\n    limit: \"Limit\",\n    select_columns: \"Select Columns\",\n    rename_columns: \"Rename Columns\",\n    transform_columns: \"Transform Columns\",\n    cast_columns_type: \"Cast Column Type\",\n    hive: \"Hive\",\n    operate_panel: \"Operate Panel\",\n    data_panel: \"Data Panel\",\n    user_settings: \"User Settings\",\n    change_password: \"Change Password\",\n    team: \"Team\",\n    team_manager: \"Team Control\",\n    datasource: \"Data Source\",\n    analysis_range: \"Select Table Range\",\n    table_start: \"Select start value\",\n    table_end: \"Select end value\",\n    table_random: \"Select values\",\n    or: \"Or\",\n    no_partition_msg: \"This table have no partition message. Please click Ok.\",\n    ds_mysql: \"MySQL\",\n    host: \"Host\",\n    port: \"Port\",\n    db: \"Database Name\",\n    user: \"User Name\",\n    password: \"Password\",\n    alias: \"Alias\",\n    connect_mysql: \"Connect MySQL\",\n    list_mysql: \"MySQL List\",\n    mysql: \"MySQL\",\n    partitionColumn:\"partitionColumn\",\n    lowerBound:\"lowerBound\",\n    upperBound:\"upperBound\",\n    numPartitions:\"numPartitions\",\n    mysql_parallel:\"MySQL Parallel\",    \n    no_mysql_parallel:\"No number columns in this table, Please click [Ok]\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"Choose Json Field\",\n    json_fields: \"Expand Json\",\n    union:\"Union\",\n    aliyun_message:\"Aliyun Message\",\n    submit_task_success:\"任务提交成功\",\n}\nexport default en_US","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ConfigProvider } from 'antd';\nimport {IntlProvider} from \"react-intl\"\nimport zh_CN from './locale/zh_CN';\nimport en_US from './locale/en_US';\nimport AntZhCN from 'antd/lib/locale-provider/zh_CN';\n\nconst initState = {\n    appConfigured: false,\n    loading: true,\n    lang: \"zh\",\n    enableConsole: false\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading,lang,enableConsole } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { \n                    appConfigured: appInfo.content.configured, \n                    enableConsole: appInfo.content.console || false, \n                    loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <IntlProvider locale={lang} messages={zh_CN}>\n        <ConfigProvider locale={AntZhCN}>\n            <AppContext.Provider value={{ dispacher }}>                \n                {loading && <SpinBox />}\n                {!loading && !appConfigured && <AppSetup />}\n                {!loading && appConfigured && <AppConsole appInfo={{enableConsole}}/>}\n            </AppContext.Provider>\n        </ConfigProvider>\n        </IntlProvider>\n\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n    static ANALYSIS_TABLE_DELETE = \"/api_v1/analysis/table/delete\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_REGISTER = \"/api_v1/engine/register\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n    static ENGINE_REMOVE = \"/api_v1/engine/remove\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static ANALYSIS_PLUGIN_LIST = \"/api_v1/script_file/plugins\"\n    static ANALYSIS_PLUGIN_GET = \"/api_v1/script_file/plugin/get\"\n    static ANALYSIS_PLUGIN_PUBLISH = \"/api_v1/script_file/plugin/publish\"\n    static SCRIPT_SHARE_PUBLIC = \"/api_v1/script_file/share\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n    static USER_CHANGE_PASSWORD = \"/api_v1/changepassword\"\n\n    static APPLY_GET = \"/api_v1/analysis/apply\"\n\n    static TEMA_LIST = \"/api_v1/team\" \n    \n    static DS_ADD = \"/api_v1/ds/add\" \n    static DS_LIST = \"/api_v1/ds/list\"\n    static DS_REMOVE = \"/api_v1/ds/remove\" \n\n    static DS_MYSQL_DBS= \"/api_v1/ds/mysql/dbs\"\n\n    static DS_MYSQL_CONNECT = \"/api_v1/ds/mysql/connect/get\"\n    static DS_MYSQL_COLUMN_INFO = \"/api_v1/ds/mysql/column\"\n\n    static CLOUD_CREATE_ENGINE = \"/api_v1/proxy/api/create_engine\"\n    static CLOUD_DELETE_ENGINE = \"/api_v1/proxy/api/delete_engine\"\n    static CLOUD_ENGINE_STATUS = \"/api_v1/proxy/api/status\"\n    static CLOUD_ENGINE_LIST = \"/api_v1/proxy/api/list\"\n\n    static INDEXER_LIST = \"/api_v1/indexer\"\n    static MYSQL_INDEXER_CREATE = \"/api_v1/indexer/mysql/build\"\n    static INDEXER_REMOVE = \"/api_v1/indexer/remove\"\n\n}","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}